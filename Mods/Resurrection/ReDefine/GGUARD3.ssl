variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure Node998;
procedure Node999;
procedure Node_access;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1300;
procedure Node1350;
procedure Node2850;
procedure Node2900;
procedure Node2950;
procedure Node3000;
procedure Node3050;
procedure Node3100;

import variable Guard_3;
import variable Elev_door_L3Y;
import variable ghoul13_map;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    Guard_3 := self_obj;
end

procedure critter_p_proc
begin
    if ((((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) and (not((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) or (obj_pid(critter_inven_obj(party_member_obj(16777779), INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(party_member_obj(16777779), INVEN_TYPE_WORN)) == 113)) and (not((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) or (obj_pid(critter_inven_obj(party_member_obj(16777811), INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(party_member_obj(16777811), INVEN_TYPE_WORN)) == 113)) and (not((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) or (obj_pid(critter_inven_obj(party_member_obj(16777814), INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(party_member_obj(16777814), INVEN_TYPE_WORN)) == 113)) and (global_var(GVAR_G_HUNTERS_COUNTER) == 0)) == 0) and not(game_ui_is_disabled) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
    if ((global_var(GVAR_ENEMY_OBRODA) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
    if ((map_var(1) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
        float_msg(self_obj, mstr(301), FLOAT_MSG_RED);
        set_map_var(1, 0);
        attack(dude_obj);
    end
    if ((map_var(1) != 0) and (dude_elevation == 2) and (tile_distance_objs(self_obj, dude_obj) > 6)) then begin
        set_map_var(1, 0);
    end
    if ((map_var(0) != 0) and (dude_elevation == 2) and (tile_distance_objs(self_obj, dude_obj) > 6)) then begin
        set_map_var(0, 0);
    end
    if ((map_var(0) == 0) and (dude_elevation == 2) and (tile_distance_objs(self_obj, dude_obj) > 6) and obj_is_open(Elev_door_L3Y)) then begin
        obj_close(Elev_door_L3Y);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_ENEMY_OBRODA, 1);
    end
end

procedure talk_p_proc
begin
    if (map_var(0) != 0) then begin
        float_msg(self_obj, mstr(300), FLOAT_MSG_YELLOW);
    end
    else begin
        anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
        start_gdialog(400, self_obj, 4, -1, -1);
        gsay_start;
        if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) <= 3) then begin
            call Node1000();
        end
        else begin
            call Node500();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(200);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        add_timer_event(ghoul13_map, 0, 13);
        rm_fixed_timer_event(self_obj, 1);
        add_timer_event(self_obj, game_ticks(1), 1);
    end
    if (fixed_param == 10) then begin
        if (global_var(GVAR_ENEMY_OBRODA) == 1) then begin
            attack(dude_obj);
        end
        else begin
            dialogue_system_enter;
        end
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 271);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_OBRODA_GUARD);
    rm_fixed_timer_event(self_obj, 1);
    add_timer_event(self_obj, 1, 1);
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_ENEMY_OBRODA, 1);
    end
end

procedure destroy_p_proc
begin
    Guard_3 := 0;
end

procedure Node998
begin
    set_global_var(GVAR_ENEMY_OBRODA, 1);
end

procedure Node999
begin
    anim(self_obj, 1000, 1);
end

procedure Node_access
begin
    anim(self_obj, 1000, 1);
    set_map_var(0, 1);
end

procedure Node500
begin
    Reply(500);
    if (global_var(GVAR_G_LAST_USED_NAME) == 1) then begin
        if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) then begin
            giq_option(4, NAME, 501, Node550, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 501, Node2850, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_G_LAST_USED_NAME) == 2) then begin
        if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 348) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 349) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 232)) then begin
            giq_option(4, NAME, 502, Node600, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 502, Node2900, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_G_MAX_REGISTRATION) != 0) then begin
        if (global_var(GVAR_G_MAX_REGISTRATION) == 1) then begin
            giq_option(4, NAME, 503, Node650, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 503, Node700, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_G_LAST_USED_NAME) == 4) then begin
        if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 348) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 349) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 232)) then begin
            giq_option(4, NAME, 504, Node750, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 504, Node2950, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_G_LAST_USED_NAME) == 5) then begin
        if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) then begin
            giq_option(4, NAME, 505, Node800, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 505, Node3000, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_G_LAST_USED_NAME) == 6) then begin
        if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) then begin
            giq_option(4, NAME, 506, Node850, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 506, Node3050, NEUTRAL_REACTION);
        end
    end
    if (obj_carrying_pid_obj(dude_obj, 547) or (global_var(GVAR_G_FEARGUS_KNOWN) == 1)) then begin
        if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) then begin
            giq_option(4, NAME, 507, Node900, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 507, Node3100, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_G_CHRIS_KNOWN) == 1) then begin
        giq_option(4, NAME, 508, Node950, NEUTRAL_REACTION);
    end
    if (dude_gender == 0) then begin
        giq_option(4, NAME, dude_name + mstr(509), Node1300, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, dude_name + mstr(510), Node1350, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 511, Node999, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    set_global_var(GVAR_G_LAST_USED_NAME, 1);
    giq_option(4, NAME, 551, Node_access, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600);
    set_global_var(GVAR_G_LAST_USED_NAME, 2);
    giq_option(4, NAME, 601, Node_access, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    set_global_var(GVAR_G_LAST_USED_NAME, 3);
    giq_option(4, NAME, 651, Node998, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    set_global_var(GVAR_G_LAST_USED_NAME, 3);
    giq_option(4, NAME, 701, Node_access, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    set_global_var(GVAR_G_LAST_USED_NAME, 4);
    giq_option(4, NAME, 751, Node_access, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800);
    set_global_var(GVAR_G_LAST_USED_NAME, 5);
    giq_option(4, NAME, 801, Node_access, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850);
    set_global_var(GVAR_G_LAST_USED_NAME, 6);
    giq_option(4, NAME, 851, Node_access, NEUTRAL_REACTION);
end

procedure Node900
begin
    Reply(900);
    set_global_var(GVAR_G_LAST_USED_NAME, 7);
    giq_option(4, NAME, 901, Node_access, NEUTRAL_REACTION);
end

procedure Node950
begin
    Reply(950);
    set_global_var(GVAR_G_LAST_USED_NAME, 8);
    giq_option(4, NAME, 951, Node_access, NEUTRAL_REACTION);
end

procedure Node1000
begin
    Reply(1000);
    if (dude_gender == 0) then begin
        giq_option(-3, NAME, 1001, Node1050, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(-3, NAME, 1001, Node1100, NEUTRAL_REACTION);
    end
end

procedure Node1050
begin
    Reply(1050);
    giq_option(-3, NAME, 1051, Node_access, NEUTRAL_REACTION);
end

procedure Node1100
begin
    Reply(1100);
    giq_option(-3, NAME, 1101, Node_access, NEUTRAL_REACTION);
end

procedure Node1300
begin
    Reply(1300);
    giq_option(4, NAME, 1301, Node998, NEUTRAL_REACTION);
end

procedure Node1350
begin
    Reply(1350);
    giq_option(4, NAME, 1351, Node998, NEUTRAL_REACTION);
end

procedure Node2850
begin
    Reply(2850);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 2851, Node1300, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 2851, Node1350, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2852, Node998, NEUTRAL_REACTION);
end

procedure Node2900
begin
    Reply(2900);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 2901, Node1300, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 2901, Node1350, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2902, Node998, NEUTRAL_REACTION);
end

procedure Node2950
begin
    Reply(2950);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 2951, Node1300, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 2951, Node1350, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2952, Node998, NEUTRAL_REACTION);
end

procedure Node3000
begin
    Reply(3000);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 3001, Node1300, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 3001, Node1350, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3002, Node998, NEUTRAL_REACTION);
end

procedure Node3050
begin
    Reply(3050);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 3051, Node1300, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 3051, Node1350, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3052, Node998, NEUTRAL_REACTION);
end

procedure Node3100
begin
    Reply(3100);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 3101, Node1300, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 3101, Node1350, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3102, Node998, NEUTRAL_REACTION);
end
