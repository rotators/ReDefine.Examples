variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Upgrade_eagle;
procedure Upgrade_hunting;
procedure Upgrade_shotgun;
procedure Upgrade_assault;
procedure Upgrade_revolver;
procedure Upgrade_combatshotgun;
procedure Upgrade_minigun;
procedure Upgrade_flamethrower;
procedure Upgrade_flamefuel;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777958) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777958)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777957) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777957)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778018) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778018)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
end

procedure pickup_p_proc
begin
end

procedure talk_p_proc
begin
    anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    start_gdialog(424, self_obj, 4, -1, -1);
    gsay_start;
    if ((local_var(4) bwand 1) == 0) then begin
        if (dude_iq > 7) then begin
            call Node500();
        end
        else begin
            call Node550();
        end
    end
    else begin
        call Node1050();
    end
    gsay_end;
    end_dialogue;
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(200);
end

procedure timed_event_p_proc
begin
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 271);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANT_NO_MOVE);
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_ENEMY_OBRODA, 1);
    end
end

procedure destroy_p_proc
begin
end

procedure Node999
begin
    anim(self_obj, 1000, 3);
end

procedure Node500
begin
    Reply(500);
    giq_option(4, NAME, 501, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 502, Node999, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    giq_option(4, NAME, 551, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 552, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 553, Node999, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600);
    giq_option(4, NAME, 601, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 602, Node999, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    set_local_var(4, local_var(4) bwor 1);
    if (dude_skill(SKILL_SCIENCE) >= 130) then begin
        giq_option(4, NAME, 651, Node750, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 652, Node999, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    set_local_var(4, local_var(4) bwor 1);
    if (dude_skill(SKILL_SCIENCE) >= 130) then begin
        giq_option(4, NAME, 701, Node750, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 702, Node999, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750 + (dude_gender == 1));
    set_local_var(4, local_var(4) bwor 2);
    giq_option(4, NAME, 752, Node800, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800);
    giq_option(4, NAME, 801, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 802, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 803, Node999, NEUTRAL_REACTION);
end

procedure Node850
begin
    if ((dude_skill(SKILL_REPAIR) >= 130) and (dude_skill(SKILL_SMALL_GUNS) >= 130) and (obj_carrying_pid_obj(dude_obj, 18) or obj_carrying_pid_obj(dude_obj, 10) or obj_carrying_pid_obj(dude_obj, 94) or obj_carrying_pid_obj(dude_obj, 23))) then begin
        Reply(850);
    end
    else begin
        Reply(851);
    end
    if ((dude_skill(SKILL_REPAIR) >= 130) and (dude_skill(SKILL_SMALL_GUNS) >= 130)) then begin
        if (obj_carrying_pid_obj(dude_obj, 18)) then begin
            giq_option(4, NAME, 852, Upgrade_eagle, NEUTRAL_REACTION);
        end
        if (obj_carrying_pid_obj(dude_obj, 10)) then begin
            giq_option(4, NAME, 853, Upgrade_hunting, NEUTRAL_REACTION);
        end
        if (obj_carrying_pid_obj(dude_obj, 94)) then begin
            giq_option(4, NAME, 854, Upgrade_shotgun, NEUTRAL_REACTION);
        end
        if (obj_carrying_pid_obj(dude_obj, 23)) then begin
            giq_option(4, NAME, 855, Upgrade_assault, NEUTRAL_REACTION);
        end
        if (obj_carrying_pid_obj(dude_obj, 313)) then begin
            giq_option(4, NAME, 856, Upgrade_revolver, NEUTRAL_REACTION);
        end
        if (obj_carrying_pid_obj(dude_obj, 242)) then begin
            giq_option(4, NAME, 857, Upgrade_combatshotgun, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 858, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 859, Node999, NEUTRAL_REACTION);
end

procedure Node900
begin
    if ((dude_skill(SKILL_REPAIR) >= 130) and (dude_skill(SKILL_BIG_GUNS) >= 130) and (obj_carrying_pid_obj(dude_obj, 12) or obj_carrying_pid_obj(dude_obj, 11) or obj_carrying_pid_obj(dude_obj, 32))) then begin
        Reply(900);
    end
    else begin
        Reply(901);
    end
    if ((dude_skill(SKILL_REPAIR) >= 130) and (dude_skill(SKILL_BIG_GUNS) >= 130)) then begin
        if (obj_carrying_pid_obj(dude_obj, 12)) then begin
            giq_option(4, NAME, 902, Upgrade_minigun, NEUTRAL_REACTION);
        end
        if (obj_carrying_pid_obj(dude_obj, 11)) then begin
            giq_option(4, NAME, 903, Upgrade_flamethrower, NEUTRAL_REACTION);
        end
        if (obj_carrying_pid_obj(dude_obj, 32)) then begin
            giq_option(4, NAME, 904, Upgrade_flamefuel, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 905, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 906, Node999, NEUTRAL_REACTION);
end

procedure Node950
begin
    Reply(950 + (dude_gender == 1));
    giq_option(4, NAME, 952, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 953, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 954, Node999, NEUTRAL_REACTION);
end

procedure Node1000
begin
    Reply(1000 + (dude_gender == 1));
    giq_option(4, NAME, 1002, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 1003, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 1004, Node999, NEUTRAL_REACTION);
end

procedure Node1050
begin
    Reply(1050);
    if ((local_var(4) bwand 2) == 0) then begin
        giq_option(4, NAME, 1051, Node650, NEUTRAL_REACTION);
    end
    if ((local_var(4) bwand 2) != 0) then begin
        giq_option(4, NAME, 1052, Node800, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1053, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1054, Node999, NEUTRAL_REACTION);
end

procedure Upgrade_eagle
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 18);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 18);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 18);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 18)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 18);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(404, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    game_time_advance(game_ticks(60 * 60));
    call Node950();
end

procedure Upgrade_hunting
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 10);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 10);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 10);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 10)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 10);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(287, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    game_time_advance(game_ticks(60 * 60));
    call Node950();
end

procedure Upgrade_shotgun
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 94);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 94);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 94);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 94)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 94);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(385, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    game_time_advance(game_ticks(60 * 60));
    call Node950();
end

procedure Upgrade_assault
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 23);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 23);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 23);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 23)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 23);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(405, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    game_time_advance(game_ticks(60 * 60));
    call Node950();
end

procedure Upgrade_revolver
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 313);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 313);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 313);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 313)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 313);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(398, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    game_time_advance(game_ticks(60 * 60));
    call Node950();
end

procedure Upgrade_combatshotgun
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 242);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 242);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 242);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 242)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 242);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(598, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    game_time_advance(game_ticks(60 * 60));
    call Node950();
end

procedure Upgrade_minigun
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 12);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 12);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 12);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 12)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 12);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(389, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    game_time_advance(game_ticks(60 * 60));
    call Node950();
end

procedure Upgrade_flamethrower
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 11);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 11);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 11);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 11)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 11);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(400, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    game_time_advance(game_ticks(60 * 60));
    call Node1000();
end

procedure Upgrade_flamefuel
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 32);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 32);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 32);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 32)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 32);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(382, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    game_time_advance(game_ticks(60 * 60));
    call Node1000();
end
