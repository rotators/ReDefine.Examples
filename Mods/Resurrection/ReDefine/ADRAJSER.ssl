variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure combat_p_proc;
procedure timed_event_p_proc;
procedure push_p_proc;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Barter;

variable clearni;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((map_var(1) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
    if (local_var(4) == 1) then begin
        set_local_var(4, 2);
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
    if (tile_in_tile_rect(16664, 16654, 21464, 21454, tile_num(self_obj)) or tile_in_tile_rect(18286, 18280, 22286, 20280, tile_num(self_obj)) or tile_in_tile_rect(16680, 16664, 18080, 18064, tile_num(self_obj))) then begin
        if (clearni == 0) then begin
            reg_anim_func(2, self_obj);
            clearni := 1;
        end
        animate_move_obj_to_tile(self_obj, local_var(5), 0);
    end
    else begin
        if (clearni == 1) then begin
            clearni := 0;
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
    end
end

procedure talk_p_proc
begin
    if (party_member_obj(16777812) != 0) then begin
        float_msg(self_obj, mstr(random(300, 302)), FLOAT_MSG_RED);
    end
    else begin
        anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
        start_gdialog(1616, self_obj, 4, -1, -1);
        gsay_start;
        call Node500();
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_ALBUQUERQUE, global_var(GVAR_TOWN_REP_ALBUQUERQUE) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 0);
        debug_msg("Player gains " + 0 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(200);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_map_var(1, 1);
    end
end

procedure map_enter_p_proc
begin
    if ((local_var(6) bwand 1) == 0) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 260);
    end
    else begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 258);
    end
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANTS);
    if (local_var(5) == 0) then begin
        set_local_var(5, tile_num(self_obj));
    end
    if ((local_var(7) < game_time) and not(is_loading_game)) then begin
        item_caps_adjust(self_obj, random(10, 20) - item_caps_total(self_obj));
        restock_amt := random(1, 2);
        if (obj_is_carrying_obj_pid(self_obj, 124) < restock_amt) then begin
            if (100 >= random(1, 100)) then begin
                if (obj_is_carrying_obj_pid(self_obj, 124) < restock_amt) then begin
                    restock_obj := create_object(124, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 124));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 124) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 124);
                        if ((obj_is_carrying_obj_pid(self_obj, 124) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 124) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 124);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 124);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 124) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 124)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 124);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 124) < restock_amt) then begin
                restock_obj := create_object(124, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 124));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 124) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 124);
                    if ((obj_is_carrying_obj_pid(self_obj, 124) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 124) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 124);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 124);
                            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := obj_is_carrying_obj_pid(self_obj, 124) - restock_amt;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 124)) do begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 124);
                                rm_obj_from_inven(self_obj, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
        restock_amt := random(1, 2);
        if (obj_is_carrying_obj_pid(self_obj, 125) < restock_amt) then begin
            if (95 >= random(1, 100)) then begin
                if (obj_is_carrying_obj_pid(self_obj, 125) < restock_amt) then begin
                    restock_obj := create_object(125, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 125));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 125) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 125);
                        if ((obj_is_carrying_obj_pid(self_obj, 125) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 125) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 125);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 125);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 125) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 125)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 125);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 125) < restock_amt) then begin
                restock_obj := create_object(125, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 125));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 125) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 125);
                    if ((obj_is_carrying_obj_pid(self_obj, 125) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 125) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 125);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 125);
                            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := obj_is_carrying_obj_pid(self_obj, 125) - restock_amt;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 125)) do begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 125);
                                rm_obj_from_inven(self_obj, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
        restock_amt := random(1, 2);
        if (obj_is_carrying_obj_pid(self_obj, 106) < restock_amt) then begin
            if (100 >= random(1, 100)) then begin
                if (obj_is_carrying_obj_pid(self_obj, 106) < restock_amt) then begin
                    restock_obj := create_object(106, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 106));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 106) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 106);
                        if ((obj_is_carrying_obj_pid(self_obj, 106) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 106) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 106);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 106);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 106) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 106)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 106);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 106) < restock_amt) then begin
                restock_obj := create_object(106, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 106));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 106) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 106);
                    if ((obj_is_carrying_obj_pid(self_obj, 106) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 106) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 106);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 106);
                            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := obj_is_carrying_obj_pid(self_obj, 106) - restock_amt;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 106)) do begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 106);
                                rm_obj_from_inven(self_obj, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
        restock_amt := random(1, 2);
        if (obj_is_carrying_obj_pid(self_obj, 311) < restock_amt) then begin
            if (50 >= random(1, 100)) then begin
                if (obj_is_carrying_obj_pid(self_obj, 311) < restock_amt) then begin
                    restock_obj := create_object(311, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 311));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 311) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 311);
                        if ((obj_is_carrying_obj_pid(self_obj, 311) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 311) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 311);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 311);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 311) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 311)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 311);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 311) < restock_amt) then begin
                restock_obj := create_object(311, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 311));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 311) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 311);
                    if ((obj_is_carrying_obj_pid(self_obj, 311) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 311) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 311);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 311);
                            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := obj_is_carrying_obj_pid(self_obj, 311) - restock_amt;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 311)) do begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 311);
                                rm_obj_from_inven(self_obj, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
        set_local_var(7, (random(7, 14) * (24 * (60 * (60 * 10)))) + game_time);
    end
    add_timer_event(self_obj, game_ticks(random(20, 40)), 1);
    add_timer_event(self_obj, game_ticks(random(15, 30)), 2);
end

procedure map_exit_p_proc
begin
    float_msg_clear(self_obj);
end

procedure combat_p_proc
begin
    if ((map_var(1) == 1) and ((local_var(6) bwand 1) == 0)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 258);
        set_global_var(GVAR_AQ_ENEMY_HUNTERS, 1);
        set_local_var(6, local_var(6) bwor 1);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (combat_is_initialized == 0) then begin
            float_msg(self_obj, mstr(random(303, 311)), FLOAT_MSG_YELLOW);
        end
        add_timer_event(self_obj, game_ticks(random(20, 40)), 1);
    end
    if (fixed_param == 2) then begin
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(5), random(0, 5), random(2, 6)), 0);
        reg_anim_func(3, 0);
        add_timer_event(self_obj, game_ticks(random(15, 30)), 2);
    end
end

procedure push_p_proc
begin
end

procedure Node998
begin
    set_local_var(4, 1);
end

procedure Node999
begin
end

procedure Node500
begin
    Reply(500);
    giq_option(4, NAME, 501, Barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 502, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 503, Barter, NEUTRAL_REACTION);
    giq_option(-3, NAME, 504, Node999, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    giq_option(4, NAME, 551, Barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 552, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 553, Barter, NEUTRAL_REACTION);
    giq_option(-3, NAME, 554, Node999, NEUTRAL_REACTION);
end

procedure Barter
begin
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        gdialog_mod_barter(30 - 15);
    end
    else begin
        gdialog_mod_barter(30);
    end
    call Node550();
end
