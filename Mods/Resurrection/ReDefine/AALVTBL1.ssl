variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;

import variable alvarez_obj;
import variable alvarez_table_trade;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    alvarez_table_trade := self_obj;
end

procedure use_p_proc
begin
    if (alvarez_obj and (alvarez_obj != -1) and (global_var(GVAR_AQ_ENEMY_PRISTEH) != 1)) then begin
        script_overrides;
        add_timer_event(alvarez_obj, game_ticks(0), 10);
    end
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    if (alvarez_obj and (alvarez_obj != -1) and (global_var(GVAR_AQ_ENEMY_PRISTEH) != 1)) then begin
        call use_p_proc();
    end
end

procedure use_obj_on_p_proc
begin
    if (alvarez_obj and (alvarez_obj != -1) and (global_var(GVAR_AQ_ENEMY_PRISTEH) != 1)) then begin
        call use_p_proc();
    end
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    if (alvarez_obj and (alvarez_obj != -1) and (global_var(GVAR_AQ_ENEMY_PRISTEH) != 1)) then begin
        if ((game_time < 0) and (local_var(4) > 0)) then begin
            set_local_var(4, game_time - 1);
        end
        if (local_var(4) < game_time) then begin
            item_caps_adjust(self_obj, random(800, 1200) - item_caps_total(self_obj));
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 77) < restock_amt) then begin
                if (10 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 77) < restock_amt) then begin
                        restock_obj := create_object(77, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 77));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 77) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 77);
                            if ((obj_is_carrying_obj_pid(self_obj, 77) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 77) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 77);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 77);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 77) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 77)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 77);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 77) < restock_amt) then begin
                    restock_obj := create_object(77, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 77));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 77) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 77);
                        if ((obj_is_carrying_obj_pid(self_obj, 77) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 77) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 77);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 77);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 77) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 77)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 77);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 59) < restock_amt) then begin
                if (30 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 59) < restock_amt) then begin
                        restock_obj := create_object(59, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 59));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 59) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 59);
                            if ((obj_is_carrying_obj_pid(self_obj, 59) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 59) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 59);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 59);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 59) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 59)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 59);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 59) < restock_amt) then begin
                    restock_obj := create_object(59, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 59));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 59) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 59);
                        if ((obj_is_carrying_obj_pid(self_obj, 59) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 59) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 59);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 59);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 59) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 59)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 59);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 6);
            if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                        restock_obj := create_object(40, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                            if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 40)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                    restock_obj := create_object(40, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                        if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 40);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 40)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                if (70 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                        restock_obj := create_object(47, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 47));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 47) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 47);
                            if ((obj_is_carrying_obj_pid(self_obj, 47) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 47)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                    restock_obj := create_object(47, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 47));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 47) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 47);
                        if ((obj_is_carrying_obj_pid(self_obj, 47) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 47);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 47)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(3, 4);
            if (obj_is_carrying_obj_pid(self_obj, 51) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 51) < restock_amt) then begin
                        restock_obj := create_object(51, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 51));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 51) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 51);
                            if ((obj_is_carrying_obj_pid(self_obj, 51) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 51) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 51);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 51);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 51) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 51)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 51);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 51) < restock_amt) then begin
                    restock_obj := create_object(51, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 51));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 51) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 51);
                        if ((obj_is_carrying_obj_pid(self_obj, 51) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 51) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 51);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 51);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 51) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 51)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 51);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 2);
            if (obj_is_carrying_obj_pid(self_obj, 49) < restock_amt) then begin
                if (70 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 49) < restock_amt) then begin
                        restock_obj := create_object(49, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 49));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 49) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 49);
                            if ((obj_is_carrying_obj_pid(self_obj, 49) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 49) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 49) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 49)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 49) < restock_amt) then begin
                    restock_obj := create_object(49, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 49));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 49) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 49);
                        if ((obj_is_carrying_obj_pid(self_obj, 49) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 49) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 49);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 49) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 49)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            if ((global_var(GVAR_AQ_DOCTORS_COUNTER) >= 6) or ((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 131072) != 0)) then begin
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 109) < restock_amt) then begin
                    if (70 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 109) < restock_amt) then begin
                            restock_obj := create_object(109, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 109));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 109) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 109);
                                if ((obj_is_carrying_obj_pid(self_obj, 109) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 109) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 109) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 109)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 109) < restock_amt) then begin
                        restock_obj := create_object(109, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 109));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 109) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 109);
                            if ((obj_is_carrying_obj_pid(self_obj, 109) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 109) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 109) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 109)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 87) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 87) < restock_amt) then begin
                            restock_obj := create_object(87, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 87));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 87) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 87);
                                if ((obj_is_carrying_obj_pid(self_obj, 87) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 87) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 87) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 87)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 87) < restock_amt) then begin
                        restock_obj := create_object(87, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 87));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 87) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 87);
                            if ((obj_is_carrying_obj_pid(self_obj, 87) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 87) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 87) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 87)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := 1;
                if (obj_is_carrying_obj_pid(self_obj, 53) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 53) < restock_amt) then begin
                            restock_obj := create_object(53, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 53));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 53) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 53);
                                if ((obj_is_carrying_obj_pid(self_obj, 53) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 53)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 53) < restock_amt) then begin
                        restock_obj := create_object(53, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 53));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 53) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 53);
                            if ((obj_is_carrying_obj_pid(self_obj, 53) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 53)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
                    if (60 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
                            restock_obj := create_object(48, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 48));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 48) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 48);
                                if ((obj_is_carrying_obj_pid(self_obj, 48) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 48)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
                        restock_obj := create_object(48, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 48));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 48) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 48);
                            if ((obj_is_carrying_obj_pid(self_obj, 48) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 48)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 110) < restock_amt) then begin
                    if (90 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 110) < restock_amt) then begin
                            restock_obj := create_object(110, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 110));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 110) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 110);
                                if ((obj_is_carrying_obj_pid(self_obj, 110) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 110) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 110) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 110)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 110) < restock_amt) then begin
                        restock_obj := create_object(110, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 110));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 110) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 110);
                            if ((obj_is_carrying_obj_pid(self_obj, 110) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 110) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 110) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 110)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 109) < restock_amt) then begin
                    if (90 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 109) < restock_amt) then begin
                            restock_obj := create_object(109, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 109));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 109) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 109);
                                if ((obj_is_carrying_obj_pid(self_obj, 109) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 109) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 109) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 109)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 109) < restock_amt) then begin
                        restock_obj := create_object(109, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 109));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 109) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 109);
                            if ((obj_is_carrying_obj_pid(self_obj, 109) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 109) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 109) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 109)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 87) < restock_amt) then begin
                    if (80 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 87) < restock_amt) then begin
                            restock_obj := create_object(87, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 87));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 87) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 87);
                                if ((obj_is_carrying_obj_pid(self_obj, 87) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 87) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 87) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 87)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 87) < restock_amt) then begin
                        restock_obj := create_object(87, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 87));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 87) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 87);
                            if ((obj_is_carrying_obj_pid(self_obj, 87) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 87) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 87) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 87)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 53) < restock_amt) then begin
                    if (80 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 53) < restock_amt) then begin
                            restock_obj := create_object(53, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 53));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 53) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 53);
                                if ((obj_is_carrying_obj_pid(self_obj, 53) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 53)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 53) < restock_amt) then begin
                        restock_obj := create_object(53, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 53));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 53) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 53);
                            if ((obj_is_carrying_obj_pid(self_obj, 53) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 53)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
                    if (90 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
                            restock_obj := create_object(48, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 48));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 48) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 48);
                                if ((obj_is_carrying_obj_pid(self_obj, 48) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 48)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
                        restock_obj := create_object(48, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 48));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 48) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 48);
                            if ((obj_is_carrying_obj_pid(self_obj, 48) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 48)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            restock_amt := random(8, 16);
            if (obj_is_carrying_obj_pid(self_obj, 556) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 556) < restock_amt) then begin
                        restock_obj := create_object(556, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 556));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 556) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 556);
                            if ((obj_is_carrying_obj_pid(self_obj, 556) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 556) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 556);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 556);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 556) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 556)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 556);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 556) < restock_amt) then begin
                    restock_obj := create_object(556, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 556));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 556) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 556);
                        if ((obj_is_carrying_obj_pid(self_obj, 556) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 556) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 556);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 556);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 556) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 556)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 556);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 410) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 410) < restock_amt) then begin
                        restock_obj := create_object(410, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 410));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 410) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 410);
                            if ((obj_is_carrying_obj_pid(self_obj, 410) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 410) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 410);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 410);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 410) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 410)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 410);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 410) < restock_amt) then begin
                    restock_obj := create_object(410, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 410));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 410) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 410);
                        if ((obj_is_carrying_obj_pid(self_obj, 410) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 410) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 410);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 410);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 410) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 410)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 410);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 2);
            if (obj_is_carrying_obj_pid(self_obj, 127) < restock_amt) then begin
                if (70 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 127) < restock_amt) then begin
                        restock_obj := create_object(127, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 127));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 127) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 127);
                            if ((obj_is_carrying_obj_pid(self_obj, 127) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 127) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 127) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 127)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 127) < restock_amt) then begin
                    restock_obj := create_object(127, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 127));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 127) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 127);
                        if ((obj_is_carrying_obj_pid(self_obj, 127) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 127) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 127);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 127) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 127)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 3);
            if (obj_is_carrying_obj_pid(self_obj, 314) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 314) < restock_amt) then begin
                        restock_obj := create_object(314, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 314));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 314) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 314);
                            if ((obj_is_carrying_obj_pid(self_obj, 314) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 314) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 314);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 314);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 314) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 314)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 314);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 314) < restock_amt) then begin
                    restock_obj := create_object(314, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 314));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 314) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 314);
                        if ((obj_is_carrying_obj_pid(self_obj, 314) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 314) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 314);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 314);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 314) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 314)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 314);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 3);
            if (obj_is_carrying_obj_pid(self_obj, 315) < restock_amt) then begin
                if (70 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 315) < restock_amt) then begin
                        restock_obj := create_object(315, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 315));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 315) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 315);
                            if ((obj_is_carrying_obj_pid(self_obj, 315) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 315) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 315);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 315);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 315) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 315)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 315);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 315) < restock_amt) then begin
                    restock_obj := create_object(315, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 315));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 315) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 315);
                        if ((obj_is_carrying_obj_pid(self_obj, 315) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 315) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 315);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 315);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 315) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 315)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 315);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 3);
            if (obj_is_carrying_obj_pid(self_obj, 316) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 316) < restock_amt) then begin
                        restock_obj := create_object(316, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 316));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 316) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 316);
                            if ((obj_is_carrying_obj_pid(self_obj, 316) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 316) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 316);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 316);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 316) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 316)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 316);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 316) < restock_amt) then begin
                    restock_obj := create_object(316, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 316));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 316) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 316);
                        if ((obj_is_carrying_obj_pid(self_obj, 316) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 316) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 316);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 316);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 316) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 316)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 316);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 3);
            if (obj_is_carrying_obj_pid(self_obj, 79) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 79) < restock_amt) then begin
                        restock_obj := create_object(79, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 79));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 79) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 79);
                            if ((obj_is_carrying_obj_pid(self_obj, 79) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 79)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 79) < restock_amt) then begin
                    restock_obj := create_object(79, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 79));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 79) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 79);
                        if ((obj_is_carrying_obj_pid(self_obj, 79) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 79);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 79)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 52) < restock_amt) then begin
                if (40 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 52) < restock_amt) then begin
                        restock_obj := create_object(52, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 52));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 52) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 52);
                            if ((obj_is_carrying_obj_pid(self_obj, 52) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 52) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 52) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 52)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 52) < restock_amt) then begin
                    restock_obj := create_object(52, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 52));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 52) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 52);
                        if ((obj_is_carrying_obj_pid(self_obj, 52) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 52) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 52);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 52) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 52)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 236) < restock_amt) then begin
                if (80 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 236) < restock_amt) then begin
                        restock_obj := create_object(236, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 236));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 236) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 236);
                            if ((obj_is_carrying_obj_pid(self_obj, 236) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 236) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 236) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 236)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 236) < restock_amt) then begin
                    restock_obj := create_object(236, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 236));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 236) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 236);
                        if ((obj_is_carrying_obj_pid(self_obj, 236) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 236) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 236);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 236) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 236)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(8, 10);
            if (obj_is_carrying_obj_pid(self_obj, 45) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 45) < restock_amt) then begin
                        restock_obj := create_object(45, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 45));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 45) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 45);
                            if ((obj_is_carrying_obj_pid(self_obj, 45) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 45) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 45) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 45)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 45) < restock_amt) then begin
                    restock_obj := create_object(45, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 45));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 45) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 45);
                        if ((obj_is_carrying_obj_pid(self_obj, 45) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 45) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 45);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 45) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 45)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 9) < restock_amt) then begin
                if (60 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 9) < restock_amt) then begin
                        restock_obj := create_object(9, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 9));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 9) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 9);
                            if ((obj_is_carrying_obj_pid(self_obj, 9) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 9) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 9) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 9)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 9) < restock_amt) then begin
                    restock_obj := create_object(9, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 9));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 9) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 9);
                        if ((obj_is_carrying_obj_pid(self_obj, 9) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 9) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 9);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 9) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 9)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 18) < restock_amt) then begin
                if (70 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 18) < restock_amt) then begin
                        restock_obj := create_object(18, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 18));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 18) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 18);
                            if ((obj_is_carrying_obj_pid(self_obj, 18) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 18)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 18) < restock_amt) then begin
                    restock_obj := create_object(18, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 18));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 18) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 18);
                        if ((obj_is_carrying_obj_pid(self_obj, 18) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 18);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 18)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 235) < restock_amt) then begin
                if (40 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 235) < restock_amt) then begin
                        restock_obj := create_object(235, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 235));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 235) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 235);
                            if ((obj_is_carrying_obj_pid(self_obj, 235) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 235) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 235) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 235)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 235) < restock_amt) then begin
                    restock_obj := create_object(235, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 235));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 235) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 235);
                        if ((obj_is_carrying_obj_pid(self_obj, 235) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 235) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 235);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 235) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 235)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(4, 7);
            if (obj_is_carrying_obj_pid(self_obj, 25) < restock_amt) then begin
                if (80 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 25) < restock_amt) then begin
                        restock_obj := create_object(25, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 25));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 25) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 25);
                            if ((obj_is_carrying_obj_pid(self_obj, 25) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 25)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 25) < restock_amt) then begin
                    restock_obj := create_object(25, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 25));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 25) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 25);
                        if ((obj_is_carrying_obj_pid(self_obj, 25) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 25);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 25)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(3, 6);
            if (obj_is_carrying_obj_pid(self_obj, 26) < restock_amt) then begin
                if (50 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 26) < restock_amt) then begin
                        restock_obj := create_object(26, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 26));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 26) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 26);
                            if ((obj_is_carrying_obj_pid(self_obj, 26) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 26) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 26);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 26);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 26) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 26)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 26);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 26) < restock_amt) then begin
                    restock_obj := create_object(26, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 26));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 26) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 26);
                        if ((obj_is_carrying_obj_pid(self_obj, 26) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 26) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 26);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 26);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 26) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 26)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 26);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(3, 6);
            if (obj_is_carrying_obj_pid(self_obj, 38) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 38) < restock_amt) then begin
                        restock_obj := create_object(38, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 38));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 38) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 38);
                            if ((obj_is_carrying_obj_pid(self_obj, 38) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 38) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 38) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 38)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 38) < restock_amt) then begin
                    restock_obj := create_object(38, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 38));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 38) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 38);
                        if ((obj_is_carrying_obj_pid(self_obj, 38) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 38) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 38);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 38) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 38)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 3);
            if (obj_is_carrying_obj_pid(self_obj, 29) < restock_amt) then begin
                if (95 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 29) < restock_amt) then begin
                        restock_obj := create_object(29, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 29));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 29) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 29);
                            if ((obj_is_carrying_obj_pid(self_obj, 29) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 29) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 29);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 29);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 29) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 29)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 29);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 29) < restock_amt) then begin
                    restock_obj := create_object(29, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 29));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 29) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 29);
                        if ((obj_is_carrying_obj_pid(self_obj, 29) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 29) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 29);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 29);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 29) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 29)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 29);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 3);
            if (obj_is_carrying_obj_pid(self_obj, 34) < restock_amt) then begin
                if (70 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 34) < restock_amt) then begin
                        restock_obj := create_object(34, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 34));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 34) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 34);
                            if ((obj_is_carrying_obj_pid(self_obj, 34) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 34) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 34) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 34)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 34) < restock_amt) then begin
                    restock_obj := create_object(34, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 34));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 34) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 34);
                        if ((obj_is_carrying_obj_pid(self_obj, 34) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 34) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 34);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 34) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 34)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 4);
            if (obj_is_carrying_obj_pid(self_obj, 35) < restock_amt) then begin
                if (60 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 35) < restock_amt) then begin
                        restock_obj := create_object(35, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 35));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 35) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 35);
                            if ((obj_is_carrying_obj_pid(self_obj, 35) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 35)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 35) < restock_amt) then begin
                    restock_obj := create_object(35, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 35));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 35) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 35);
                        if ((obj_is_carrying_obj_pid(self_obj, 35) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 35);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 35)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 4);
            if (obj_is_carrying_obj_pid(self_obj, 95) < restock_amt) then begin
                if (75 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 95) < restock_amt) then begin
                        restock_obj := create_object(95, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 95));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 95) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 95);
                            if ((obj_is_carrying_obj_pid(self_obj, 95) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 95)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 95) < restock_amt) then begin
                    restock_obj := create_object(95, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 95));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 95) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 95);
                        if ((obj_is_carrying_obj_pid(self_obj, 95) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 95);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 95)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 4);
            if (obj_is_carrying_obj_pid(self_obj, 31) < restock_amt) then begin
                if (80 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 31) < restock_amt) then begin
                        restock_obj := create_object(31, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 31));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 31) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 31);
                            if ((obj_is_carrying_obj_pid(self_obj, 31) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 31)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 31) < restock_amt) then begin
                    restock_obj := create_object(31, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 31));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 31) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 31);
                        if ((obj_is_carrying_obj_pid(self_obj, 31) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 31);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 31)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            set_local_var(4, (random(7, 14) * (24 * (60 * (60 * 10)))) + game_time);
            if ((game_time < 0) and (local_var(4) > 0)) then begin
                set_local_var(4, 0);
            end
        end
    end
end

procedure map_update_p_proc
begin
end
