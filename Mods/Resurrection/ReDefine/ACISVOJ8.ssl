variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;

import variable Map_event;
import variable Aran_obj;

variable rotation;
variable smycka;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (local_var(5) == 0) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 282);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_IMPERIAL_SOLDIER_NO_TALKING);
        set_local_var(5, tile_num(self_obj));
    end
    if (CUR_MAP_ALB_CISA) then begin
        if ((global_var(GVAR_AQE_HELP_TO_ARAN) == 4) and (obj_is_visible_flag(self_obj) == 1) and obj_can_see_obj(self_obj, dude_obj) and ((global_var(GVAR_AQE_DIRECTIONS_SETUP) bwand 2097152) == 0)) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
        if ((global_var(GVAR_AQE_HELP_TO_ARAN) == 6) and not((global_var(GVAR_AQE_DIRECTIONS_SETUP) bwand 1024) != 0)) then begin
            set_global_var(GVAR_AQE_DIRECTIONS_SETUP, global_var(GVAR_AQE_DIRECTIONS_SETUP) bwor 1024);
        end
        if ((global_var(GVAR_AQE_HELP_TO_ARAN) == 6) and (obj_is_visible_flag(self_obj) == 1) and (tile_distance(tile_num(self_obj), dude_tile) < 5)) then begin
            set_global_var(GVAR_AQE_HELP_TO_ARAN, 7);
            add_timer_event(Map_event, game_ticks(0), 80);
        end
        if ((global_var(GVAR_AQE_HELP_TO_ARAN) == 8) and (obj_is_visible_flag(self_obj) == 1) and obj_can_see_obj(self_obj, dude_obj) and ((global_var(GVAR_AQE_DIRECTIONS_SETUP) bwand 2097152) == 0)) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
        if ((global_var(GVAR_AQE_HELP_TO_ARAN) == 8) and (obj_is_visible_flag(self_obj) == 1) and obj_can_see_obj(self_obj, Aran_obj) and ((global_var(GVAR_AQE_DIRECTIONS_SETUP) bwand 2097152) == 0)) then begin
            attack(Aran_obj);
        end
        if ((global_var(GVAR_AQE_HELP_TO_ARAN) >= 9) and ((global_var(GVAR_AQE_ALBUQ_EMPEROR_EVENTS) bwand 1) != 0)) then begin
            destroy_object(self_obj);
        end
    end
    if (CUR_MAP_ALB_LOVA) then begin
        if ((global_var(GVAR_AQE_HELP_TO_ARAN) == 3) and (obj_is_visible_flag(self_obj) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
    end
    if (CUR_MAP_ALB_MRTV) then begin
        if ((global_var(GVAR_AQE_QUEST_ANONYM_3) == 3) and (obj_is_visible_flag(self_obj) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
        if ((global_var(GVAR_AQE_QUEST_ELISA_3) == 3) and (obj_is_visible_flag(self_obj) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
        if ((global_var(GVAR_AQE_QUEST_ANONYM_3) == 2) or (global_var(GVAR_AQE_QUEST_ELISA_3) == 2) and (obj_is_visible_flag(self_obj) == 1)) then begin
            if (local_var(5) == 12268) then begin
                if (not(tile_num(self_obj) == 15464)) then begin
                    animate_move_obj_to_tile(self_obj, 15464, 0);
                end
                else begin
                    if (rotation == 0) then begin
                        anim(self_obj, 1000, 0);
                        rotation := 1;
                    end
                end
            end
            if (local_var(5) == 11871) then begin
                if (not(tile_num(self_obj) == 14264)) then begin
                    animate_move_obj_to_tile(self_obj, 14264, 0);
                end
                else begin
                    if (rotation == 0) then begin
                        anim(self_obj, 1000, 0);
                        rotation := 1;
                    end
                end
            end
            if (local_var(5) == 12468) then begin
                if (not(tile_num(self_obj) == 15466)) then begin
                    animate_move_obj_to_tile(self_obj, 15466, 0);
                end
                else begin
                    if (rotation == 0) then begin
                        anim(self_obj, 1000, 0);
                        rotation := 1;
                    end
                end
            end
            if (local_var(5) == 12064) then begin
                if (not(tile_num(self_obj) == 14666)) then begin
                    animate_move_obj_to_tile(self_obj, 14666, 0);
                end
                else begin
                    if (rotation == 0) then begin
                        anim(self_obj, 1000, 0);
                        rotation := 1;
                    end
                end
            end
            if (local_var(5) == 11869) then begin
                if (not(tile_num(self_obj) == 14267)) then begin
                    animate_move_obj_to_tile(self_obj, 14267, 0);
                end
                else begin
                    if (rotation == 0) then begin
                        anim(self_obj, 1000, 0);
                        rotation := 1;
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
    end
end

procedure talk_p_proc
begin
end

procedure destroy_p_proc
begin
    if (CUR_MAP_ALB_CISA) then begin
        if (global_var(GVAR_AQE_HELP_TO_ARAN) == 4) then begin
            set_global_var(GVAR_AQE_EMPEROR_SOLDIERS_COUNT, global_var(GVAR_AQE_EMPEROR_SOLDIERS_COUNT) + 1);
            if ((global_var(GVAR_AQE_HELP_TO_ARAN) == 4) and (global_var(GVAR_AQE_EMPEROR_SOLDIERS_COUNT) == 6)) then begin
                terminate_combat;
            end
        end
    end
    if ((CUR_MAP_ALB_CISA) and ((global_var(GVAR_AQE_HELP_TO_ARAN) == 8) or (global_var(GVAR_AQE_HELP_TO_ARAN) == 4))) then begin
        if ((smycka == 0) and (map_var(5) == 0)) then begin
            set_map_var(5, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(6) == 0)) then begin
            set_map_var(6, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(7) == 0)) then begin
            set_map_var(7, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(8) == 0)) then begin
            set_map_var(8, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(9) == 0)) then begin
            set_map_var(9, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(10) == 0)) then begin
            set_map_var(10, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(11) == 0)) then begin
            set_map_var(11, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(12) == 0)) then begin
            set_map_var(12, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(13) == 0)) then begin
            set_map_var(13, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(14) == 0)) then begin
            set_map_var(14, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(15) == 0)) then begin
            set_map_var(15, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(16) == 0)) then begin
            set_map_var(16, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(17) == 0)) then begin
            set_map_var(17, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(18) == 0)) then begin
            set_map_var(18, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(19) == 0)) then begin
            set_map_var(19, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(20) == 0)) then begin
            set_map_var(20, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(21) == 0)) then begin
            set_map_var(21, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(22) == 0)) then begin
            set_map_var(22, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(23) == 0)) then begin
            set_map_var(23, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(24) == 0)) then begin
            set_map_var(24, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(25) == 0)) then begin
            set_map_var(25, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(26) == 0)) then begin
            set_map_var(26, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(27) == 0)) then begin
            set_map_var(27, tile_num(self_obj));
            smycka := 1;
        end
        if ((smycka == 0) and (map_var(28) == 0)) then begin
            set_map_var(28, tile_num(self_obj));
            smycka := 1;
        end
    end
    if (CUR_MAP_ALB_LOVA) then begin
        if (global_var(GVAR_AQE_HELP_TO_ARAN) == 3) then begin
            set_global_var(GVAR_AQE_EMPEROR_SOLDIERS_COUNT, global_var(GVAR_AQE_EMPEROR_SOLDIERS_COUNT) + 1);
            if ((smycka == 0) and (map_var(5) == 0)) then begin
                set_map_var(5, tile_num(self_obj));
                smycka := 1;
            end
            if ((smycka == 0) and (map_var(6) == 0)) then begin
                set_map_var(6, tile_num(self_obj));
                smycka := 1;
            end
            if ((smycka == 0) and (map_var(7) == 0)) then begin
                set_map_var(7, tile_num(self_obj));
                smycka := 1;
            end
            if ((smycka == 0) and (map_var(8) == 0)) then begin
                set_map_var(8, tile_num(self_obj));
                smycka := 1;
            end
            if ((smycka == 0) and (map_var(9) == 0)) then begin
                set_map_var(9, tile_num(self_obj));
                smycka := 1;
            end
            if ((smycka == 0) and (map_var(10) == 0)) then begin
                set_map_var(10, tile_num(self_obj));
                smycka := 1;
            end
            if ((smycka == 0) and (map_var(11) == 0)) then begin
                set_map_var(11, tile_num(self_obj));
                smycka := 1;
            end
            if ((smycka == 0) and (map_var(12) == 0)) then begin
                set_map_var(12, tile_num(self_obj));
                smycka := 1;
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(200);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
        if (global_var(GVAR_AQE_HELP_TO_ARAN) == 6) then begin
            set_global_var(GVAR_AQE_DIRECTIONS_SETUP, global_var(GVAR_AQE_DIRECTIONS_SETUP) bwor 1024);
        end
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 282);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_IMPERIAL_SOLDIER_NO_TALKING);
    if (local_var(5) == 0) then begin
        set_local_var(5, tile_num(self_obj));
    end
    if ((global_var(GVAR_AQE_HELP_TO_ARAN) == 1) and ((global_var(GVAR_AQE_ALBUQ_EMPEROR_EVENTS) bwand 64) != 0)) then begin
        destroy_object(self_obj);
    end
    if ((global_var(GVAR_AQE_HELP_TO_ARAN) >= 9) and ((global_var(GVAR_AQE_ALBUQ_EMPEROR_EVENTS) bwand 1) != 0)) then begin
        destroy_object(self_obj);
    end
    if ((CUR_MAP_ALB_MRTV) and not(is_loading_game)) then begin
        if ((global_var(GVAR_AQE_QUEST_ANONYM_3) == 3) or (global_var(GVAR_AQE_QUEST_ANONYM_3) == 1)) then begin
            destroy_object(self_obj);
        end
    end
end
