variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;

import variable zguard_obj;

variable Projed_Smycku;
variable steal_counter;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    if (tile_num(self_obj) == 20093) then begin
        zguard_obj := self_obj;
    end
end

procedure critter_p_proc
begin
    if ((dude_tile == 20292) and (global_var(GVAR_RH_LEONARD_SEARCH) != 3) and (global_var(GVAR_RH_JULIAN_DEAD) != 1) and not(using_skill(dude_obj, 8))) then begin
        if (not(combat_is_initialized)) then begin
            float_msg(zguard_obj, mstr(374), FLOAT_MSG_RED);
        end
        set_global_var(GVAR_RH_ENEMY_JULIAN, 1);
        attack(dude_obj);
    end
    if ((global_var(GVAR_RH_ENEMY_JULIAN) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (dude_gender == 0) then begin
        float_msg(self_obj, mstr(random(350, 351)), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, mstr(random(351, 352)), FLOAT_MSG_YELLOW);
    end
    set_global_var(GVAR_RH_ENEMY_JULIAN, 1);
end

procedure talk_p_proc
begin
    if (combat_is_initialized == 0) then begin
        if ((global_var(GVAR_RH_JULIAN_DEAD) == 1) and (Projed_Smycku == 0)) then begin
            float_msg(self_obj, mstr(360), FLOAT_MSG_YELLOW);
            Projed_Smycku := 1;
        end
        if ((party_member_obj(16777812) != 0) and (Projed_Smycku == 0)) then begin
            if (dude_gender == 0) then begin
                float_msg(self_obj, mstr(random(317, 320)), FLOAT_MSG_YELLOW);
            end
            else begin
                float_msg(self_obj, mstr(random(316, 319)), FLOAT_MSG_YELLOW);
            end
            Projed_Smycku := 1;
        end
        if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 348) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 349) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 232) and (Projed_Smycku == 0)) then begin
            float_msg(self_obj, mstr(random(312, 314)), FLOAT_MSG_YELLOW);
            Projed_Smycku := 1;
        end
        if ((global_var(GVAR_RH_Q_JULIAN_QUEST3) == 8) or not(global_var(GVAR_RH_ALEXA_DEAD) != 1) and (Projed_Smycku == 0)) then begin
            if (dude_gender == 0) then begin
                float_msg(self_obj, mstr(random(328, 331)), FLOAT_MSG_YELLOW);
            end
            else begin
                float_msg(self_obj, mstr(random(326, 329)), FLOAT_MSG_YELLOW);
            end
            Projed_Smycku := 1;
        end
        if ((global_var(GVAR_RH_Q_JULIAN_QUEST1) == 8) or (global_var(GVAR_RH_Q_JULIAN_QUEST2) == 8) and (Projed_Smycku == 0)) then begin
            if (dude_gender == 0) then begin
                float_msg(self_obj, mstr(random(322, 325)), FLOAT_MSG_YELLOW);
            end
            else begin
                float_msg(self_obj, mstr(random(321, 324)), FLOAT_MSG_YELLOW);
            end
            Projed_Smycku := 1;
        end
        if ((dude_gender == 0) and ((dude_charisma > 7) or has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) and (Projed_Smycku == 0)) then begin
            float_msg(self_obj, mstr(random(300, 306)), FLOAT_MSG_YELLOW);
            Projed_Smycku := 1;
        end
        if (Projed_Smycku == 0) then begin
            float_msg(self_obj, mstr(random(300, 305)), FLOAT_MSG_YELLOW);
            Projed_Smycku := 1;
        end
        Projed_Smycku := 0;
    end
end

procedure destroy_p_proc
begin
    if ((local_var(4) bwand 128) != 0) then begin
        set_map_var(1, map_var(1) bwor 128);
    end
    if ((local_var(4) bwand 256) != 0) then begin
        set_map_var(1, map_var(1) bwor 256);
    end
    if ((local_var(4) bwand 512) != 0) then begin
        set_map_var(1, map_var(1) bwor 512);
    end
    if ((local_var(4) bwand 1024) != 0) then begin
        set_map_var(1, map_var(1) bwor 1024);
    end
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_RATHOLE, global_var(GVAR_TOWN_REP_RATHOLE) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 0);
        debug_msg("Player gains " + 0 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (global_var(GVAR_RH_Q_ALEXA_QUEST3) >= 4) then begin
        if (obj_is_carrying_obj_pid(self_obj, 40) >= 1) then begin
            removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, 40);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(self_obj, restock_obj);
                            add_obj_to_inven(self_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(self_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := 1;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 40)) do begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 40);
                        rm_obj_from_inven(self_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
        end
        if (obj_is_carrying_obj_pid(self_obj, 95) >= 1) then begin
            removed_qty := obj_is_carrying_obj_pid(self_obj, 95);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, 95);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 95);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(self_obj, restock_obj);
                            add_obj_to_inven(self_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(self_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := 1;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 95)) do begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 95);
                        rm_obj_from_inven(self_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
        end
        if (obj_is_carrying_obj_pid(self_obj, 34) >= 1) then begin
            removed_qty := obj_is_carrying_obj_pid(self_obj, 34);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, 34);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 34);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(self_obj, restock_obj);
                            add_obj_to_inven(self_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(self_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := 1;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 34)) do begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 34);
                        rm_obj_from_inven(self_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
        end
        if (obj_is_carrying_obj_pid(self_obj, 29) >= 1) then begin
            removed_qty := obj_is_carrying_obj_pid(self_obj, 29);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, 29);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 29);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(self_obj, restock_obj);
                            add_obj_to_inven(self_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(self_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := 1;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 29)) do begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 29);
                        rm_obj_from_inven(self_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
        end
        if (obj_is_carrying_obj_pid(self_obj, 29) >= 1) then begin
            removed_qty := obj_is_carrying_obj_pid(self_obj, 29);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, 29);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 29);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(self_obj, restock_obj);
                            add_obj_to_inven(self_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(self_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := 1;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 29)) do begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 29);
                        rm_obj_from_inven(self_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
        end
        if (obj_is_carrying_obj_pid(self_obj, 30) >= 1) then begin
            removed_qty := obj_is_carrying_obj_pid(self_obj, 30);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, 30);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 30);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(self_obj, restock_obj);
                            add_obj_to_inven(self_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(self_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := 1;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 30)) do begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 30);
                        rm_obj_from_inven(self_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
        end
        if (obj_is_carrying_obj_pid(self_obj, 30) >= 1) then begin
            removed_qty := obj_is_carrying_obj_pid(self_obj, 30);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, 30);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 30);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(self_obj, restock_obj);
                            add_obj_to_inven(self_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(self_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := 1;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 30)) do begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 30);
                        rm_obj_from_inven(self_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(200);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_RH_ENEMY_JULIAN, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 235);
    if (not(is_loading_game)) then begin
        if (global_var(GVAR_RH_JULIAN_DEAD) == 1) then begin
            destroy_object(self_obj);
        end
        if (local_var(5) != 1) then begin
            if (tile_num(self_obj) == 9882) then begin
                set_local_var(4, local_var(4) bwor 128);
            end
            if (tile_num(self_obj) == 22103) then begin
                set_local_var(4, local_var(4) bwor 256);
            end
            if (tile_num(self_obj) == 16487) then begin
                set_local_var(4, local_var(4) bwor 512);
            end
            if (tile_num(self_obj) == 20093) then begin
                set_local_var(4, local_var(4) bwor 1024);
            end
            set_local_var(5, 1);
        end
        if ((global_var(GVAR_RH_Q_ALEXA_QUEST3) == 4) and (global_var(GVAR_RH_ENEMY_JULIAN) == 0)) then begin
            destroy_object(self_obj);
        end
        if ((global_var(GVAR_RH_Q_JULIAN_QUEST3) == 4) or (global_var(GVAR_RH_Q_JULIAN_QUEST3) == 8) or (global_var(GVAR_RH_Q_QUEST_MARIE) == 5)) then begin
            if (global_var(GVAR_RH_KILLS_WOMAN) >= 1) then begin
                if (((local_var(4) bwand 512) != 0) and (global_var(GVAR_RH_KILLS_WOMAN) >= 1)) then begin
                    destroy_object(self_obj);
                    if (global_var(GVAR_RH_KILLS_WOMAN) == 1) then begin
                        set_global_var(GVAR_RH_KILLS_WOMAN, 0);
                    end
                end
                if (((local_var(4) bwand 128) != 0) and (global_var(GVAR_RH_KILLS_WOMAN) >= 2)) then begin
                    destroy_object(self_obj);
                    if (global_var(GVAR_RH_KILLS_WOMAN) == 2) then begin
                        set_global_var(GVAR_RH_KILLS_WOMAN, 0);
                    end
                end
                if (((local_var(4) bwand 256) != 0) and (global_var(GVAR_RH_KILLS_WOMAN) >= 3)) then begin
                    destroy_object(self_obj);
                    if (global_var(GVAR_RH_KILLS_WOMAN) == 3) then begin
                        set_global_var(GVAR_RH_KILLS_WOMAN, 0);
                    end
                end
                if (((local_var(4) bwand 1024) != 0) and (global_var(GVAR_RH_KILLS_WOMAN) >= 4)) then begin
                    destroy_object(self_obj);
                    if (global_var(GVAR_RH_KILLS_WOMAN) >= 4) then begin
                        set_global_var(GVAR_RH_KILLS_WOMAN, 0);
                    end
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (steal_counter == 2) then begin
            steal_counter := 3;
            float_msg(self_obj, mstr(372), FLOAT_MSG_RED);
            set_global_var(GVAR_RH_ENEMY_JULIAN, 1);
        end
        if (steal_counter == 1) then begin
            steal_counter := 2;
            float_msg(self_obj, mstr(371), FLOAT_MSG_RED);
        end
        if (steal_counter == 0) then begin
            steal_counter := 1;
            float_msg(self_obj, mstr(370), FLOAT_MSG_RED);
        end
    end
    if (fixed_param == 2) then begin
        float_msg(self_obj, mstr(373), FLOAT_MSG_GREEN);
    end
    if (fixed_param == 3) then begin
        float_msg(self_obj, mstr(401), FLOAT_MSG_RED);
        set_global_var(GVAR_RH_ENEMY_JULIAN, 1);
    end
end
