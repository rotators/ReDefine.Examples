/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1 := 1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;
variable GVar13;
variable GVar14;
variable GVar15;
variable GVar16;
variable GVar17;
variable GVar18;
variable GVar19;

/* ?import? variable ProtoOfItemGiven; */
/* ?import? variable ValueOfRollCheck; */
/* ?import? variable Scenery_Creation; */
/* ?import? variable Scenery_Creation_Hex; */
/* ?import? variable Scenery_Creation_Count; */
/* ?import? variable Temp_Scenery_Creation_Hex; */
/* ?import? variable Scenery_Creation_Ptr; */
/* ?import? variable How_Many_Party_Members_Are_Injured; */
/* ?import? variable How_Many_Party_Members_Armed; */
/* ?import? variable PartyHealingItem; */

procedure checkPartyMembersNearDoor;

/* ?import? variable global_temp; */
/* ?import? variable dest_tile; */
/* ?import? variable step_tile; */
/* ?import? variable in_dialog; */
/* ?import? variable forced_node; */
/* ?import? variable restock_amt; */
/* ?import? variable restock_obj; */
/* ?import? variable restock_trash; */
/* ?import? variable removed_qty; */
/* ?import? variable toRemove_qty; */

procedure div(variable arg0, variable arg1);
procedure start;
procedure use_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure timed_event_p_proc;

/* ?import? variable chuck_obj; */

import variable chuck_shelf;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777958) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777958)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777957) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777957)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778018) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778018)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    chuck_shelf := self_obj;
end

procedure use_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    call use_p_proc();
end

procedure use_obj_on_p_proc
begin
    call use_p_proc();
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and obj_is_carrying_obj_pid(self_obj, 558)) then begin
        GVar18 := obj_is_carrying_obj_pid(self_obj, 558);
    end
    if (1 < GVar18) then begin
        GVar18 := 1;
    end
    if (GVar18 > 0) then begin
        GVar16 := obj_carrying_pid_obj(self_obj, 558);
        if (obj_type(self_obj) == 1) then begin
            GVar16 := obj_carrying_pid_obj(self_obj, 558);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == GVar16) then begin
                if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                    GVar16 := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(GVar16));
                    rm_obj_from_inven(self_obj, GVar16);
                    add_obj_to_inven(self_obj, GVar16);
                end
            end
            else begin
                if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == GVar16) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == GVar16)) then begin
                    inven_unwield(self_obj);
                end
            end
        end
        GVar15 := rm_mult_objs_from_inven(self_obj, GVar16, GVar18);
        if (GVar15 == 0) then begin
            GVar19 := 1;
            while ((GVar19 > 0) and obj_carrying_pid_obj(self_obj, 558)) do begin
                GVar16 := obj_carrying_pid_obj(self_obj, 558);
                rm_obj_from_inven(self_obj, GVar16);
                destroy_object(GVar16);
                GVar19 := GVar19 - 1;
            end
        end
        else begin
            destroy_object(GVar16);
        end
    end
    GVar16 := 0;
    GVar15 := 0;
end
