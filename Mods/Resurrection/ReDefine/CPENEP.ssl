variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);

variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Beer;
procedure Rotgut;
procedure Booze;
procedure Rum;

variable Projed_Smycku;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777958) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777958)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777957) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777957)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778018) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778018)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(4) == 1) or (global_var(GVAR_ENEMY_CORATH) == 1) or (global_var(GVAR_C_ENEMY_OBYVAT) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
    end
end

procedure talk_p_proc
begin
    anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    start_gdialog(1526, self_obj, 4, -1, -1);
    gsay_start;
    if (local_var(5) != 1) then begin
        call Node500();
    end
    if (local_var(5) == 1) then begin
        call Node1000();
    end
    gsay_end;
    end_dialogue;
    set_local_var(5, 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_CORATH, global_var(GVAR_TOWN_REP_CORATH) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_CORATH, global_var(GVAR_TOWN_REP_CORATH) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_mstr(150);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_mstr(250);
    end
    else begin
        display_mstr(200);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
        set_global_var(GVAR_C_ENEMY_OBYVAT, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 243);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_STORE_OWNER);
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
        if ((local_var(4) == 1) and obj_can_see_obj(self_obj, dude_obj) and ((local_var(6) bwand 32) == 0)) then begin
            float_msg(self_obj, mstr(400), FLOAT_MSG_RED);
            set_local_var(6, local_var(6) bwor 32);
        end
    end
end

procedure Node998
begin
    set_local_var(4, 1);
end

procedure Node999
begin
    anim(self_obj, 1000, 2);
end

procedure Node500
begin
    Reply(500);
    giq_option(4, NAME, 501, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 502, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 503, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 504, Node550, NEUTRAL_REACTION);
    giq_option(-3, NAME, 505, Node999, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    if (item_caps_total(dude_obj) > 4) then begin
        giq_option(4, NAME, 551, Beer, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) > 19) then begin
        giq_option(4, NAME, 552, Rotgut, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) > 9) then begin
        giq_option(4, NAME, 553, Booze, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) > 14) then begin
        giq_option(4, NAME, 554, Rum, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 555, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 556, Node999, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) > 4) then begin
        giq_option(-3, NAME, 557, Beer, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) > 19) then begin
        giq_option(-3, NAME, 558, Rotgut, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) > 9) then begin
        giq_option(-3, NAME, 559, Booze, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) > 14) then begin
        giq_option(-3, NAME, 560, Rum, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 561, Node999, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600);
    if (item_caps_total(dude_obj) > 4) then begin
        giq_option(4, NAME, 601, Beer, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) > 19) then begin
        giq_option(4, NAME, 602, Rotgut, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) > 9) then begin
        giq_option(4, NAME, 603, Booze, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) > 14) then begin
        giq_option(4, NAME, 604, Rum, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 605, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 606, Node999, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) > 4) then begin
        giq_option(-3, NAME, 607, Beer, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) > 19) then begin
        giq_option(-3, NAME, 608, Rotgut, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) > 9) then begin
        giq_option(-3, NAME, 609, Booze, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) > 14) then begin
        giq_option(-3, NAME, 610, Rum, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 611, Node999, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 651, Node750, NEUTRAL_REACTION);
    end
    if (not((global_var(GVAR_C_RING_VICTORIES) bwand 64) != 0) and not((global_var(GVAR_C_RING_VICTORIES) bwand 4) != 0)) then begin
        giq_option(4, NAME, 652, Node800, NEUTRAL_REACTION);
    end
    if (((local_var(6) bwand 2) == 0) and (global_var(GVAR_C_QUEST_MURDERS) != 3)) then begin
        giq_option(4, NAME, 653, Node700, NEUTRAL_REACTION);
    end
    if ((map_var(0) bwand 16) == 0) then begin
        giq_option(4, NAME, 656, Node1050, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 654, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 655, Node999, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    set_local_var(6, local_var(6) bwor 2);
    giq_option(4, NAME, 701, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 702, Node999, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    set_local_var(6, local_var(6) bwor 1);
    giq_option(4, NAME, 751, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 752, Node999, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800);
    giq_option(4, NAME, 801, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 802, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 803, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 804, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 805, Node999, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850);
    giq_option(4, NAME, 851, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 852, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 853, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 854, Node999, NEUTRAL_REACTION);
end

procedure Node900
begin
    Reply(900);
    giq_option(4, NAME, 901, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 902, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 903, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 904, Node999, NEUTRAL_REACTION);
end

procedure Node950
begin
    Reply(950);
    giq_option(4, NAME, 951, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 952, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 953, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 954, Node999, NEUTRAL_REACTION);
end

procedure Node1000
begin
    if (((local_var(6) bwand 128) == 0) and ((global_var(GVAR_C_RING_VICTORIES) bwand 4) != 0) and (Projed_Smycku == 0)) then begin
        Reply(1003);
        set_local_var(6, local_var(6) bwor 128);
        Projed_Smycku := 1;
    end
    if (((local_var(6) bwand 256) == 0) and ((global_var(GVAR_C_RING_VICTORIES) bwand 64) != 0) and (Projed_Smycku == 0)) then begin
        Reply(1004);
        set_local_var(6, local_var(6) bwor 256);
        Projed_Smycku := 1;
    end
    if (Projed_Smycku == 0) then begin
        Reply(1000);
    end
    if (((local_var(6) bwand 64) == 0) and (global_var(GVAR_C_QUEST_MURDERS) == 3) and (Projed_Smycku == 0)) then begin
        if (dude_gender == 0) then begin
            Reply(1001);
        end
        if (dude_gender == 1) then begin
            Reply(1002);
        end
        set_local_var(6, local_var(6) bwor 64);
        Projed_Smycku := 1;
    end
    Projed_Smycku := 0;
    giq_option(4, NAME, 1005, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 1006, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1007, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1008, Node550, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1009, Node999, NEUTRAL_REACTION);
end

procedure Node1050
begin
    Reply(1050);
    set_map_var(0, map_var(0) bwor 16);
    giq_option(4, NAME, 1051, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1052, Node999, NEUTRAL_REACTION);
end

procedure Beer
begin
    restock_obj := create_object(124, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    item_caps_adjust(dude_obj, -5);
    call Node600();
end

procedure Rotgut
begin
    restock_obj := create_object(469, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    item_caps_adjust(dude_obj, -20);
    call Node600();
end

procedure Booze
begin
    restock_obj := create_object(125, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    item_caps_adjust(dude_obj, -10);
    call Node600();
end

procedure Rum
begin
    restock_obj := create_object(311, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    item_caps_adjust(dude_obj, -15);
    call Node600();
end
