variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node710;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Node1550;
procedure Node1650;
procedure Node1700;
procedure Node1750;
procedure Node1850;
procedure Node1900;
procedure Node1950;
procedure Node2000;
procedure Node2050;
procedure Node2100;
procedure Node2150;
procedure Node2250;
procedure Node2300;
procedure Node2350;
procedure Node2400;
procedure Node2450;
procedure Node2500;
procedure Node2550;
procedure Node2600;
procedure Node2650;
procedure Node2700;
procedure Node2750;
procedure Node2800;
procedure Node2850;
procedure Node2900;
procedure Node2950;
procedure Node3000;
procedure Node3050;
procedure Node3100;
procedure Node3150;
procedure Node3200;
procedure Node3250;
procedure Node_Bridge_552;
procedure Node_Bridge_652;
procedure Node_Bridge_654;
procedure Node_Bridge_1401;
procedure Node_Bridge_1403;
procedure Node_Bridge_1404;
procedure Node_Bridge_2701;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure Node998;
procedure Node999;
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

import variable George_obj;

variable max_time_to_walk;
variable Projed_Smycku;

procedure GraveFn;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure Node500
begin
    if (dude_gender == 0) then begin
        Reply(500);
    end
    if (dude_gender == 1) then begin
        Reply(501);
    end
    if (local_var(4) == 1) then begin
        giq_option(4, NAME, 507, Node650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 504, Node550, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 502, Node550, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 503, Node550, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 505, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 506, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 508, Node2800, NEUTRAL_REACTION);
    giq_option(-3, NAME, 509, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 510, Node2850, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    giq_option(4, NAME, 551, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 553, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 552, Node_Bridge_552, NEUTRAL_REACTION);
end

procedure Node600
begin
    if (dude_gender == 0) then begin
        Reply(600);
    end
    if (dude_gender == 1) then begin
        Reply(601);
    end
    if (local_var(7) == 1) then begin
        giq_option(4, NAME, 603, Node650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 602, Node999, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    if ((item_caps_total(dude_obj) >= 15) and (local_var(8) == 0)) then begin
        giq_option(4, NAME, 652, Node_Bridge_652, NEUTRAL_REACTION);
    end
    if ((item_caps_total(dude_obj) >= 15) and (local_var(8) > 0)) then begin
        giq_option(4, NAME, 654, Node_Bridge_654, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 651, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 653, Node999, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    giq_option(4, NAME, 701, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 702, Node800, NEUTRAL_REACTION);
end

procedure Node710
begin
    Reply(710);
    giq_option(4, NAME, 711, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 712, Node800, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    giq_option(4, NAME, 751, Node1450, NEUTRAL_REACTION);
    giq_option(4, NAME, 752, Node1500, NEUTRAL_REACTION);
    giq_option(4, NAME, 753, Node1550, NEUTRAL_REACTION);
    giq_option(4, NAME, 755, Node999, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800);
    giq_option(4, NAME, 801, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 802, Node999, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850);
    set_local_var(8, 2);
    giq_option(4, NAME, 851, Node900, NEUTRAL_REACTION);
end

procedure Node900
begin
    Reply(900);
    giq_option(4, NAME, 901, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 902, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 903, Node1100, NEUTRAL_REACTION);
end

procedure Node950
begin
    Reply(950);
    giq_option(4, NAME, 951, Node1000, NEUTRAL_REACTION);
end

procedure Node1000
begin
    Reply(1000);
    giq_option(4, NAME, 1001, Node1150, NEUTRAL_REACTION);
    giq_option(4, NAME, 1002, Node1200, NEUTRAL_REACTION);
    giq_option(4, NAME, 1003, Node999, NEUTRAL_REACTION);
end

procedure Node1100
begin
    Reply(1100);
    giq_option(4, NAME, 1102, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 1101, Node999, NEUTRAL_REACTION);
end

procedure Node1150
begin
    Reply(1150);
    giq_option(4, NAME, 1151, Node1200, NEUTRAL_REACTION);
end

procedure Node1200
begin
    Reply(1200);
    giq_option(4, NAME, 1202, Node1300, NEUTRAL_REACTION);
    giq_option(4, NAME, 1201, Node1250, NEUTRAL_REACTION);
end

procedure Node1250
begin
    Reply(1250);
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        set_global_var(GVAR_PTR_KERI_REACTIONS, global_var(GVAR_PTR_KERI_REACTIONS) bwor 1024);
    end
    giq_option(4, NAME, 1251, Node1300, NEUTRAL_REACTION);
end

procedure Node1300
begin
    Reply(1300);
    giq_option(4, NAME, 1301, Node1350, NEUTRAL_REACTION);
end

procedure Node1350
begin
    Reply(1350);
    giq_option(4, NAME, 1352, Node1400, NEUTRAL_REACTION);
    giq_option(4, NAME, 1351, Node999, NEUTRAL_REACTION);
end

procedure Node1400
begin
    Reply(1400);
    giq_option(4, NAME, 1402, Node2900, NEUTRAL_REACTION);
    giq_option(4, NAME, 1401, Node_Bridge_1401, NEUTRAL_REACTION);
    giq_option(4, NAME, 1404, Node_Bridge_1404, NEUTRAL_REACTION);
    giq_option(4, NAME, 1403, Node_Bridge_1403, NEUTRAL_REACTION);
end

procedure Node1450
begin
    Reply(1450);
    giq_option(4, NAME, 1451, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1452, Node750, NEUTRAL_REACTION);
end

procedure Node1500
begin
    Reply(1500);
    giq_option(4, NAME, 1501, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 1502, Node750, NEUTRAL_REACTION);
end

procedure Node1550
begin
    Reply(1550);
    giq_option(4, NAME, 1551, Node1700, NEUTRAL_REACTION);
end

procedure Node1650
begin
    Reply(1650);
    giq_option(4, NAME, 1651, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 1652, Node750, NEUTRAL_REACTION);
end

procedure Node1700
begin
    Reply(1700);
    giq_option(4, NAME, 1701, Node1750, NEUTRAL_REACTION);
    giq_option(4, NAME, 1702, Node750, NEUTRAL_REACTION);
end

procedure Node1750
begin
    Reply(1750);
    giq_option(4, NAME, 1751, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 1752, Node999, NEUTRAL_REACTION);
end

procedure Node1850
begin
    Reply(1850);
    if ((global_var(GVAR_RH_FarleyAboutReed) != 1) and (local_var(9) != 1) and (local_var(11) != 1)) then begin
        giq_option(4, NAME, 1855, Node2900, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_FarleyAboutReed) == 1) and (local_var(9) != 1) and ((map_var(1) bwand 8192) == 0)) then begin
        giq_option(4, NAME, 1851, Node3200, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_ReadReedNotes) == 1) and obj_is_carrying_obj_pid(dude_obj, 535) and (local_var(12) != 1)) then begin
        giq_option(4, NAME, 1852, Node3050, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_ReadExamNotes) == 2) and (local_var(11) != 1)) then begin
        giq_option(4, NAME, 1853, Node1900, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_TruthAboutFuneral) == 2) and (local_var(11) == 1) and (local_var(12) == 1)) then begin
        giq_option(4, NAME, 2401, Node2450, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1854, Node999, NEUTRAL_REACTION);
end

procedure Node1900
begin
    Reply(1900);
    giq_option(4, NAME, 1901, Node1950, NEUTRAL_REACTION);
end

procedure Node1950
begin
    Reply(1950);
    giq_option(4, NAME, 1951, Node2000, NEUTRAL_REACTION);
end

procedure Node2000
begin
    Reply(2000);
    set_global_var(GVAR_RH_GeorgeAboutFuneral, 1);
    giq_option(4, NAME, 2001, Node2050, NEUTRAL_REACTION);
    giq_option(4, NAME, 2002, Node999, NEUTRAL_REACTION);
end

procedure Node2050
begin
    Reply(2050);
    giq_option(4, NAME, 2052, Node2150, NEUTRAL_REACTION);
    giq_option(4, NAME, 2051, Node2100, NEUTRAL_REACTION);
end

procedure Node2100
begin
    Reply(2100);
    giq_option(4, NAME, 2102, Node2150, NEUTRAL_REACTION);
    giq_option(4, NAME, 2101, Node999, NEUTRAL_REACTION);
end

procedure Node2150
begin
    Reply(2150);
    giq_option(4, NAME, 2151, Node2250, NEUTRAL_REACTION);
    giq_option(4, NAME, 2152, Node2250, NEUTRAL_REACTION);
end

procedure Node2250
begin
    Reply(2250);
    giq_option(4, NAME, 2251, Node2300, NEUTRAL_REACTION);
    giq_option(4, NAME, 2252, Node999, NEUTRAL_REACTION);
end

procedure Node2300
begin
    Reply(2300);
    giq_option(4, NAME, 2301, Node2350, NEUTRAL_REACTION);
end

procedure Node2350
begin
    Reply(2350);
    giq_option(4, NAME, 2351, Node2400, NEUTRAL_REACTION);
end

procedure Node2400
begin
    Reply(2400);
    set_local_var(11, 1);
    if ((global_var(GVAR_RH_TruthAboutFuneral) == 2) and (local_var(12) == 1)) then begin
        giq_option(5, NAME, 2401, Node2450, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2402, Node999, NEUTRAL_REACTION);
end

procedure Node2450
begin
    Reply(2450);
    if (global_var(GVAR_RH_ALEXA_DEAD) == 1) then begin
        if (global_var(GVAR_RH_LEONARD_SEARCH) != 0) then begin
            giq_option(4, NAME, 2453, Node2600, NEUTRAL_REACTION);
        end
    end
    else begin
        giq_option(4, NAME, 2451, Node2500, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2452, Node2500, NEUTRAL_REACTION);
end

procedure Node2500
begin
    Reply(2500);
    give_exp_points(500);
    display_msg(g_mstr(100) + 500 + g_mstr(101));
    set_global_var(GVAR_RH_AlexaMayKilledMarie, 1);
    giq_option(4, NAME, 2501, Node999, NEUTRAL_REACTION);
end

procedure Node2550
begin
    Reply(2550);
    if ((global_var(GVAR_RH_ALEXA_DEAD) == 1) and (global_var(GVAR_RH_AlexaMayKilledMarie) == 1) and ((global_var(GVAR_RH_ALEXA_TOLDKILLER) == 1) or (global_var(GVAR_RH_LEONARD_SEARCH) != 0))) then begin
        giq_option(4, NAME, 2552, Node2600, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 2551, Node999, NEUTRAL_REACTION);
    end
end

procedure Node2600
begin
    Reply(2600);
    if (global_var(GVAR_RH_ALEXA_TOLDKILLER) == 1) then begin
        giq_option(4, NAME, 2601, Node2650, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_ALEXA_TOLDKILLER) != 1) then begin
        giq_option(4, NAME, 2602, Node2650, NEUTRAL_REACTION);
    end
end

procedure Node2650
begin
    if (dude_gender == 0) then begin
        Reply(2650);
    end
    if (dude_gender == 1) then begin
        Reply(2651);
    end
    if ((dude_gender == 0) and (global_var(GVAR_RH_ALEXA_SUICIDE) != 1)) then begin
        giq_option(4, NAME, 2652, Node2700, NEUTRAL_REACTION);
    end
    if ((dude_gender == 1) and (global_var(GVAR_RH_ALEXA_SUICIDE) != 1)) then begin
        giq_option(4, NAME, 2653, Node2700, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_ALEXA_SUICIDE) == 1) then begin
        giq_option(4, NAME, 2654, Node2750, NEUTRAL_REACTION);
    end
end

procedure Node2700
begin
    Reply(2700);
    giq_option(4, NAME, 2701, Node_Bridge_2701, NEUTRAL_REACTION);
end

procedure Node2750
begin
    Reply(2750);
    giq_option(4, NAME, 2751, Node_Bridge_2701, NEUTRAL_REACTION);
end

procedure Node2800
begin
    Reply(2800);
    giq_option(-3, NAME, 2801, Node999, NEUTRAL_REACTION);
end

procedure Node2850
begin
    Reply(2850);
    giq_option(-3, NAME, 2851, Node2800, NEUTRAL_REACTION);
end

procedure Node2900
begin
    Reply(2900);
    set_local_var(9, 1);
    set_global_var(GVAR_RH_FarleyAboutReed, 1);
    set_global_var(GVAR_RH_GeorgeAboutLetter, 1);
    giq_option(4, NAME, 2901, Node2950, NEUTRAL_REACTION);
end

procedure Node2950
begin
    Reply(2950);
    giq_option(4, NAME, 2951, Node3000, NEUTRAL_REACTION);
end

procedure Node3000
begin
    Reply(3000);
    giq_option(4, NAME, 3002, Node_Bridge_1403, NEUTRAL_REACTION);
end

procedure Node3050
begin
    Reply(3050);
    set_local_var(12, 1);
    set_map_var(1, map_var(1) bwor 16384);
    if ((global_var(GVAR_RH_GeorgeAboutLetter) == 1) or (local_var(9) == 1) or ((map_var(1) bwand 8192) != 0)) then begin
        giq_option(7, NAME, 3051, Node3150, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_GeorgeAboutLetter) == 1) or (local_var(9) == 1) or ((map_var(1) bwand 8192) != 0)) then begin
        giq_option(4, NAME, 3052, Node3100, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_GeorgeAboutLetter) != 1) and (local_var(9) != 1) and ((map_var(1) bwand 8192) == 0)) then begin
        giq_option(4, NAME, 3053, Node3250, NEUTRAL_REACTION);
    end
end

procedure Node3100
begin
    Reply(3100);
    give_exp_points(200);
    display_msg(g_mstr(100) + 200 + g_mstr(101));
    if ((global_var(GVAR_RH_TruthAboutFuneral) == 2) and (local_var(11) == 1) and (local_var(12) == 1)) then begin
        giq_option(4, NAME, 2401, Node2450, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3101, Node999, NEUTRAL_REACTION);
end

procedure Node3150
begin
    Reply(3150);
    give_exp_points(200);
    display_msg(g_mstr(100) + 200 + g_mstr(101));
    if ((global_var(GVAR_RH_TruthAboutFuneral) == 2) and (local_var(11) == 1) and (local_var(12) == 1)) then begin
        giq_option(4, NAME, 2401, Node2450, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3151, Node999, NEUTRAL_REACTION);
end

procedure Node3200
begin
    if (global_var(GVAR_RH_ReadReedNotes) != 1) then begin
        Reply(3200);
    end
    if (global_var(GVAR_RH_ReadReedNotes) == 1) then begin
        Reply(3201);
    end
    set_local_var(9, 1);
    set_global_var(GVAR_RH_FarleyAboutReed, 1);
    set_global_var(GVAR_RH_GeorgeAboutLetter, 1);
    if ((global_var(GVAR_RH_ReadReedNotes) == 1) and obj_is_carrying_obj_pid(dude_obj, 535) and (local_var(12) != 1)) then begin
        giq_option(4, NAME, 3205, Node3050, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3202, Node999, NEUTRAL_REACTION);
end

procedure Node3250
begin
    Reply(3250);
    set_map_var(1, map_var(1) bwor 8192);
    if (global_var(GVAR_RH_GeorgeAboutLetter) == 0) then begin
        set_global_var(GVAR_RH_GeorgeAboutLetter, 1);
    end
    if (global_var(GVAR_RH_FarleyAboutReed) == 0) then begin
        set_global_var(GVAR_RH_FarleyAboutReed, 1);
    end
    giq_option(7, NAME, 3251, Node3150, NEUTRAL_REACTION);
    giq_option(4, NAME, 3252, Node3100, NEUTRAL_REACTION);
end

procedure Node_Bridge_552
begin
    set_local_var(7, 1);
end

procedure Node_Bridge_652
begin
    item_caps_adjust(dude_obj, -15);
    set_local_var(8, 1);
    call Node700();
end

procedure Node_Bridge_654
begin
    item_caps_adjust(dude_obj, -15);
    if (local_var(8) == 1) then begin
        call Node710();
    end
    else begin
        call Node750();
    end
end

procedure Node_Bridge_1401
begin
    set_global_var(GVAR_RH_Q_QUEST_MARIE, 4);
    call Node999();
end

procedure Node_Bridge_1403
begin
    set_global_var(GVAR_RH_Q_QUEST_MARIE, 4);
    call Node999();
end

procedure Node_Bridge_1404
begin
    set_global_var(GVAR_RH_Q_QUEST_MARIE, 4);
    call Node750();
end

procedure Node_Bridge_2701
begin
    set_global_var(GVAR_RH_Q_QUEST_MARIE, 8);
    set_global_var(GVAR_TOWN_REP_RATHOLE, global_var(GVAR_TOWN_REP_RATHOLE) + 5);
    if (global_var(GVAR_RH_AlexaMayKilledMarie) == 1) then begin
        give_exp_points(500);
        display_msg(g_mstr(100) + 500 + g_mstr(101));
    end
    else begin
        give_exp_points(1000);
        display_msg(g_mstr(100) + 1000 + g_mstr(101));
    end
    set_local_var(10, 1);
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 237);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANTS);
    if (not(is_loading_game)) then begin
        if (global_var(GVAR_RH_JULIAN_DEAD) == 1) then begin
            if ((global_var(GVAR_RH_ALEXA_DEAD) != 1) or (global_var(GVAR_RH_Q_ALEXA_QUEST3) == 2) or (global_var(GVAR_RH_Q_ALEXA_QUEST3) == 8)) then begin
                destroy_object(self_obj);
            end
            if (not((map_var(1) bwand 2048) == 0)) then begin
                destroy_object(self_obj);
            end
        end
        if (global_var(GVAR_RH_Q_ALEXA_QUEST3) == 4) then begin
            move_to(self_obj, 15056, 0);
            anim(self_obj, 1000, 3);
        end
    end
    add_timer_event(self_obj, game_ticks(random(20, 30)), 1);
end

procedure map_exit_p_proc
begin
    if ((global_var(GVAR_RH_JULIAN_DEAD) == 1) and (global_var(GVAR_RH_ALEXA_DEAD) != 1)) then begin
        set_map_var(1, map_var(1) bwor 2048);
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
    anim(self_obj, 1000, 3);
end

procedure start
begin
    George_obj := self_obj;
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if (local_var(10) == 1) then begin
        if ((tile_num(self_obj) == 14064) or ((max_time_to_walk + (7 * 10)) < game_time)) then begin
            game_ui_enable;
            gfade_out(10);
            gfade_in(10);
            destroy_object(self_obj);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure destroy_p_proc
begin
    set_map_var(6, 1);
    if (global_var(GVAR_RH_Q_QUEST_MARIE) != 8) then begin
        set_global_var(GVAR_RH_GEORGE_DEAD, 1);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_RATHOLE, global_var(GVAR_TOWN_REP_RATHOLE) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_RATHOLE, global_var(GVAR_TOWN_REP_RATHOLE) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_mstr(150);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_mstr(250);
    end
    else begin
        display_mstr(200);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
    end
end

procedure talk_p_proc
begin
    if ((global_var(GVAR_RH_Q_QUEST_MARIE) == 0) and (global_var(GVAR_RH_ALEXA_DEAD) == 1)) then begin
        float_msg(self_obj, mstr(random(352, 355)), FLOAT_MSG_YELLOW);
        Projed_Smycku := 1;
    end
    if ((global_var(GVAR_RH_Q_QUEST_MARIE) == 0) and (global_var(GVAR_RH_JULIAN_DEAD) == 1) and (global_var(GVAR_RH_ALEXA_DEAD) != 1)) then begin
        float_msg(self_obj, mstr(356), FLOAT_MSG_LIGHT_RED);
        Projed_Smycku := 1;
    end
    if (Projed_Smycku == 0) then begin
        if (global_var(GVAR_RH_Q_QUEST_MARIE) == 8) then begin
            if (dude_gender == 0) then begin
                float_msg(self_obj, mstr(350), FLOAT_MSG_GREEN);
            end
            if (dude_gender == 1) then begin
                float_msg(self_obj, mstr(351), FLOAT_MSG_GREEN);
            end
        end
        else begin
            anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
            start_gdialog(1481, self_obj, 4, -1, -1);
            gsay_start;
            if ((global_var(GVAR_RH_AlexaMayKilledMarie) == 1) and (global_var(GVAR_RH_Q_QUEST_MARIE) != 8)) then begin
                call Node2550();
            end
            else begin
                if (global_var(GVAR_RH_Q_QUEST_MARIE) == 4) then begin
                    call Node1850();
                end
                else begin
                    call Node500();
                end
            end
            gsay_end;
            end_dialogue;
            set_local_var(4, 1);
        end
    end
    Projed_Smycku := 0;
    if (local_var(10) == 1) then begin
        call GraveFn();
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and (global_var(GVAR_RH_Q_QUEST_MARIE) != 8)) then begin
        if (not(combat_is_initialized)) then begin
            float_msg(self_obj, mstr(random(300, 303)), FLOAT_MSG_YELLOW);
        end
        add_timer_event(self_obj, game_ticks(random(20, 30)), 1);
    end
end

procedure GraveFn
begin
    max_time_to_walk := game_time;
    game_ui_disable;
    animate_move_obj_to_tile(self_obj, 14064, 0);
end
