variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure use_skill_on_p_proc;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node550_second_page;
procedure Node600;
procedure Node650;
procedure Node650_second_page;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Answers_first_page;
procedure Answers_second_page;
procedure Node_bridge_for_Max;

variable answer;
variable ans_state;

import variable Dave;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure use_p_proc
begin
    script_overrides;
    if (combat_is_initialized) then begin
        display_mstr(300);
    end
    else begin
        if (Dave and not(critter_state(Dave) bwand 1)) then begin
            if (using_skill(dude_obj, 8) and is_success(roll_vs_skill(dude_obj, 8, -60))) then begin
                start_gdialog(409, self_obj, 4, -1, -1);
                gsay_start;
                call Node500();
                gsay_end;
                end_dialogue;
            end
            else begin
                add_timer_event(Dave, 0, 10);
            end
        end
        else begin
            start_gdialog(409, self_obj, 4, -1, -1);
            gsay_start;
            call Node500();
            gsay_end;
            end_dialogue;
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(200);
end

procedure timed_event_p_proc
begin
end

procedure map_enter_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := action_being_used;
    if (LVar0 == 12) then begin
        script_overrides;
        call use_p_proc();
    end
end

procedure Node999
begin
end

procedure Node500
begin
    Reply(mstr(500) + mstr(501) + mstr(502));
    if (dude_skill(SKILL_SCIENCE) > 105) then begin
        giq_option(4, NAME, 503, Node550, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 503, Node600, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 504, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 505, Node999, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    call Answers_first_page();
    if (answer >= 8) then begin
        giq_option(4, NAME, 563, Node550_second_page, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 562, Node999, NEUTRAL_REACTION);
    end
end

procedure Node550_second_page
begin
    Reply(550);
    giq_option(4, NAME, 564, Node550, NEUTRAL_REACTION);
    call Answers_second_page();
    giq_option(4, NAME, 562, Node999, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600);
    set_global_var(GVAR_ENEMY_OBRODA, 1);
    giq_option(4, NAME, 601, Node999, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    call Answers_first_page();
    if (answer >= 8) then begin
        giq_option(4, NAME, 563, Node650_second_page, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 562, Node999, NEUTRAL_REACTION);
    end
end

procedure Node650_second_page
begin
    Reply(650);
    giq_option(4, NAME, 564, Node650, NEUTRAL_REACTION);
    call Answers_second_page();
    giq_option(4, NAME, 562, Node999, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    giq_option(4, NAME, 701, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 702, Node999, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    giq_option(4, NAME, 751, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 752, Node999, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800);
    giq_option(4, NAME, 801, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 802, Node999, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850);
    giq_option(4, NAME, 851, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 852, Node999, NEUTRAL_REACTION);
end

procedure Node900
begin
    Reply(900);
    giq_option(4, NAME, 901, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 902, Node999, NEUTRAL_REACTION);
end

procedure Node950
begin
    if ((map_var(4) bwand 16) == 0) then begin
        if (global_var(GVAR_G_MAX_EQUIP) == 1) then begin
            Reply(mstr(950) + mstr(951) + mstr(954) + mstr(952) + mstr(955));
        end
        if (global_var(GVAR_G_MAX_EQUIP) == 2) then begin
            Reply(mstr(950) + mstr(951) + mstr(954) + mstr(953) + mstr(955));
        end
        if (global_var(GVAR_G_MAX_EQUIP) == 3) then begin
            Reply(mstr(950) + mstr(951) + mstr(954) + mstr(952) + mstr(954) + mstr(953) + mstr(955));
        end
    end
    else begin
        if (global_var(GVAR_G_MAX_EQUIP) == 1) then begin
            Reply(mstr(950) + mstr(952) + mstr(955));
        end
        if (global_var(GVAR_G_MAX_EQUIP) == 2) then begin
            Reply(mstr(950) + mstr(953) + mstr(955));
        end
        if (global_var(GVAR_G_MAX_EQUIP) == 3) then begin
            Reply(mstr(950) + mstr(952) + mstr(954) + mstr(953) + mstr(955));
        end
    end
    giq_option(4, NAME, 956, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 957, Node999, NEUTRAL_REACTION);
end

procedure Answers_first_page
begin
    answer := 0;
    ans_state := 0;
    if (global_var(GVAR_G_LEONARD_KNOWN) == 1) then begin
        giq_option(4, NAME, 551, Node700, NEUTRAL_REACTION);
        answer := answer + 1;
    end
    if (global_var(GVAR_G_JAMES_KNOWN) == 1) then begin
        if ((map_var(4) bwand 1) == 0) then begin
            giq_option(4, NAME, 552, Node750, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 552, Node700, NEUTRAL_REACTION);
        end
        answer := answer + 1;
    end
    if (global_var(GVAR_G_TRAMELL_KNOWN) == 1) then begin
        giq_option(4, NAME, 553, Node700, NEUTRAL_REACTION);
        answer := answer + 1;
    end
    if (global_var(GVAR_G_JESS_KNOWN) == 1) then begin
        if ((map_var(4) bwand 2) == 0) then begin
            giq_option(4, NAME, 554, Node800, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 554, Node700, NEUTRAL_REACTION);
        end
        answer := answer + 1;
    end
    if (obj_carrying_pid_obj(dude_obj, 548) or (global_var(GVAR_G_ERICK_KNOWN) == 1)) then begin
        if ((map_var(4) bwand 4) == 0) then begin
            giq_option(4, NAME, 555, Node850, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 555, Node700, NEUTRAL_REACTION);
        end
        answer := answer + 1;
    end
    if (global_var(GVAR_G_CECILIA_KNOWN) == 1) then begin
        giq_option(4, NAME, 556, Node700, NEUTRAL_REACTION);
        answer := answer + 1;
    end
    if (obj_carrying_pid_obj(dude_obj, 546) or (global_var(GVAR_G_ROBERT_KNOWN) == 1)) then begin
        giq_option(4, NAME, 557, Node700, NEUTRAL_REACTION);
        answer := answer + 1;
        if (answer == 7) then begin
            ans_state := 1;
        end
    end
    if (global_var(GVAR_G_DARRELL_KNOWN) == 1) then begin
        if (answer < 7) then begin
            if ((map_var(4) bwand 8) == 0) then begin
                giq_option(4, NAME, 558, Node900, NEUTRAL_REACTION);
            end
            else begin
                giq_option(4, NAME, 558, Node700, NEUTRAL_REACTION);
            end
        end
        answer := answer + 1;
        if (answer == 7) then begin
            ans_state := 2;
        end
    end
    if (global_var(GVAR_G_CHRIS_KNOWN) == 1) then begin
        if (answer < 7) then begin
            giq_option(4, NAME, 559, Node700, NEUTRAL_REACTION);
        end
        answer := answer + 1;
        if (answer == 7) then begin
            ans_state := 3;
        end
    end
    if (obj_carrying_pid_obj(dude_obj, 547) or (global_var(GVAR_G_FEARGUS_KNOWN) == 1)) then begin
        if (answer < 7) then begin
            giq_option(4, NAME, 560, Node700, NEUTRAL_REACTION);
        end
        answer := answer + 1;
        if (answer == 7) then begin
            ans_state := 4;
        end
    end
    if (global_var(GVAR_G_MAX_REGISTRATION) >= 2) then begin
        if (answer < 7) then begin
            giq_option(4, NAME, 561, Node_bridge_for_Max, NEUTRAL_REACTION);
        end
        answer := answer + 1;
        if (answer == 7) then begin
            ans_state := 5;
        end
    end
end

procedure Answers_second_page
begin
    if ((ans_state < 2) and (global_var(GVAR_G_DARRELL_KNOWN) == 1)) then begin
        if ((map_var(4) bwand 8) == 0) then begin
            giq_option(4, NAME, 558, Node900, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 558, Node700, NEUTRAL_REACTION);
        end
    end
    if ((ans_state < 3) and (global_var(GVAR_G_CHRIS_KNOWN) == 1)) then begin
        giq_option(4, NAME, 559, Node700, NEUTRAL_REACTION);
    end
    if ((ans_state < 4) and (obj_carrying_pid_obj(dude_obj, 547) or (global_var(GVAR_G_FEARGUS_KNOWN) == 1))) then begin
        giq_option(4, NAME, 560, Node700, NEUTRAL_REACTION);
    end
    if ((ans_state < 5) and (global_var(GVAR_G_MAX_REGISTRATION) >= 2)) then begin
        giq_option(4, NAME, 561, Node_bridge_for_Max, NEUTRAL_REACTION);
    end
end

procedure Node_bridge_for_Max
begin
    if ((map_var(4) bwand 16) == 0) then begin
        call Node950();
    end
    else begin
        if (((map_var(4) bwand 32) == 0) and (global_var(GVAR_G_MAX_EQUIP) != 0)) then begin
            call Node950();
        end
        else begin
            call Node700();
        end
    end
end
