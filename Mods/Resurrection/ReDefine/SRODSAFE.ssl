variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure damage_p_proc;
procedure use_p_proc;
procedure timed_event_p_proc;
procedure map_exit_p_proc;
procedure use_skill_on_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure spin_dial;
procedure TrapExplosion;
procedure use_obj_on_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777958) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777958)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777957) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777957)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778018) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778018)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure map_enter_p_proc
begin
    if (map_first_run) then begin
        if (not(is_loading_game)) then begin
            set_local_var(0, 1);
        end
    end
end

procedure map_update_p_proc
begin
end

procedure damage_p_proc
begin
    if (weapon_dmg_type(target_obj) == 6) then begin
        display_msg(message_str(SCRIPT_SCARSAFL, 344));
    end
end

procedure use_p_proc
begin
    if (combat_is_initialized) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_SCARSAFL, 343));
    end
    else begin
        if (local_var(0) == 1) then begin
            script_overrides;
            if ((dude_perception > 8) and (dude_iq > 3)) then begin
                set_local_var(0, 0);
                display_msg(message_str(SCRIPT_SCARSAFL, 205));
            end
            else begin
                if (spin_dial() == 1) then begin
                    obj_open(self_obj);
                    set_local_var(0, 0);
                    display_msg(message_str(SCRIPT_SCARSAFL, 206));
                end
                else begin
                    display_msg(message_str(SCRIPT_SCARSAFL, 207));
                end
            end
        end
        else begin
            if (local_var(2) == 0) then begin
                script_overrides;
                if (local_var(1) == 0) then begin
                    set_local_var(1, 1);
                    if (dude_skill(SKILL_TRAPS) > 40) then begin
                        display_msg(message_str(SCRIPT_SCARSAFL, 500 + (dude_gender == 1)));
                    end
                    else begin
                        call TrapExplosion();
                    end
                end
                else begin
                    call TrapExplosion();
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
end

procedure map_exit_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    if (combat_is_initialized) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_SCARSAFL, 343));
    end
    else begin
        script_overrides;
        if (action_being_used == 9) then begin
            if (local_var(0) == 1) then begin
                if (is_success(roll_vs_skill(source_obj, 9, -40))) then begin
                    display_msg(message_str(SCRIPT_SCARSAFL, 203));
                    set_local_var(0, 0);
                end
                else begin
                    display_msg(message_str(SCRIPT_SCARSAFL, 204));
                end
            end
            else begin
                display_msg(message_str(SCRIPT_SCARSAFL, 202));
            end
        end
        else begin
            if ((local_var(2) == 0) and (action_being_used == 11)) then begin
                script_overrides;
                if (local_var(1) == 0) then begin
                    set_local_var(1, 1);
                    if (dude_skill(SKILL_TRAPS) > 40) then begin
                        display_msg(message_str(SCRIPT_SCARSAFL, 500 + (dude_gender == 1)));
                    end
                    else begin
                        call TrapExplosion();
                    end
                end
                else begin
                    if (dude_skill(SKILL_TRAPS) > 70) then begin
                        set_local_var(2, 1);
                        display_msg(message_str(SCRIPT_SCARSAFL, 700));
                    end
                    else begin
                        display_msg(message_str(SCRIPT_SCARSAFL, 600));
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_SCARSAFL, 100));
end

procedure description_p_proc
begin
    script_overrides;
    if (obj_is_open(self_obj)) then begin
        display_msg(message_str(SCRIPT_SCARSAFL, 201));
    end
    else begin
        display_msg(message_str(SCRIPT_SCARSAFL, 200));
    end
end

procedure spin_dial
begin
    if (dude_luck < 9) then begin
        return 0;
    end
    else begin
        if (dude_luck == 10) then begin
            return 1;
        end
        else begin
            if (random(1, 100) > 90) then begin
                return 1;
            end
            else begin
                return 0;
            end
        end
    end
end

procedure TrapExplosion
begin
    variable LVar0 := 0;
    obj_open(self_obj);
    LVar0 := create_object(129, 0, 1);
    move_obj_inven_to_obj(self_obj, LVar0);
    explosion(tile_num(self_obj), elevation(self_obj), random(8, 12));
    display_msg(message_str(SCRIPT_SCARSAFL, 400 + (dude_gender == 1)));
    set_local_var(1, 1);
    set_local_var(2, 1);
    destroy_object(LVar0);
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(obj_being_used_with);
    if ((LVar0 == 84) or (LVar0 == 410)) then begin
        if (combat_is_initialized) then begin
            script_overrides;
            display_msg(message_str(SCRIPT_SCARSAFL, 343));
        end
        else begin
            script_overrides;
            if (local_var(0) == 1) then begin
                if (is_success(roll_vs_skill(source_obj, 9, -40))) then begin
                    display_msg(message_str(SCRIPT_SCARSAFL, 203));
                    set_local_var(0, 0);
                    obj_open(self_obj);
                end
                else begin
                    display_msg(message_str(SCRIPT_SCARSAFL, 204));
                end
            end
            else begin
                display_msg(message_str(SCRIPT_SCARSAFL, 202));
            end
        end
    end
end
