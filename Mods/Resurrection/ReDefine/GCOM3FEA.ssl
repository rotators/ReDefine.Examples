variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure use_skill_on_p_proc;
procedure Node999;
procedure Node999_Alarm;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;

import variable Feargus;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure use_p_proc
begin
    script_overrides;
    if (combat_is_initialized) then begin
        display_mstr(300);
    end
    else begin
        start_gdialog(404, self_obj, 4, -1, -1);
        gsay_start;
        call Node500();
        gsay_end;
        end_dialogue;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(200);
end

procedure timed_event_p_proc
begin
end

procedure map_enter_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := action_being_used;
    if (LVar0 == 12) then begin
        script_overrides;
        call use_p_proc();
    end
end

procedure Node999
begin
end

procedure Node999_Alarm
begin
    animate_move_obj_to_tile(Feargus, tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), 1);
end

procedure Node500
begin
    Reply(mstr(500) + mstr(501) + mstr(502));
    if (dude_skill(SKILL_SCIENCE) > 105) then begin
        giq_option(4, NAME, 503, Node550, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 503, Node600, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 504, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 505, Node999, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    if ((global_var(GVAR_G_MAX_REGISTRATION) == 3) and ((local_var(4) bwand 1) == 0)) then begin
        giq_option(4, NAME, 551, Node650, NEUTRAL_REACTION);
    end
    if ((local_var(4) bwand 2) == 0) then begin
        if ((dude_skill(SKILL_SCIENCE) > 120) and (dude_skill(SKILL_REPAIR) > 120)) then begin
            giq_option(4, NAME, 552, Node850, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 552, Node800, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 553, Node999, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600);
    set_global_var(GVAR_ENEMY_OBRODA, 1);
    giq_option(4, NAME, 601, Node999_Alarm, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    set_local_var(4, local_var(4) bwor 1);
    giq_option(4, NAME, 651, Node700, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    giq_option(4, NAME, 701, Node750, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    set_map_var(2, 1);
    restock_obj := create_object(550, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    give_exp_points(500);
    display_msg(g_mstr(100) + 500 + g_mstr(101));
    if ((local_var(4) bwand 2) == 0) then begin
        if ((dude_skill(SKILL_SCIENCE) > 120) and (dude_skill(SKILL_REPAIR) > 120)) then begin
            giq_option(4, NAME, 751, Node850, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 751, Node800, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 752, Node999, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800 + (dude_gender == 1));
    set_local_var(4, local_var(4) bwor 2);
    if ((global_var(GVAR_G_MAX_REGISTRATION) == 3) and ((local_var(4) bwand 1) == 0)) then begin
        giq_option(4, NAME, 802, Node650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 803, Node999, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850 + (dude_gender == 1));
    set_local_var(4, local_var(4) bwor 2);
    critter_mod_skill(dude_obj, SKILL_ENERGY_WEAPONS, 5);
    if ((global_var(GVAR_G_MAX_REGISTRATION) == 3) and ((local_var(4) bwand 1) == 0)) then begin
        giq_option(4, NAME, 852, Node650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 853, Node999, NEUTRAL_REACTION);
end
