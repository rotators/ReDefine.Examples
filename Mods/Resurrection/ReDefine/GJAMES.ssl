variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure Node998;
procedure Node999;
procedure Node_access;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Node1550;
procedure Node1600;
procedure Node1650;
procedure Node1700;
procedure Node1750;
procedure Node1800;
procedure Node1850;
procedure Node1900;
procedure Node1950;
procedure Node2000;
procedure Node2050;
procedure Node2100;
procedure Node2150;
procedure Node2200;
procedure Node2250;
procedure Node2300;
procedure Node2350;
procedure Node2400;
procedure Node2450;
procedure Node2500;
procedure Node2550;
procedure Node2600;
procedure Node2650;
procedure Node2700;
procedure Node2750;
procedure Node2800;
procedure Node2850;
procedure Node2900;
procedure Node2950;
procedure Node3000;
procedure Node3050;
procedure Node3100;
procedure Node3150;
procedure Node3200;
procedure Node3250;

import variable James;
import variable Elev_door_L1;
import variable ghoul13_map;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    James := self_obj;
end

procedure critter_p_proc
begin
    if ((((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) and (not((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) or (obj_pid(critter_inven_obj(party_member_obj(16777779), INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(party_member_obj(16777779), INVEN_TYPE_WORN)) == 113)) and (not((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) or (obj_pid(critter_inven_obj(party_member_obj(16777811), INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(party_member_obj(16777811), INVEN_TYPE_WORN)) == 113)) and (not((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) or (obj_pid(critter_inven_obj(party_member_obj(16777814), INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(party_member_obj(16777814), INVEN_TYPE_WORN)) == 113)) and (global_var(GVAR_G_HUNTERS_COUNTER) == 0)) == 0) and not(game_ui_is_disabled) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
    if ((global_var(GVAR_ENEMY_OBRODA) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
    if ((map_var(1) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        float_msg(self_obj, mstr(301), FLOAT_MSG_RED);
        set_map_var(1, 0);
        attack(dude_obj);
    end
    if ((map_var(1) != 0) and (dude_elevation == 0) and (tile_distance_objs(self_obj, dude_obj) > 6)) then begin
        set_map_var(1, 0);
    end
    if ((map_var(0) != 0) and (dude_elevation == 0) and (tile_distance_objs(self_obj, dude_obj) > 6)) then begin
        set_map_var(0, 0);
    end
    if ((map_var(0) == 0) and (dude_elevation == 0) and (tile_distance_objs(self_obj, dude_obj) > 6) and obj_is_open(Elev_door_L1)) then begin
        obj_close(Elev_door_L1);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_ENEMY_OBRODA, 1);
    end
end

procedure talk_p_proc
begin
    if (map_var(0) != 0) then begin
        float_msg(self_obj, mstr(300), FLOAT_MSG_YELLOW);
    end
    else begin
        anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
        start_gdialog(397, self_obj, 4, -1, -1);
        gsay_start;
        if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) <= 3) then begin
            if ((local_var(5) bwand 2) == 0) then begin
                call Node1800();
            end
            else begin
                call Node2100();
            end
        end
        else begin
            if (local_var(4) != 1) then begin
                call Node500();
            end
            else begin
                call Node1200();
            end
        end
        gsay_end;
        end_dialogue;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_mstr(150);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_mstr(250);
    end
    else begin
        display_mstr(200);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        add_timer_event(ghoul13_map, 0, 11);
        rm_fixed_timer_event(self_obj, 1);
        add_timer_event(self_obj, game_ticks(1), 1);
    end
    if (fixed_param == 10) then begin
        if (global_var(GVAR_ENEMY_OBRODA) == 1) then begin
            attack(dude_obj);
        end
        else begin
            dialogue_system_enter;
        end
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 271);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_OBRODA_GUARD);
    rm_fixed_timer_event(self_obj, 1);
    add_timer_event(self_obj, 1, 1);
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_ENEMY_OBRODA, 1);
    end
end

procedure destroy_p_proc
begin
    James := 0;
end

procedure Node998
begin
    set_global_var(GVAR_ENEMY_OBRODA, 1);
end

procedure Node999
begin
    anim(self_obj, 1000, 3);
end

procedure Node_access
begin
    anim(self_obj, 1000, 3);
    if (map_var(0) != 2) then begin
        set_map_var(0, 1);
    end
end

procedure Node500
begin
    Reply(500);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 501, Node550, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 501, Node2200, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 502, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 503, Node998, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    set_local_var(4, 1);
    set_global_var(GVAR_G_JAMES_KNOWN, 1);
    giq_option(4, NAME, 551, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, mstr(552) + dude_name + mstr(553), Node1150, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600);
    giq_option(4, NAME, 601, Node650, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    giq_option(4, NAME, 651, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 652, Node800, NEUTRAL_REACTION);
    giq_option(6, NAME, 653, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 654, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 655, Node999, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    giq_option(6, NAME, 701, Node750, NEUTRAL_REACTION);
    giq_option(6, NAME, 702, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 703, Node800, NEUTRAL_REACTION);
    giq_option(6, NAME, 704, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 705, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 706, Node999, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    giq_option(6, NAME, 751, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 752, Node800, NEUTRAL_REACTION);
    giq_option(6, NAME, 753, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 754, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 755, Node999, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800);
    giq_option(4, NAME, 801, Node700, NEUTRAL_REACTION);
    giq_option(6, NAME, 802, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 803, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 804, Node999, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850);
    giq_option(6, NAME, 851, Node750, NEUTRAL_REACTION);
    giq_option(4, NAME, 852, Node700, NEUTRAL_REACTION);
    giq_option(6, NAME, 853, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 854, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 855, Node999, NEUTRAL_REACTION);
end

procedure Node900
begin
    Reply(900);
    if ((local_var(5) bwand 1) == 0) then begin
        giq_option(6, NAME, 901, Node950, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 902, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 903, Node800, NEUTRAL_REACTION);
    giq_option(4, NAME, 904, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 905, Node999, NEUTRAL_REACTION);
end

procedure Node950
begin
    Reply(950);
    set_local_var(5, local_var(5) bwor 1);
    giq_option(4, NAME, 951, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 952, Node800, NEUTRAL_REACTION);
    giq_option(4, NAME, 953, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 954, Node999, NEUTRAL_REACTION);
end

procedure Node1000
begin
    Reply(1000);
    if (global_var(GVAR_G_LEONARD_KNOWN) == 1) then begin
        giq_option(4, NAME, 1001, Node1050, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_G_TRAMELL_KNOWN) == 1) then begin
        giq_option(4, NAME, 1002, Node1100, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_G_MAX_REGISTRATION) != 0) then begin
        if (global_var(GVAR_G_MAX_REGISTRATION) == 1) then begin
            giq_option(4, NAME, 1003, Node1450, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 1003, Node1500, NEUTRAL_REACTION);
        end
    end
    if (dude_gender == 0) then begin
        giq_option(4, NAME, dude_name + mstr(1004), Node1150, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, dude_name + mstr(1005), Node2300, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1006, Node999, NEUTRAL_REACTION);
end

procedure Node1050
begin
    Reply(1050);
    if (dude_skill(SKILL_SPEECH) > 100) then begin
        if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) then begin
            giq_option(4, NAME, 1051, Node3150, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 1051, Node3200, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 1052, Node999, NEUTRAL_REACTION);
end

procedure Node1100
begin
    Reply(1100);
    if (dude_skill(SKILL_SPEECH) > 100) then begin
        if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 348) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 349) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 232)) then begin
            giq_option(4, NAME, 1101, Node3250, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 1101, Node2900, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 1102, Node999, NEUTRAL_REACTION);
end

procedure Node1150
begin
    Reply(1150);
    giq_option(4, NAME, 1151, Node998, NEUTRAL_REACTION);
end

procedure Node1200
begin
    Reply(1200);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 1201, Node1250, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 1202, Node2700, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_G_LEONARD_KNOWN) == 1) then begin
        if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) then begin
            giq_option(4, NAME, 1203, Node1300, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 1203, Node2850, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_G_TRAMELL_KNOWN) == 1) then begin
        if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 348) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 349) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 232)) then begin
            giq_option(4, NAME, 1204, Node1350, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 1204, Node2900, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 1205, Node1400, NEUTRAL_REACTION);
    if (global_var(GVAR_G_MAX_REGISTRATION) != 0) then begin
        if (global_var(GVAR_G_MAX_REGISTRATION) == 1) then begin
            giq_option(4, NAME, 1206, Node1450, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 1206, Node1500, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_G_LAST_USED_NAME) == 4) then begin
        if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 348) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 349) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 232)) then begin
            giq_option(4, NAME, 1207, Node1550, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 1207, Node2950, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_G_LAST_USED_NAME) == 5) then begin
        if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) then begin
            giq_option(4, NAME, 1208, Node1600, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 1208, Node3000, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_G_LAST_USED_NAME) == 6) then begin
        if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) then begin
            giq_option(4, NAME, 1209, Node1650, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 1209, Node3050, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_G_LAST_USED_NAME) == 7) then begin
        if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) then begin
            giq_option(4, NAME, 1210, Node1700, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 1210, Node3100, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_G_LAST_USED_NAME) == 8) then begin
        giq_option(4, NAME, 1211, Node1750, NEUTRAL_REACTION);
    end
    if (dude_gender == 0) then begin
        giq_option(4, NAME, dude_name + mstr(1212), Node1150, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, dude_name + mstr(1213), Node2300, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1214, Node999, NEUTRAL_REACTION);
end

procedure Node1250
begin
    Reply(1250);
    giq_option(4, NAME, 1251, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 1252, Node800, NEUTRAL_REACTION);
    giq_option(6, NAME, 1253, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 1254, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 1255, Node999, NEUTRAL_REACTION);
end

procedure Node1300
begin
    Reply(1300);
    set_global_var(GVAR_G_LAST_USED_NAME, 1);
    giq_option(4, NAME, 1301, Node_access, NEUTRAL_REACTION);
end

procedure Node1350
begin
    Reply(1350);
    set_global_var(GVAR_G_LAST_USED_NAME, 2);
    giq_option(4, NAME, 1351, Node_access, NEUTRAL_REACTION);
end

procedure Node1400
begin
    Reply(1400);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 1401, Node1150, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 1401, Node2300, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1402, Node998, NEUTRAL_REACTION);
end

procedure Node1450
begin
    Reply(1450);
    set_global_var(GVAR_G_LAST_USED_NAME, 3);
    set_map_var(0, 2);
    giq_option(4, NAME, 1451, Node_access, NEUTRAL_REACTION);
end

procedure Node1500
begin
    Reply(1500);
    set_global_var(GVAR_G_LAST_USED_NAME, 3);
    giq_option(4, NAME, 1501, Node_access, NEUTRAL_REACTION);
end

procedure Node1550
begin
    Reply(1550);
    set_global_var(GVAR_G_LAST_USED_NAME, 4);
    giq_option(4, NAME, 1551, Node_access, NEUTRAL_REACTION);
end

procedure Node1600
begin
    Reply(1600);
    set_global_var(GVAR_G_LAST_USED_NAME, 5);
    giq_option(4, NAME, 1601, Node_access, NEUTRAL_REACTION);
end

procedure Node1650
begin
    Reply(1650);
    set_global_var(GVAR_G_LAST_USED_NAME, 6);
    giq_option(4, NAME, 1651, Node_access, NEUTRAL_REACTION);
end

procedure Node1700
begin
    Reply(1700);
    set_global_var(GVAR_G_LAST_USED_NAME, 7);
    giq_option(4, NAME, 1701, Node_access, NEUTRAL_REACTION);
end

procedure Node1750
begin
    Reply(1750);
    set_global_var(GVAR_G_LAST_USED_NAME, 8);
    giq_option(4, NAME, 1751, Node_access, NEUTRAL_REACTION);
end

procedure Node1800
begin
    Reply(1800);
    set_local_var(5, local_var(5) bwor 2);
    if (dude_gender == 0) then begin
        giq_option(-3, NAME, 1801, Node1850, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(-3, NAME, 1801, Node2750, NEUTRAL_REACTION);
    end
end

procedure Node1850
begin
    Reply(1850);
    giq_option(-3, NAME, 1851, Node1900, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1852, Node2050, NEUTRAL_REACTION);
end

procedure Node1900
begin
    Reply(1900);
    giq_option(-3, NAME, 1901, Node1950, NEUTRAL_REACTION);
end

procedure Node1950
begin
    Reply(1950);
    giq_option(-3, NAME, 1951, Node2000, NEUTRAL_REACTION);
end

procedure Node2000
begin
    Reply(2000);
    set_map_var(0, 2);
    giq_option(-3, NAME, 2001, Node_access, NEUTRAL_REACTION);
end

procedure Node2050
begin
    Reply(2050);
    giq_option(-3, NAME, 2051, Node998, NEUTRAL_REACTION);
end

procedure Node2100
begin
    Reply(2100);
    giq_option(-3, NAME, 2101, Node2150, NEUTRAL_REACTION);
end

procedure Node2150
begin
    Reply(2150);
    set_map_var(0, 2);
    giq_option(-3, NAME, 2151, Node_access, NEUTRAL_REACTION);
end

procedure Node2200
begin
    Reply(2200);
    set_local_var(4, 1);
    set_global_var(GVAR_G_JAMES_KNOWN, 1);
    giq_option(4, NAME, 2201, Node2250, NEUTRAL_REACTION);
    giq_option(4, NAME, mstr(2202) + dude_name + mstr(2203), Node2300, NEUTRAL_REACTION);
end

procedure Node2250
begin
    Reply(2250);
    giq_option(4, NAME, 2251, Node2350, NEUTRAL_REACTION);
end

procedure Node2300
begin
    Reply(2300);
    giq_option(4, NAME, 2301, Node998, NEUTRAL_REACTION);
end

procedure Node2350
begin
    Reply(2350);
    giq_option(4, NAME, 2351, Node2400, NEUTRAL_REACTION);
    giq_option(4, NAME, 2352, Node2500, NEUTRAL_REACTION);
    giq_option(6, NAME, 2353, Node2600, NEUTRAL_REACTION);
    giq_option(4, NAME, 2354, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 2355, Node999, NEUTRAL_REACTION);
end

procedure Node2400
begin
    Reply(2400);
    giq_option(6, NAME, 2401, Node2450, NEUTRAL_REACTION);
    giq_option(6, NAME, 2402, Node2550, NEUTRAL_REACTION);
    giq_option(4, NAME, 2403, Node2500, NEUTRAL_REACTION);
    giq_option(6, NAME, 2404, Node2600, NEUTRAL_REACTION);
    giq_option(4, NAME, 2405, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 2406, Node999, NEUTRAL_REACTION);
end

procedure Node2450
begin
    Reply(2450);
    giq_option(6, NAME, 2451, Node2550, NEUTRAL_REACTION);
    giq_option(4, NAME, 2452, Node2500, NEUTRAL_REACTION);
    giq_option(6, NAME, 2453, Node2600, NEUTRAL_REACTION);
    giq_option(4, NAME, 2454, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 2455, Node999, NEUTRAL_REACTION);
end

procedure Node2500
begin
    Reply(2500);
    giq_option(4, NAME, 2501, Node2400, NEUTRAL_REACTION);
    giq_option(6, NAME, 2502, Node2600, NEUTRAL_REACTION);
    giq_option(4, NAME, 2503, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 2504, Node999, NEUTRAL_REACTION);
end

procedure Node2550
begin
    Reply(2550);
    giq_option(6, NAME, 2551, Node2450, NEUTRAL_REACTION);
    giq_option(4, NAME, 2552, Node2400, NEUTRAL_REACTION);
    giq_option(6, NAME, 2553, Node2600, NEUTRAL_REACTION);
    giq_option(4, NAME, 2554, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 2555, Node999, NEUTRAL_REACTION);
end

procedure Node2600
begin
    Reply(2600);
    if ((local_var(5) bwand 4) == 0) then begin
        giq_option(6, NAME, 2601, Node2650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2602, Node2400, NEUTRAL_REACTION);
    giq_option(4, NAME, 2603, Node2500, NEUTRAL_REACTION);
    giq_option(4, NAME, 2604, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 2605, Node999, NEUTRAL_REACTION);
end

procedure Node2650
begin
    Reply(2650);
    set_local_var(5, local_var(5) bwor 4);
    giq_option(4, NAME, 2651, Node2400, NEUTRAL_REACTION);
    giq_option(4, NAME, 2652, Node2500, NEUTRAL_REACTION);
    giq_option(4, NAME, 2653, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 2654, Node999, NEUTRAL_REACTION);
end

procedure Node2700
begin
    Reply(2700);
    giq_option(6, NAME, 2701, Node2400, NEUTRAL_REACTION);
    giq_option(4, NAME, 2702, Node2500, NEUTRAL_REACTION);
    giq_option(6, NAME, 2703, Node2600, NEUTRAL_REACTION);
    giq_option(4, NAME, 2704, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 2705, Node999, NEUTRAL_REACTION);
end

procedure Node2750
begin
    Reply(2750);
    giq_option(-3, NAME, 2751, Node1900, NEUTRAL_REACTION);
    giq_option(-3, NAME, 2752, Node2800, NEUTRAL_REACTION);
end

procedure Node2800
begin
    Reply(2800);
    giq_option(-3, NAME, 2801, Node998, NEUTRAL_REACTION);
end

procedure Node2850
begin
    Reply(2850);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 2851, Node1150, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 2851, Node2300, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2852, Node998, NEUTRAL_REACTION);
end

procedure Node2900
begin
    Reply(2900);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 2901, Node1150, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 2901, Node2300, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2902, Node998, NEUTRAL_REACTION);
end

procedure Node2950
begin
    Reply(2950);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 2951, Node1150, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 2951, Node2300, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2952, Node998, NEUTRAL_REACTION);
end

procedure Node3000
begin
    Reply(3000);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 3001, Node1150, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 3001, Node2300, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3002, Node998, NEUTRAL_REACTION);
end

procedure Node3050
begin
    Reply(3050);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 3051, Node1150, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 3051, Node2300, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3052, Node998, NEUTRAL_REACTION);
end

procedure Node3100
begin
    Reply(3100);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 3101, Node1150, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 3101, Node2300, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3102, Node998, NEUTRAL_REACTION);
end

procedure Node3150
begin
    Reply(3150);
    set_global_var(GVAR_G_LAST_USED_NAME, 1);
    giq_option(4, NAME, 3151, Node_access, NEUTRAL_REACTION);
end

procedure Node3200
begin
    Reply(3200);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 3201, Node1150, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 3201, Node2300, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3202, Node998, NEUTRAL_REACTION);
end

procedure Node3250
begin
    Reply(3250);
    set_global_var(GVAR_G_LAST_USED_NAME, 2);
    giq_option(4, NAME, 3251, Node_access, NEUTRAL_REACTION);
end
