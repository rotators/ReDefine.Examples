variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node998_float405;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Node1550;
procedure Node1600;
procedure Node1650;
procedure Node1700;
procedure Node1750;
procedure Node1800;
procedure Node1900;
procedure Node1950;
procedure Node2000;
procedure Node2050;
procedure Node2100;
procedure Node2150;
procedure Node2200;
procedure Node2250;
procedure Node2300;
procedure Node2350;
procedure Node2400;
procedure Node2450;
procedure Node2500;
procedure Node2550;
procedure Node2600;
procedure Node2650;
procedure Node2700;
procedure Node2750;
procedure GoTo_Watching;
procedure Wait_for_Me;

variable Done_before;
variable Projed_smycku;
variable float_done;
variable dialog_wait;
variable float_wait;
variable probability;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(4) == 1) or (global_var(GVAR_AQ_ENEMY_HUNTERS) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
    if (((game_time - local_var(7)) > (60 * 10 * 60)) and (obj_is_visible_flag(self_obj) == 0)) then begin
        set_obj_visibility(self_obj, 0);
    end
    if (tile_in_tile_rect(27918, 27909, 29318, 29309, dude_tile) or (tile_distance_objs(self_obj, dude_obj) <= 5) and ((local_var(5) != 1) or ((party_member_obj(16777812) != 0) and ((local_var(6) bwand 1) == 0)))) then begin
        if (Done_before == 0) then begin
            add_timer_event(self_obj, 15, 666);
            Done_before := 1;
        end
    end
    if ((tile_distance(tile_num(self_obj), dude_tile) < 3) and (local_var(5) == 1) and (global_var(GVAR_AQ_ENEMY_HUNTERS) == 0) and (global_var(GVAR_AQ_MUTANT_HUNTER) == 0) and (global_var(GVAR_AQ_QUEST_MTHUNT_DUTCH_QUEST) == 0)) then begin
        if (((game_time - float_wait) > (10 * 9)) and (float_wait != 0)) then begin
            add_timer_event(self_obj, game_ticks(0), 1);
        end
        if (float_wait == 0) then begin
            float_wait := game_time;
        end
    end
    if ((tile_distance(tile_num(self_obj), dude_tile) >= 3) and (float_wait != 0)) then begin
        float_wait := 0;
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
        set_global_var(GVAR_AQ_ENEMY_HUNTERS, 1);
    end
end

procedure talk_p_proc
begin
    anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    start_gdialog(1631, self_obj, 4, -1, -1);
    gsay_start;
    if ((party_member_obj(16777812) != 0) and ((local_var(6) bwand 1) == 0) and (Projed_smycku == 0)) then begin
        call Node2100();
        set_local_var(5, 1);
        if ((global_var(GVAR_AQ_ENEMY_HUNTERS) == 0) and (global_var(GVAR_AQ_MUTANT_HUNTER) == 0)) then begin
            add_timer_event(self_obj, game_ticks(10), 1);
        end
        Projed_smycku := 1;
    end
    if ((global_var(GVAR_AQ_MUTANT_HUNTER) == 1) and (Projed_smycku == 0)) then begin
        if (dude_gender == 0) then begin
            call Node2250();
        end
        if (dude_gender == 1) then begin
            call Node2600();
        end
        Projed_smycku := 1;
    end
    if (((local_var(6) bwand 2) != 0) and (global_var(GVAR_AQ_MUTANT_HUNTERS_CANDIDATE) == 3) and ((local_var(6) bwand 4) == 0) and (Projed_smycku == 0)) then begin
        if ((global_var(GVAR_AQE_MESAGE_FROM_ELISA) == 0) and (global_var(GVAR_AQE_MESAGE_FROM_ARAN) == 0)) then begin
            call Node1800();
        end
        else begin
            call Node2750();
        end
        Projed_smycku := 1;
    end
    if ((local_var(5) != 1) and (Projed_smycku == 0)) then begin
        call Node500();
        set_local_var(5, 1);
        if ((global_var(GVAR_AQ_ENEMY_HUNTERS) == 0) and (global_var(GVAR_AQ_MUTANT_HUNTER) == 0)) then begin
            add_timer_event(self_obj, game_ticks(10), 1);
        end
        Projed_smycku := 1;
    end
    if ((local_var(5) == 1) and (Projed_smycku == 0)) then begin
        call Node1700();
        Projed_smycku := 1;
    end
    Projed_smycku := 0;
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_ALBUQUERQUE, global_var(GVAR_TOWN_REP_ALBUQUERQUE) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 0);
        debug_msg("Player gains " + 0 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_AQ_ALBUQ_DEATHS, global_var(GVAR_AQ_ALBUQ_DEATHS) bwor 8388608);
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_mstr(150);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_mstr(250);
    end
    else begin
        display_mstr(200);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_AQ_ENEMY_HUNTERS, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 258);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD_NO_TALKING);
    if (global_var(GVAR_AQ_QUEST_HOSPITAL_TO_KILL_PRIMITIVES) == 1) then begin
        set_local_var(4, 0);
    end
    if (map_first_run and not((global_var(GVAR_KARAVAN_ROUTES_COMMAND_BITS) bwand 1) != 0)) then begin
        game_ui_disable;
    end
    if ((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 8388608) != 0) then begin
        destroy_object(self_obj);
    end
    if ((global_var(GVAR_AQ_ENEMY_HUNTERS) == 0) and (global_var(GVAR_AQ_MUTANT_HUNTER) == 0) and (local_var(5) == 1) and (global_var(GVAR_AQ_QUEST_MTHUNT_DUTCH_QUEST) == 0)) then begin
        add_timer_event(self_obj, game_ticks(10), 1);
    end
    if (((game_time - local_var(7)) > (60 * 10 * 60)) and (obj_is_visible_flag(self_obj) == 0)) then begin
        set_obj_visibility(self_obj, 0);
    end
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
        probability := random(0, 12);
        if ((probability >= 12) and not(critter_is_fleeing(self_obj))) then begin
            if ((local_var(4) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
                float_msg(self_obj, mstr(random(400, 403)), FLOAT_MSG_RED);
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if ((tile_distance(tile_num(self_obj), dude_tile) < 3) and obj_can_see_obj(self_obj, dude_obj) and (local_var(5) == 1) and (global_var(GVAR_AQ_MUTANT_HUNTER) == 0) and (global_var(GVAR_AQ_QUEST_MTHUNT_DUTCH_QUEST) == 0) and (obj_is_visible_flag(self_obj) == 1) and not(combat_is_initialized)) then begin
            float_msg(self_obj, mstr(random(300, 304)), FLOAT_MSG_YELLOW);
        end
        float_wait := 0;
    end
    if (fixed_param == 10) then begin
        game_ui_disable;
        gfade_out(600);
        add_timer_event(self_obj, game_ticks(1), 11);
    end
    if (fixed_param == 11) then begin
        if ((local_var(6) bwand 2) != 0) then begin
            set_local_var(6, local_var(6) bwand (-1 - 2));
        end
        set_global_var(GVAR_AQ_QUEST_MTHUNT_DUTCH_QUEST, 1);
        while ((game_time_hour > 600) or (game_time_hour < 330)) do begin
            game_time_advance(1 * (60 * (60 * 10)));
        end
        set_local_var(7, game_time);
        set_obj_visibility(self_obj, 1);
        anim(self_obj, 1000, 2);
        game_ui_enable;
        load_map(22, 0);
    end
    if (fixed_param == 666) then begin
        game_ui_enable;
        dialogue_system_enter;
        Done_before := 0;
    end
end

procedure Node998
begin
    set_local_var(4, 1);
    set_global_var(GVAR_AQ_ENEMY_HUNTERS, 1);
end

procedure Node998_float405
begin
    float_msg(self_obj, mstr(405), FLOAT_MSG_RED);
    set_local_var(4, 1);
    set_global_var(GVAR_AQ_ENEMY_HUNTERS, 1);
end

procedure Node999
begin
    anim(self_obj, 1000, 2);
end

procedure Node500
begin
    Reply(500);
    if (obj_is_carrying_obj_pid(dude_obj, 309)) then begin
        if (dude_gender == 0) then begin
            giq_option(4, NAME, 501, Node750, NEUTRAL_REACTION);
        end
        if (dude_gender == 1) then begin
            giq_option(4, NAME, 501, Node800, NEUTRAL_REACTION);
        end
    end
    else begin
        giq_option(4, NAME, 502, Node1000, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 503, Node550, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 504, Node650, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 504, Node700, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 505, Node1900, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    if (obj_is_carrying_obj_pid(dude_obj, 309)) then begin
        if (dude_gender == 0) then begin
            giq_option(4, NAME, 551, Node750, NEUTRAL_REACTION);
        end
        if (dude_gender == 1) then begin
            giq_option(4, NAME, 551, Node800, NEUTRAL_REACTION);
        end
    end
    else begin
        giq_option(4, NAME, 552, Node1000, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 553, Node600, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 554, Node650, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 554, Node700, NEUTRAL_REACTION);
    end
end

procedure Node600
begin
    Reply(600);
    giq_option(4, NAME, 601, Node998_float405, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    if (obj_is_carrying_obj_pid(dude_obj, 309)) then begin
        if (dude_gender == 0) then begin
            giq_option(4, NAME, 651, Node750, NEUTRAL_REACTION);
        end
        if (dude_gender == 1) then begin
            giq_option(4, NAME, 651, Node800, NEUTRAL_REACTION);
        end
    end
    else begin
        giq_option(4, NAME, 652, Node1000, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 653, Node600, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    if (obj_is_carrying_obj_pid(dude_obj, 309)) then begin
        if (dude_gender == 0) then begin
            giq_option(4, NAME, 701, Node750, NEUTRAL_REACTION);
        end
        if (dude_gender == 1) then begin
            giq_option(4, NAME, 701, Node800, NEUTRAL_REACTION);
        end
    end
    else begin
        giq_option(4, NAME, 702, Node1000, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 703, Node600, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    giq_option(4, NAME, 751, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 752, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 753, Node1050, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800);
    giq_option(4, NAME, 801, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 802, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 803, Node1050, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850);
    giq_option(4, NAME, 851, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 852, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 853, Node1050, NEUTRAL_REACTION);
end

procedure Node900
begin
    Reply(900);
    giq_option(4, NAME, 901, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 902, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 903, Node1050, NEUTRAL_REACTION);
end

procedure Node950
begin
    Reply(950);
    giq_option(4, NAME, 951, Node1050, NEUTRAL_REACTION);
end

procedure Node1000
begin
    Reply(1000);
    giq_option(4, NAME, 1001, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 1002, Node1050, NEUTRAL_REACTION);
end

procedure Node1050
begin
    Reply(1050);
    giq_option(4, NAME, 1051, Node1100, NEUTRAL_REACTION);
    giq_option(4, NAME, 1052, Node999, NEUTRAL_REACTION);
end

procedure Node1100
begin
    Reply(1100);
    giq_option(4, NAME, 1101, Node1150, NEUTRAL_REACTION);
    giq_option(4, NAME, 1102, Node1600, NEUTRAL_REACTION);
    giq_option(4, NAME, 1103, Node1200, NEUTRAL_REACTION);
    giq_option(4, NAME, 1104, Node1300, NEUTRAL_REACTION);
    giq_option(4, NAME, 1105, Node1350, NEUTRAL_REACTION);
    giq_option(4, NAME, 1106, Node1450, NEUTRAL_REACTION);
    giq_option(4, NAME, 1107, Node1550, NEUTRAL_REACTION);
    giq_option(4, NAME, 1108, Node999, NEUTRAL_REACTION);
end

procedure Node1150
begin
    Reply(1150);
    giq_option(4, NAME, 1151, Node1500, NEUTRAL_REACTION);
    giq_option(4, NAME, 1152, Node1100, NEUTRAL_REACTION);
end

procedure Node1200
begin
    Reply(1200);
    giq_option(4, NAME, 1201, Node1250, NEUTRAL_REACTION);
    giq_option(4, NAME, 1202, Node1100, NEUTRAL_REACTION);
end

procedure Node1250
begin
    Reply(1250);
    giq_option(4, NAME, 1251, Node1300, NEUTRAL_REACTION);
    giq_option(4, NAME, 1252, Node1100, NEUTRAL_REACTION);
end

procedure Node1300
begin
    Reply(1300);
    giq_option(4, NAME, 1301, Node1550, NEUTRAL_REACTION);
    giq_option(4, NAME, 1302, Node1350, NEUTRAL_REACTION);
    giq_option(4, NAME, 1303, Node1100, NEUTRAL_REACTION);
end

procedure Node1350
begin
    Reply(1350);
    giq_option(4, NAME, 1351, Node1400, NEUTRAL_REACTION);
    giq_option(4, NAME, 1352, Node1100, NEUTRAL_REACTION);
end

procedure Node1400
begin
    Reply(1400);
    giq_option(4, NAME, 1401, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1402, Node1100, NEUTRAL_REACTION);
end

procedure Node1450
begin
    Reply(1450);
    giq_option(4, NAME, 1451, Node1100, NEUTRAL_REACTION);
end

procedure Node1500
begin
    Reply(1500);
    giq_option(4, NAME, 1501, Node1350, NEUTRAL_REACTION);
    giq_option(4, NAME, 1502, Node1100, NEUTRAL_REACTION);
end

procedure Node1550
begin
    Reply(1550);
    giq_option(4, NAME, 1551, Node1100, NEUTRAL_REACTION);
end

procedure Node1600
begin
    Reply(1600);
    giq_option(4, NAME, 1601, Node1550, NEUTRAL_REACTION);
    giq_option(4, NAME, 1602, Node1100, NEUTRAL_REACTION);
end

procedure Node1650
begin
    Reply(1650);
    giq_option(4, NAME, 1651, Node1100, NEUTRAL_REACTION);
end

procedure Node1700
begin
    Reply(1700);
    giq_option(4, NAME, 1701, Node1100, NEUTRAL_REACTION);
    if ((local_var(6) bwand 4) == 0) then begin
        if ((global_var(GVAR_AQE_MESAGE_FROM_ELISA) == 0) and (global_var(GVAR_AQE_MESAGE_FROM_ARAN) == 0)) then begin
            if ((dude_gender == 0) and (global_var(GVAR_AQ_MUTANT_HUNTERS_CANDIDATE) == 3) and (global_var(GVAR_AQ_QUEST_MTHUNT_DUTCH_QUEST) == 0)) then begin
                giq_option(4, NAME, 1702, Node1750, NEUTRAL_REACTION);
            end
            if ((dude_gender == 1) and (global_var(GVAR_AQ_MUTANT_HUNTERS_CANDIDATE) == 3) and (global_var(GVAR_AQ_QUEST_MTHUNT_DUTCH_QUEST) == 0)) then begin
                giq_option(4, NAME, 1703, Node1750, NEUTRAL_REACTION);
            end
        end
        else begin
            if ((dude_gender == 0) and (global_var(GVAR_AQ_MUTANT_HUNTERS_CANDIDATE) == 3) and (global_var(GVAR_AQ_QUEST_MTHUNT_DUTCH_QUEST) == 0)) then begin
                giq_option(4, NAME, 1702, Node2750, NEUTRAL_REACTION);
            end
            if ((dude_gender == 1) and (global_var(GVAR_AQ_MUTANT_HUNTERS_CANDIDATE) == 3) and (global_var(GVAR_AQ_QUEST_MTHUNT_DUTCH_QUEST) == 0)) then begin
                giq_option(4, NAME, 1703, Node2750, NEUTRAL_REACTION);
            end
        end
    end
    giq_option(4, NAME, 1704, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1705, Node999, NEUTRAL_REACTION);
end

procedure Node1750
begin
    Reply(1750);
    giq_option(4, NAME, 1751, GoTo_Watching, NEUTRAL_REACTION);
    giq_option(4, NAME, 1752, Wait_for_Me, NEUTRAL_REACTION);
end

procedure Node1800
begin
    Reply(1800);
    giq_option(4, NAME, 1801, GoTo_Watching, NEUTRAL_REACTION);
    giq_option(4, NAME, 1802, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1803, Node999, NEUTRAL_REACTION);
end

procedure Node1900
begin
    Reply(1900);
    if (obj_is_carrying_obj_pid(dude_obj, 309)) then begin
        if (dude_gender == 0) then begin
            giq_option(-3, NAME, 1901, Node2000, NEUTRAL_REACTION);
        end
        if (dude_gender == 1) then begin
            giq_option(-3, NAME, 1901, Node2050, NEUTRAL_REACTION);
        end
    end
    else begin
        giq_option(-3, NAME, 1902, Node1950, NEUTRAL_REACTION);
    end
end

procedure Node1950
begin
    Reply(1950);
    giq_option(-3, NAME, 1951, Node999, NEUTRAL_REACTION);
end

procedure Node2000
begin
    Reply(2000);
    giq_option(-3, NAME, 2001, Node999, NEUTRAL_REACTION);
end

procedure Node2050
begin
    Reply(2050);
    giq_option(-3, NAME, 2051, Node999, NEUTRAL_REACTION);
end

procedure Node2100
begin
    Reply(2100);
    set_local_var(6, local_var(6) bwor 1);
    giq_option(4, NAME, 2101, Node2200, NEUTRAL_REACTION);
    giq_option(-3, NAME, 2101, Node2150, NEUTRAL_REACTION);
end

procedure Node2150
begin
    Reply(2150);
    giq_option(-3, NAME, 2151, Node2200, NEUTRAL_REACTION);
end

procedure Node2200
begin
    if (dude_gender == 0) then begin
        Reply(2200);
    end
    if (dude_gender == 1) then begin
        Reply(2201);
    end
    giq_option(-3, NAME, 2202, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 2203, Node998, NEUTRAL_REACTION);
    giq_option(4, NAME, 2104, Node999, NEUTRAL_REACTION);
end

procedure Node2250
begin
    Reply(2250);
    giq_option(4, NAME, 2251, Node2300, NEUTRAL_REACTION);
    giq_option(4, NAME, 2252, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 2253, Node999, NEUTRAL_REACTION);
end

procedure Node2300
begin
    Reply(2300);
    giq_option(4, NAME, 2301, Node2350, NEUTRAL_REACTION);
    giq_option(4, NAME, 2302, Node2400, NEUTRAL_REACTION);
    if ((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) != 0) then begin
        giq_option(4, NAME, 2303, Node2700, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 2303, Node2650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2304, Node2450, NEUTRAL_REACTION);
    giq_option(4, NAME, 2305, Node2500, NEUTRAL_REACTION);
    giq_option(6, NAME, 2306, Node2550, NEUTRAL_REACTION);
    giq_option(4, NAME, 2307, Node999, NEUTRAL_REACTION);
end

procedure Node2350
begin
    Reply(2350);
    giq_option(4, NAME, 2351, Node2400, NEUTRAL_REACTION);
    if ((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) != 0) then begin
        giq_option(4, NAME, 2352, Node2700, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 2352, Node2650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2353, Node2450, NEUTRAL_REACTION);
    giq_option(4, NAME, 2354, Node2500, NEUTRAL_REACTION);
    giq_option(6, NAME, 2355, Node2550, NEUTRAL_REACTION);
    giq_option(4, NAME, 2356, Node999, NEUTRAL_REACTION);
end

procedure Node2400
begin
    Reply(2400);
    giq_option(4, NAME, 2401, Node2350, NEUTRAL_REACTION);
    if ((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) != 0) then begin
        giq_option(4, NAME, 2402, Node2700, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 2402, Node2650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2403, Node2450, NEUTRAL_REACTION);
    giq_option(4, NAME, 2404, Node2500, NEUTRAL_REACTION);
    giq_option(6, NAME, 2405, Node2550, NEUTRAL_REACTION);
    giq_option(4, NAME, 2406, Node999, NEUTRAL_REACTION);
end

procedure Node2450
begin
    Reply(2450);
    giq_option(4, NAME, 2451, Node2350, NEUTRAL_REACTION);
    giq_option(4, NAME, 2452, Node2400, NEUTRAL_REACTION);
    if ((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) != 0) then begin
        giq_option(4, NAME, 2453, Node2700, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 2453, Node2650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2454, Node2500, NEUTRAL_REACTION);
    giq_option(6, NAME, 2455, Node2550, NEUTRAL_REACTION);
    giq_option(4, NAME, 2456, Node999, NEUTRAL_REACTION);
end

procedure Node2500
begin
    Reply(2500);
    giq_option(4, NAME, 2501, Node2350, NEUTRAL_REACTION);
    giq_option(4, NAME, 2502, Node2400, NEUTRAL_REACTION);
    if ((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) != 0) then begin
        giq_option(4, NAME, 2503, Node2700, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 2503, Node2650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2504, Node2450, NEUTRAL_REACTION);
    giq_option(6, NAME, 2505, Node2550, NEUTRAL_REACTION);
    giq_option(4, NAME, 2506, Node999, NEUTRAL_REACTION);
end

procedure Node2550
begin
    Reply(2550);
    giq_option(4, NAME, 2551, Node2350, NEUTRAL_REACTION);
    giq_option(4, NAME, 2552, Node2400, NEUTRAL_REACTION);
    if ((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) != 0) then begin
        giq_option(4, NAME, 2553, Node2700, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 2553, Node2650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2554, Node2450, NEUTRAL_REACTION);
    giq_option(4, NAME, 2555, Node2500, NEUTRAL_REACTION);
    giq_option(4, NAME, 2556, Node999, NEUTRAL_REACTION);
end

procedure Node2600
begin
    Reply(2600);
    giq_option(4, NAME, 2601, Node2300, NEUTRAL_REACTION);
    giq_option(4, NAME, 2602, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 2603, Node999, NEUTRAL_REACTION);
end

procedure Node2650
begin
    Reply(2650);
    giq_option(4, NAME, 2651, Node2350, NEUTRAL_REACTION);
    giq_option(4, NAME, 2652, Node2400, NEUTRAL_REACTION);
    giq_option(4, NAME, 2653, Node2450, NEUTRAL_REACTION);
    giq_option(4, NAME, 2654, Node2500, NEUTRAL_REACTION);
    giq_option(6, NAME, 2655, Node2550, NEUTRAL_REACTION);
    giq_option(4, NAME, 2656, Node999, NEUTRAL_REACTION);
end

procedure Node2700
begin
    Reply(2700);
    giq_option(4, NAME, 2701, Node2350, NEUTRAL_REACTION);
    giq_option(4, NAME, 2702, Node2400, NEUTRAL_REACTION);
    giq_option(4, NAME, 2703, Node2450, NEUTRAL_REACTION);
    giq_option(4, NAME, 2704, Node2500, NEUTRAL_REACTION);
    giq_option(6, NAME, 2705, Node2550, NEUTRAL_REACTION);
    giq_option(4, NAME, 2706, Node999, NEUTRAL_REACTION);
end

procedure Node2750
begin
    Reply(2750);
    set_local_var(6, local_var(6) bwor 4);
    if (global_var(GVAR_AQ_QUEST_MTHUNT_DUTCH_QUEST) != 2) then begin
        set_global_var(GVAR_AQ_QUEST_MTHUNT_DUTCH_QUEST, 0);
    end
    giq_option(4, NAME, 2751, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 2752, Node999, NEUTRAL_REACTION);
end

procedure GoTo_Watching
begin
    add_timer_event(self_obj, 3, 10);
end

procedure Wait_for_Me
begin
    set_local_var(6, local_var(6) bwor 2);
    call Node999();
end
