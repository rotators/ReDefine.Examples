variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure combat_p_proc;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Node1510;
procedure Node1550;
procedure Node1600;
procedure JOIN_TO_PARTY;
procedure JOIN_TO_PARTY_TOO_MANY_FOLLOWERS;
procedure KILL_DOG;

variable after_combat_dialog;
variable vorech_partym;
variable destroy_after_join;
variable feeding;
variable meatPid;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(4) == 1) and obj_can_see_obj(self_obj, dude_obj) and not(party_member_obj(16777729) != 0)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
    if ((after_combat_dialog == 1) and not(combat_is_initialized)) then begin
        after_combat_dialog := 0;
        dialogue_system_enter;
    end
end

procedure pickup_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(combat_is_initialized)) then begin
        anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
        start_gdialog(28, self_obj, 4, -1, -1);
        gsay_start;
        if (feeding == 1) then begin
            if (((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) < 4) and (local_var(6) == 0) and (local_var(7) == 0)) then begin
                call Node1510();
            end
            else begin
                if (local_var(6) == 0) then begin
                    call Node1000();
                end
                else begin
                    if (local_var(6) == 1) then begin
                        call Node1100();
                    end
                    else begin
                        if (local_var(6) == 2) then begin
                            call Node1300();
                        end
                    end
                end
            end
        end
        else begin
            if (local_var(5) == 1) then begin
                call Node1600();
            end
            else begin
                call Node500();
            end
        end
        gsay_end;
        end_dialogue;
    end
    feeding := 0;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 0);
        debug_msg("Player gains " + 0 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_VORECH, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_VORECH, 200));
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
    if ((obj_pid(obj_being_used_with) == 284) or (obj_pid(obj_being_used_with) == 81) or (obj_pid(obj_being_used_with) == 103)) then begin
        if (not(combat_is_initialized)) then begin
            script_overrides;
            meatPid := obj_pid(obj_being_used_with);
            display_msg(message_str(SCRIPT_VORECH, 260 + (dude_gender == 1)));
            add_timer_event(self_obj, 5, 3);
        end
    end
end

procedure damage_p_proc
begin
    if ((source_obj == dude_obj) and not(party_member_obj(16777729) != 0)) then begin
        set_local_var(4, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 289);
    if (not((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 1) != 0)) then begin
        rm_fixed_timer_event(self_obj, 1);
    end
    add_timer_event(self_obj, game_ticks(random(10, 20)), 1);
    if (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 1) != 0) and not(is_loading_game)) then begin
        destroy_object(self_obj);
    end
end

procedure timed_event_p_proc
begin
    if (not((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 1) != 0) and (fixed_param == 1)) then begin
        if (not(combat_is_initialized)) then begin
            float_msg(self_obj, message_str(SCRIPT_VORECH, random(300, 303)), FLOAT_MSG_YELLOW);
        end
        if ((obj_on_screen(self_obj) == 1) and not(combat_is_initialized)) then begin
            play_sfx("DOGBARK");
            set_global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS, global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwor 131072);
        end
        rm_fixed_timer_event(self_obj, 1);
        add_timer_event(self_obj, game_ticks(random(10, 20)), 1);
    end
    if (fixed_param == 2) then begin
        if (destroy_after_join == 1) then begin
            destroy_object(self_obj);
        end
    end
    if (fixed_param == 3) then begin
        feeding := 1;
        dialogue_system_enter;
    end
    if (fixed_param == 4) then begin
        reg_anim_func(2, dude_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(dude_obj, 16, -1);
        reg_anim_play_sfx(dude_obj, sfx_build_char_name(dude_obj, 16, 4), 0);
        reg_anim_animate(self_obj, 35, -1);
        reg_anim_func(3, 0);
        add_timer_event(self_obj, 10, 5);
    end
    if (fixed_param == 5) then begin
        game_ui_enable;
        critter_heal(self_obj, -get_critter_stat(self_obj, STAT_current_hp));
    end
end

procedure combat_p_proc
begin
    if (((get_critter_stat(self_obj, STAT_current_hp) * 100 / get_critter_stat(self_obj, STAT_max_hp)) < 20) and (local_var(5) == 1)) then begin
        set_local_var(4, 0);
        if (obj_can_see_obj(self_obj, dude_obj) or (tile_distance(tile_num(self_obj), dude_tile) < 10)) then begin
            after_combat_dialog := 1;
        end
        terminate_combat;
    end
end

procedure Node998
begin
    set_local_var(4, 1);
    if (not((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 1) != 0)) then begin
        set_local_var(5, 1);
    end
end

procedure Node999
begin
    if (not((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 1) != 0)) then begin
        anim(self_obj, 1000, 2);
    end
end

procedure Node500
begin
    gsay_reply(SCRIPT_VORECH, 500);
    if ((dude_luck > 5) and (dude_charisma > 4)) then begin
        giq_option(4, SCRIPT_VORECH, 501, Node550, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, SCRIPT_VORECH, 501, Node800, NEUTRAL_REACTION);
    end
    if ((local_var(6) == 0) and obj_carrying_pid_obj(dude_obj, 284)) then begin
        giq_option(4, SCRIPT_VORECH, 502, Node950, NEUTRAL_REACTION);
    end
    if ((local_var(6) == 0) and (obj_is_carrying_obj_pid(dude_obj, 284) == 0) and (obj_carrying_pid_obj(dude_obj, 81) or obj_carrying_pid_obj(dude_obj, 103))) then begin
        giq_option(4, SCRIPT_VORECH, 503, Node950, NEUTRAL_REACTION);
    end
    giq_option(4, SCRIPT_VORECH, 504, Node1450, NEUTRAL_REACTION);
    if ((local_var(6) > 0) and (obj_carrying_pid_obj(dude_obj, 284) or obj_carrying_pid_obj(dude_obj, 81) or obj_carrying_pid_obj(dude_obj, 103))) then begin
        if (local_var(6) == 1) then begin
            giq_option(4, SCRIPT_VORECH, 505, Node1100, NEUTRAL_REACTION);
        end
        if (local_var(6) == 2) then begin
            giq_option(4, SCRIPT_VORECH, 505, Node1300, NEUTRAL_REACTION);
        end
    end
    giq_option(4, SCRIPT_VORECH, 506, Node999, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_VORECH, 507, Node1500, NEUTRAL_REACTION);
    if ((local_var(6) > 0) or (local_var(7) == 1) and (obj_carrying_pid_obj(dude_obj, 284) or obj_carrying_pid_obj(dude_obj, 81) or obj_carrying_pid_obj(dude_obj, 103))) then begin
        if (local_var(6) == 0) then begin
            giq_option(-3, SCRIPT_VORECH, 509, Node1000, NEUTRAL_REACTION);
        end
        if (local_var(6) == 1) then begin
            giq_option(-3, SCRIPT_VORECH, 509, Node1100, NEUTRAL_REACTION);
        end
        if (local_var(6) == 2) then begin
            giq_option(-3, SCRIPT_VORECH, 509, Node1300, NEUTRAL_REACTION);
        end
    end
    giq_option(-3, SCRIPT_VORECH, 508, Node999, NEUTRAL_REACTION);
end

procedure Node550
begin
    gsay_reply(SCRIPT_VORECH, 550);
    if ((dude_luck > 6) and (dude_charisma > 5)) then begin
        giq_option(4, SCRIPT_VORECH, 551, Node600, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, SCRIPT_VORECH, 551, Node800, NEUTRAL_REACTION);
    end
    if (obj_carrying_pid_obj(dude_obj, 284) or obj_carrying_pid_obj(dude_obj, 81) or obj_carrying_pid_obj(dude_obj, 103)) then begin
        if (local_var(6) == 0) then begin
            giq_option(4, SCRIPT_VORECH, 552, Node950, NEUTRAL_REACTION);
        end
        if (local_var(6) == 1) then begin
            giq_option(4, SCRIPT_VORECH, 552, Node1100, NEUTRAL_REACTION);
        end
        if (local_var(6) == 2) then begin
            giq_option(4, SCRIPT_VORECH, 552, Node1300, NEUTRAL_REACTION);
        end
    end
    giq_option(4, SCRIPT_VORECH, 553, Node999, NEUTRAL_REACTION);
end

procedure Node600
begin
    gsay_reply(SCRIPT_VORECH, 600);
    if (dude_charisma > 6) then begin
        giq_option(4, SCRIPT_VORECH, 601, Node650, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, SCRIPT_VORECH, 601, Node800, NEUTRAL_REACTION);
    end
    if (obj_carrying_pid_obj(dude_obj, 284) or obj_carrying_pid_obj(dude_obj, 81) or obj_carrying_pid_obj(dude_obj, 103)) then begin
        if (local_var(6) == 0) then begin
            giq_option(4, SCRIPT_VORECH, 602, Node950, NEUTRAL_REACTION);
        end
        if (local_var(6) == 1) then begin
            giq_option(4, SCRIPT_VORECH, 602, Node1100, NEUTRAL_REACTION);
        end
        if (local_var(6) == 2) then begin
            giq_option(4, SCRIPT_VORECH, 602, Node1300, NEUTRAL_REACTION);
        end
    end
    giq_option(4, SCRIPT_VORECH, 603, Node999, NEUTRAL_REACTION);
end

procedure Node650
begin
    gsay_reply(SCRIPT_VORECH, 650);
    if (dude_charisma > 7) then begin
        giq_option(4, SCRIPT_VORECH, 651, Node700, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, SCRIPT_VORECH, 651, Node800, NEUTRAL_REACTION);
    end
    if (obj_carrying_pid_obj(dude_obj, 284) or obj_carrying_pid_obj(dude_obj, 81) or obj_carrying_pid_obj(dude_obj, 103)) then begin
        if (local_var(6) == 0) then begin
            giq_option(4, SCRIPT_VORECH, 652, Node950, NEUTRAL_REACTION);
        end
        if (local_var(6) == 1) then begin
            giq_option(4, SCRIPT_VORECH, 652, Node1100, NEUTRAL_REACTION);
        end
        if (local_var(6) == 2) then begin
            giq_option(4, SCRIPT_VORECH, 652, Node1300, NEUTRAL_REACTION);
        end
    end
    giq_option(4, SCRIPT_VORECH, 653, Node999, NEUTRAL_REACTION);
end

procedure Node700
begin
    gsay_reply(SCRIPT_VORECH, 700);
    if (dude_luck > 7) then begin
        giq_option(4, SCRIPT_VORECH, 701, Node750, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, SCRIPT_VORECH, 701, Node800, NEUTRAL_REACTION);
    end
    if (obj_carrying_pid_obj(dude_obj, 284) or obj_carrying_pid_obj(dude_obj, 81) or obj_carrying_pid_obj(dude_obj, 103)) then begin
        if (local_var(6) == 0) then begin
            giq_option(4, SCRIPT_VORECH, 702, Node950, NEUTRAL_REACTION);
        end
        if (local_var(6) == 1) then begin
            giq_option(4, SCRIPT_VORECH, 702, Node1100, NEUTRAL_REACTION);
        end
        if (local_var(6) == 2) then begin
            giq_option(4, SCRIPT_VORECH, 702, Node1300, NEUTRAL_REACTION);
        end
    end
    giq_option(4, SCRIPT_VORECH, 703, Node999, NEUTRAL_REACTION);
end

procedure Node750
begin
    gsay_reply(SCRIPT_VORECH, 750);
    if (((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk))) or ((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= 5)) then begin
        giq_option(4, SCRIPT_VORECH, 751, Node1550, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, SCRIPT_VORECH, 751, JOIN_TO_PARTY, NEUTRAL_REACTION);
    end
end

procedure Node800
begin
    gsay_reply(SCRIPT_VORECH, 800);
    if (get_critter_stat(dude_obj, STAT_ag) > 7) then begin
        giq_option(4, SCRIPT_VORECH, 801, Node850, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, SCRIPT_VORECH, 801, Node900, NEUTRAL_REACTION);
    end
    giq_option(4, SCRIPT_VORECH, 802, Node999, NEUTRAL_REACTION);
end

procedure Node850
begin
    gsay_reply(SCRIPT_VORECH, 850);
    giq_option(4, SCRIPT_VORECH, 851, Node999, NEUTRAL_REACTION);
end

procedure Node900
begin
    gsay_reply(SCRIPT_VORECH, 900);
    if (get_critter_stat(dude_obj, STAT_current_hp) > 5) then begin
        critter_damage(dude_obj, 5);
    end
    else begin
        if (get_critter_stat(dude_obj, STAT_current_hp) == 5) then begin
            critter_damage(dude_obj, 4);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 4) then begin
            critter_damage(dude_obj, 3);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 3) then begin
            critter_damage(dude_obj, 2);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 2) then begin
            critter_damage(dude_obj, 1);
        end
    end
    giq_option(4, SCRIPT_VORECH, 901, Node999, NEUTRAL_REACTION);
end

procedure Node950
begin
    gsay_reply(SCRIPT_VORECH, 950);
    giq_option(4, SCRIPT_VORECH, 951, Node1000, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_VORECH, 952, Node1050, NEUTRAL_REACTION);
end

procedure Node1000
begin
    gsay_reply(SCRIPT_VORECH, 1000);
    if (meatPid != 0) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, meatPid);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, meatPid);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, meatPid);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            if (restock_amt == 0) then begin
                toRemove_qty := 1;
                while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, meatPid)) do begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, meatPid);
                    rm_obj_from_inven(dude_obj, restock_obj);
                    destroy_object(restock_obj);
                    toRemove_qty := toRemove_qty - 1;
                end
            end
            else begin
                destroy_object(restock_obj);
            end
        end
        restock_obj := 0;
        restock_amt := 0;
    end
    else begin
        if (obj_carrying_pid_obj(dude_obj, 284)) then begin
            removed_qty := obj_is_carrying_obj_pid(dude_obj, 284);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 284);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, 284);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(dude_obj, restock_obj);
                            add_obj_to_inven(dude_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(dude_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := 1;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 284)) do begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 284);
                        rm_obj_from_inven(dude_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
        end
        else begin
            if (obj_carrying_pid_obj(dude_obj, 81)) then begin
                removed_qty := obj_is_carrying_obj_pid(dude_obj, 81);
                if (1 < removed_qty) then begin
                    removed_qty := 1;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, 81);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 81);
                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(dude_obj, restock_obj);
                                add_obj_to_inven(dude_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                inven_unwield(dude_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                    if (restock_amt == 0) then begin
                        toRemove_qty := 1;
                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 81)) do begin
                            restock_obj := obj_carrying_pid_obj(dude_obj, 81);
                            rm_obj_from_inven(dude_obj, restock_obj);
                            destroy_object(restock_obj);
                            toRemove_qty := toRemove_qty - 1;
                        end
                    end
                    else begin
                        destroy_object(restock_obj);
                    end
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                if (obj_carrying_pid_obj(dude_obj, 103)) then begin
                    removed_qty := obj_is_carrying_obj_pid(dude_obj, 103);
                    if (1 < removed_qty) then begin
                        removed_qty := 1;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 103);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(dude_obj, 103);
                            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(dude_obj, restock_obj);
                                    add_obj_to_inven(dude_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                    inven_unwield(dude_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := 1;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 103)) do begin
                                restock_obj := obj_carrying_pid_obj(dude_obj, 103);
                                rm_obj_from_inven(dude_obj, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
            end
        end
    end
    set_local_var(6, local_var(6) + 1);
    meatPid := 0;
    if ((obj_is_carrying_obj_pid(dude_obj, 103) >= 1) or (obj_is_carrying_obj_pid(dude_obj, 284) >= 1) or (obj_is_carrying_obj_pid(dude_obj, 81) >= 1)) then begin
        giq_option(4, SCRIPT_VORECH, 1001, Node1100, NEUTRAL_REACTION);
        giq_option(-3, SCRIPT_VORECH, 1003, Node1100, NEUTRAL_REACTION);
    end
    giq_option(4, SCRIPT_VORECH, 1002, Node1150, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_VORECH, 1004, Node999, NEUTRAL_REACTION);
end

procedure Node1050
begin
    gsay_reply(SCRIPT_VORECH, 1050);
    if (get_critter_stat(dude_obj, STAT_current_hp) > 10) then begin
        critter_damage(dude_obj, 10);
    end
    else begin
        if (get_critter_stat(dude_obj, STAT_current_hp) == 10) then begin
            critter_damage(dude_obj, 9);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 9) then begin
            critter_damage(dude_obj, 8);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 8) then begin
            critter_damage(dude_obj, 7);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 7) then begin
            critter_damage(dude_obj, 6);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 6) then begin
            critter_damage(dude_obj, 5);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 5) then begin
            critter_damage(dude_obj, 4);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 4) then begin
            critter_damage(dude_obj, 3);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 3) then begin
            critter_damage(dude_obj, 2);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 2) then begin
            critter_damage(dude_obj, 1);
        end
    end
    giq_option(4, SCRIPT_VORECH, 1051, Node999, NEUTRAL_REACTION);
end

procedure Node1100
begin
    gsay_reply(SCRIPT_VORECH, 1100);
    if (meatPid != 0) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, meatPid);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, meatPid);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, meatPid);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            if (restock_amt == 0) then begin
                toRemove_qty := 1;
                while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, meatPid)) do begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, meatPid);
                    rm_obj_from_inven(dude_obj, restock_obj);
                    destroy_object(restock_obj);
                    toRemove_qty := toRemove_qty - 1;
                end
            end
            else begin
                destroy_object(restock_obj);
            end
        end
        restock_obj := 0;
        restock_amt := 0;
    end
    else begin
        if (obj_is_carrying_obj_pid(dude_obj, 284) >= 1) then begin
            removed_qty := obj_is_carrying_obj_pid(dude_obj, 284);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 284);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, 284);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(dude_obj, restock_obj);
                            add_obj_to_inven(dude_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(dude_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := 1;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 284)) do begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 284);
                        rm_obj_from_inven(dude_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
        end
        else begin
            if (obj_is_carrying_obj_pid(dude_obj, 81) >= 1) then begin
                removed_qty := obj_is_carrying_obj_pid(dude_obj, 81);
                if (1 < removed_qty) then begin
                    removed_qty := 1;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, 81);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 81);
                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(dude_obj, restock_obj);
                                add_obj_to_inven(dude_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                inven_unwield(dude_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                    if (restock_amt == 0) then begin
                        toRemove_qty := 1;
                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 81)) do begin
                            restock_obj := obj_carrying_pid_obj(dude_obj, 81);
                            rm_obj_from_inven(dude_obj, restock_obj);
                            destroy_object(restock_obj);
                            toRemove_qty := toRemove_qty - 1;
                        end
                    end
                    else begin
                        destroy_object(restock_obj);
                    end
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                if (obj_is_carrying_obj_pid(dude_obj, 103) >= 1) then begin
                    removed_qty := obj_is_carrying_obj_pid(dude_obj, 103);
                    if (1 < removed_qty) then begin
                        removed_qty := 1;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 103);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(dude_obj, 103);
                            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(dude_obj, restock_obj);
                                    add_obj_to_inven(dude_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                    inven_unwield(dude_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := 1;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 103)) do begin
                                restock_obj := obj_carrying_pid_obj(dude_obj, 103);
                                rm_obj_from_inven(dude_obj, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
            end
        end
    end
    set_local_var(6, local_var(6) + 1);
    meatPid := 0;
    giq_option(4, SCRIPT_VORECH, 1101, Node1200, NEUTRAL_REACTION);
    if ((obj_is_carrying_obj_pid(dude_obj, 103) >= 1) or (obj_is_carrying_obj_pid(dude_obj, 284) >= 1) or (obj_is_carrying_obj_pid(dude_obj, 81) >= 1)) then begin
        giq_option(4, SCRIPT_VORECH, 1102, Node1300, NEUTRAL_REACTION);
        giq_option(-3, SCRIPT_VORECH, 1104, Node1300, NEUTRAL_REACTION);
    end
    giq_option(4, SCRIPT_VORECH, 1103, Node1400, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_VORECH, 1105, Node999, NEUTRAL_REACTION);
end

procedure Node1150
begin
    gsay_reply(SCRIPT_VORECH, 1150);
    giq_option(4, SCRIPT_VORECH, 1151, Node999, NEUTRAL_REACTION);
end

procedure Node1200
begin
    gsay_reply(SCRIPT_VORECH, 1200);
    giq_option(4, SCRIPT_VORECH, 1201, Node1250, NEUTRAL_REACTION);
    if ((obj_is_carrying_obj_pid(dude_obj, 103) >= 1) or (obj_is_carrying_obj_pid(dude_obj, 284) >= 1) or (obj_is_carrying_obj_pid(dude_obj, 81) >= 1)) then begin
        giq_option(4, SCRIPT_VORECH, 1202, Node1300, NEUTRAL_REACTION);
    end
    giq_option(4, SCRIPT_VORECH, 1203, Node999, NEUTRAL_REACTION);
end

procedure Node1250
begin
    gsay_reply(SCRIPT_VORECH, 1250);
    giq_option(4, SCRIPT_VORECH, 1251, Node998, NEUTRAL_REACTION);
end

procedure Node1300
begin
    gsay_reply(SCRIPT_VORECH, 1300);
    if (meatPid != 0) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, meatPid);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, meatPid);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, meatPid);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            if (restock_amt == 0) then begin
                toRemove_qty := 1;
                while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, meatPid)) do begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, meatPid);
                    rm_obj_from_inven(dude_obj, restock_obj);
                    destroy_object(restock_obj);
                    toRemove_qty := toRemove_qty - 1;
                end
            end
            else begin
                destroy_object(restock_obj);
            end
        end
        restock_obj := 0;
        restock_amt := 0;
    end
    else begin
        if (obj_is_carrying_obj_pid(dude_obj, 284) >= 1) then begin
            removed_qty := obj_is_carrying_obj_pid(dude_obj, 284);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 284);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, 284);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(dude_obj, restock_obj);
                            add_obj_to_inven(dude_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(dude_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := 1;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 284)) do begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 284);
                        rm_obj_from_inven(dude_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
        end
        else begin
            if (obj_is_carrying_obj_pid(dude_obj, 81) >= 1) then begin
                removed_qty := obj_is_carrying_obj_pid(dude_obj, 81);
                if (1 < removed_qty) then begin
                    removed_qty := 1;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, 81);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 81);
                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(dude_obj, restock_obj);
                                add_obj_to_inven(dude_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                inven_unwield(dude_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                    if (restock_amt == 0) then begin
                        toRemove_qty := 1;
                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 81)) do begin
                            restock_obj := obj_carrying_pid_obj(dude_obj, 81);
                            rm_obj_from_inven(dude_obj, restock_obj);
                            destroy_object(restock_obj);
                            toRemove_qty := toRemove_qty - 1;
                        end
                    end
                    else begin
                        destroy_object(restock_obj);
                    end
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                if (obj_is_carrying_obj_pid(dude_obj, 103) >= 1) then begin
                    removed_qty := obj_is_carrying_obj_pid(dude_obj, 103);
                    if (1 < removed_qty) then begin
                        removed_qty := 1;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 103);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(dude_obj, 103);
                            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(dude_obj, restock_obj);
                                    add_obj_to_inven(dude_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                    inven_unwield(dude_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := 1;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 103)) do begin
                                restock_obj := obj_carrying_pid_obj(dude_obj, 103);
                                rm_obj_from_inven(dude_obj, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
            end
        end
    end
    set_local_var(6, local_var(6) + 1);
    meatPid := 0;
    giq_option(4, SCRIPT_VORECH, 1301, Node1350, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_VORECH, 1302, Node1350, NEUTRAL_REACTION);
end

procedure Node1350
begin
    if (dude_gender == 0) then begin
        gsay_reply(SCRIPT_VORECH, 1350);
    end
    else begin
        gsay_reply(SCRIPT_VORECH, 1351);
    end
    if (((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk))) or ((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= 5)) then begin
        giq_option(4, SCRIPT_VORECH, 1352, Node1550, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, SCRIPT_VORECH, 1352, JOIN_TO_PARTY, NEUTRAL_REACTION);
    end
    if (((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk))) or ((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= 5)) then begin
        giq_option(-3, SCRIPT_VORECH, 1353, Node1550, NEUTRAL_REACTION);
    end
    else begin
        giq_option(-3, SCRIPT_VORECH, 1353, JOIN_TO_PARTY, NEUTRAL_REACTION);
    end
end

procedure Node1400
begin
    gsay_reply(SCRIPT_VORECH, 1400);
    giq_option(4, SCRIPT_VORECH, 1401, Node999, NEUTRAL_REACTION);
end

procedure Node1450
begin
    gsay_reply(SCRIPT_VORECH, 1450);
    giq_option(1, SCRIPT_VORECH, 1451, Node998, NEUTRAL_REACTION);
end

procedure Node1500
begin
    if (dude_gender == 0) then begin
        gsay_reply(SCRIPT_VORECH, 1500);
    end
    else begin
        gsay_reply(SCRIPT_VORECH, 1501);
    end
    if (get_critter_stat(dude_obj, STAT_current_hp) > 10) then begin
        critter_damage(dude_obj, 10);
    end
    else begin
        if (get_critter_stat(dude_obj, STAT_current_hp) == 10) then begin
            critter_damage(dude_obj, 9);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 9) then begin
            critter_damage(dude_obj, 8);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 8) then begin
            critter_damage(dude_obj, 7);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 7) then begin
            critter_damage(dude_obj, 6);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 6) then begin
            critter_damage(dude_obj, 5);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 5) then begin
            critter_damage(dude_obj, 4);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 4) then begin
            critter_damage(dude_obj, 3);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 3) then begin
            critter_damage(dude_obj, 2);
        end
        if (get_critter_stat(dude_obj, STAT_current_hp) == 2) then begin
            critter_damage(dude_obj, 1);
        end
    end
    giq_option(-3, SCRIPT_VORECH, 1502, Node998, NEUTRAL_REACTION);
    if ((local_var(6) == 0) and (local_var(7) == 0) and obj_carrying_pid_obj(dude_obj, 284)) then begin
        giq_option(-3, SCRIPT_VORECH, 1503, Node1510, NEUTRAL_REACTION);
    end
    if ((local_var(6) == 0) and (local_var(7) == 0) and (obj_is_carrying_obj_pid(dude_obj, 284) == 0) and (obj_carrying_pid_obj(dude_obj, 81) or obj_carrying_pid_obj(dude_obj, 103))) then begin
        giq_option(-3, SCRIPT_VORECH, 1504, Node1510, NEUTRAL_REACTION);
    end
end

procedure Node1510
begin
    gsay_reply(SCRIPT_VORECH, 1510);
    if (meatPid != 0) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, meatPid);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, meatPid);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, meatPid);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            if (restock_amt == 0) then begin
                toRemove_qty := 1;
                while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, meatPid)) do begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, meatPid);
                    rm_obj_from_inven(dude_obj, restock_obj);
                    destroy_object(restock_obj);
                    toRemove_qty := toRemove_qty - 1;
                end
            end
            else begin
                destroy_object(restock_obj);
            end
        end
        restock_obj := 0;
        restock_amt := 0;
    end
    else begin
        if (obj_is_carrying_obj_pid(dude_obj, 284) >= 1) then begin
            removed_qty := obj_is_carrying_obj_pid(dude_obj, 284);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 284);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, 284);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(dude_obj, restock_obj);
                            add_obj_to_inven(dude_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(dude_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := 1;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 284)) do begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 284);
                        rm_obj_from_inven(dude_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
        end
        else begin
            if (obj_is_carrying_obj_pid(dude_obj, 81) >= 1) then begin
                removed_qty := obj_is_carrying_obj_pid(dude_obj, 81);
                if (1 < removed_qty) then begin
                    removed_qty := 1;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, 81);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 81);
                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(dude_obj, restock_obj);
                                add_obj_to_inven(dude_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                inven_unwield(dude_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                    if (restock_amt == 0) then begin
                        toRemove_qty := 1;
                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 81)) do begin
                            restock_obj := obj_carrying_pid_obj(dude_obj, 81);
                            rm_obj_from_inven(dude_obj, restock_obj);
                            destroy_object(restock_obj);
                            toRemove_qty := toRemove_qty - 1;
                        end
                    end
                    else begin
                        destroy_object(restock_obj);
                    end
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                if (obj_is_carrying_obj_pid(dude_obj, 103) >= 1) then begin
                    removed_qty := obj_is_carrying_obj_pid(dude_obj, 103);
                    if (1 < removed_qty) then begin
                        removed_qty := 1;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 103);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(dude_obj, 103);
                            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(dude_obj, restock_obj);
                                    add_obj_to_inven(dude_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                    inven_unwield(dude_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := 1;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 103)) do begin
                                restock_obj := obj_carrying_pid_obj(dude_obj, 103);
                                rm_obj_from_inven(dude_obj, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
            end
        end
    end
    set_local_var(7, 1);
    meatPid := 0;
    if (obj_carrying_pid_obj(dude_obj, 284) or obj_carrying_pid_obj(dude_obj, 81) or obj_carrying_pid_obj(dude_obj, 103)) then begin
        giq_option(-3, SCRIPT_VORECH, 1511, Node1000, NEUTRAL_REACTION);
    end
    giq_option(-3, SCRIPT_VORECH, 1512, Node999, NEUTRAL_REACTION);
end

procedure Node1550
begin
    gsay_reply(SCRIPT_VORECH, 1550);
    set_local_var(4, 0);
    giq_option(4, SCRIPT_VORECH, 1551, JOIN_TO_PARTY_TOO_MANY_FOLLOWERS, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_VORECH, 1552, JOIN_TO_PARTY_TOO_MANY_FOLLOWERS, NEUTRAL_REACTION);
end

procedure Node1600
begin
    gsay_reply(SCRIPT_VORECH, 1600);
    set_local_var(5, 2);
    giq_option(4, SCRIPT_VORECH, 1601, KILL_DOG, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_VORECH, 1603, KILL_DOG, NEUTRAL_REACTION);
    if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) then begin
        if (((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk))) or ((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= 5)) then begin
            giq_option(4, SCRIPT_VORECH, 1602, Node1550, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, SCRIPT_VORECH, 1602, JOIN_TO_PARTY, NEUTRAL_REACTION);
        end
    end
    else begin
        if (((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk))) or ((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= 5)) then begin
            giq_option(-3, SCRIPT_VORECH, 1604, Node1550, NEUTRAL_REACTION);
        end
        else begin
            giq_option(-3, SCRIPT_VORECH, 1604, JOIN_TO_PARTY, NEUTRAL_REACTION);
        end
    end
end

procedure JOIN_TO_PARTY
begin
    vorech_partym := create_object_sid(16777729, tile_num(self_obj), elevation(self_obj), SCRIPT_VORECH);
    anim(vorech_partym, 1000, obj_get_rot(self_obj));
    critter_heal(vorech_partym, -(get_critter_stat(self_obj, STAT_max_hp) - get_critter_stat(self_obj, STAT_current_hp)));
    party_add(vorech_partym);
    critter_add_trait(vorech_partym, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    if (not((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 1) != 0)) then begin
        set_global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS, global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwor 1);
        give_exp_points(100);
        display_msg(g_mstr(100) + 100 + g_mstr(101));
    end
    destroy_after_join := 1;
    add_timer_event(self_obj, 2, 2);
    call Node999();
end

procedure JOIN_TO_PARTY_TOO_MANY_FOLLOWERS
begin
    vorech_partym := create_object_sid(16777729, tile_num(self_obj), elevation(self_obj), SCRIPT_VORECH);
    anim(vorech_partym, 1000, obj_get_rot(self_obj));
    critter_heal(vorech_partym, -(get_critter_stat(self_obj, STAT_max_hp) - get_critter_stat(self_obj, STAT_current_hp)));
    critter_add_trait(vorech_partym, TRAIT_OBJECT, OBJECT_TEAM_NUM, 289);
    if (not((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 1) != 0)) then begin
        set_global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS, global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwor 1);
        give_exp_points(100);
        display_msg(g_mstr(100) + 100 + g_mstr(101));
    end
    destroy_after_join := 1;
    add_timer_event(self_obj, 2, 2);
    call Node999();
end

procedure KILL_DOG
begin
    game_ui_disable;
    add_timer_event(self_obj, 5, 4);
end
