variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure push_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure combat_p_proc;
procedure Node999;
procedure Node1650;
procedure Node1700;
procedure Node1750;
procedure Node1800;
procedure Node1850;
procedure Node1900;
procedure Node1950;
procedure Node2000;
procedure Node2050;
procedure Node2100;
procedure JOIN_TO_PARTY;
procedure REMOVE_FROM_PARTY;
procedure LEVELING;
procedure change_dist_close;
procedure change_dist_medium;
procedure change_dist_far;

variable lCurrentHP;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(4) == 1) and obj_can_see_obj(self_obj, dude_obj) and not(party_member_obj(16777729) != 0)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
    if ((party_member_obj(16777729) != 0) and (global_var(GVAR_C_RING_POINTER) == 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32768) == 0) and ((global_var(GVAR_PTR_LYSTRA_REACTIONS_2) bwand 131072) == 0) and ((global_var(GVAR_PTR_LYSTRA_REACTIONS_2) bwand 262144) == 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 65536) == 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 262144) == 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 524288) == 0)) then begin
        if (local_var(5) == 0) then begin
            set_local_var(5, 6);
        end
        if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(5) / 2)) then begin
            if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(5) / 2 * 2)) then begin
                if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5)) != 0)) then begin
                    if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) and (step_tile < 0)) then begin
                        step_tile := step_tile + 1;
                    end
                    else begin
                        if (anim_busy(self_obj) == 0) then begin
                            dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5));
                            step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5));
                            animate_move_obj_to_tile(self_obj, step_tile, 1);
                            debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))))) do begin
                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                debug_msg("move_to_point: step_tile == " + step_tile);
                                animate_move_obj_to_tile(self_obj, step_tile, 1);
                            end
                            if (anim_busy(self_obj) == 0) then begin
                                if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                            debug_msg("flee loop: rot == " + global_temp);
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                        end
                                    end
                                end
                                else begin
                                    step_tile := -10;
                                end
                            end
                        end
                        else begin
                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5)))) then begin
                                reg_anim_func(2, self_obj);
                            end
                        end
                    end
                end
            end
            else begin
                if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5)) != 0)) then begin
                    if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) and (step_tile < 0)) then begin
                        step_tile := step_tile + 1;
                    end
                    else begin
                        if (anim_busy(self_obj) == 0) then begin
                            dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5));
                            step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5));
                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                            debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))))) do begin
                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                debug_msg("move_to_point: step_tile == " + step_tile);
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                            end
                            if (anim_busy(self_obj) == 0) then begin
                                if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                            debug_msg("flee loop: rot == " + global_temp);
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                        end
                                    end
                                end
                                else begin
                                    step_tile := -10;
                                end
                            end
                        end
                        else begin
                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5)))) then begin
                                reg_anim_func(2, self_obj);
                            end
                        end
                    end
                end
            end
        end
    end
    if ((CUR_MAP_ALB_CISA) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 524288) != 0) and ((tile_num(self_obj) == 25905) or (tile_num(self_obj) == 26105) or (tile_num(self_obj) == 25883) or (tile_num(self_obj) == 26083))) then begin
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(dude_tile, tile_num(self_obj)), random(3, 10)), 0);
    end
    if (party_member_obj(16777729) != 0) then begin
        if (has_trait(TRAIT_PERK, dude_obj, PERK_animal_friend) and (party_member_obj(16777729) != 0) and not((global_var(GVAR_PERK_LEADER_PARTY) bwand 1) != 0)) then begin
            if (get_ini_setting("ddraw.ini|Resurrection|Debug") > 0) then begin
                display_msg("temp.c" + "@" + 111 + ": " + ("Enabling" + " 'leader' perk stats for '" + "Vorech" + "'."));
            end
            set_global_var(GVAR_PERK_LEADER_PARTY, global_var(GVAR_PERK_LEADER_PARTY) bwor 1);
            set_critter_extra_stat(party_member_obj(16777729), 8, get_critter_extra_stat(party_member_obj(16777729), 8) + 1);
            set_critter_extra_stat(party_member_obj(16777729), 9, get_critter_extra_stat(party_member_obj(16777729), 9) + (10 * 1));
        end
        global_temp := global_temp;
    end
    if (local_var(6) == 0) then begin
        set_local_var(6, get_pc_stat(PCSTAT_level));
    end
    if (party_member_obj(16777729) != 0) then begin
        if (((local_var(6) + 2) <= get_pc_stat(PCSTAT_level)) and (local_var(7) < 6)) then begin
            set_local_var(6, get_pc_stat(PCSTAT_level));
            set_local_var(7, local_var(7) + 1);
            float_msg(self_obj, mstr(310), FLOAT_MSG_WHITE);
            display_mstr(311);
            call LEVELING();
        end
    end
end

procedure pickup_p_proc
begin
end

procedure talk_p_proc
begin
    if ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 1024) != 0) then begin
        display_mstr(312);
    end
    else begin
        if (not(combat_is_initialized)) then begin
            anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
            start_gdialog(28, self_obj, 4, -1, -1);
            gsay_start;
            if (party_member_obj(16777729) != 0) then begin
                call Node1650();
            end
            else begin
                if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) then begin
                    call Node1800();
                end
                else begin
                    call Node2000();
                end
            end
            gsay_end;
            end_dialogue;
        end
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_DEAD_PARTYMEMBER, self_obj);
    terminate_combat;
    add_timer_event(dude_obj, 0, 4);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(150);
end

procedure description_p_proc
begin
    script_overrides;
    if (not(party_member_obj(16777729) != 0)) then begin
        display_mstr(257);
    end
    else begin
        if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
            display_mstr(random(251, 256));
        end
        else begin
            if (party_member_obj(16777812) != 0) then begin
                display_mstr(random(250, 255));
            end
            else begin
                display_mstr(random(251, 255));
            end
        end
    end
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
    if ((obj_pid(obj_being_used_with) == 40) or (obj_pid(obj_being_used_with) == 71) or (obj_pid(obj_being_used_with) == 144) or (obj_pid(obj_being_used_with) == 273) or (obj_pid(obj_being_used_with) == 81) or (obj_pid(obj_being_used_with) == 103)) then begin
        if (party_member_obj(16777729) != 0) then begin
            lCurrentHP := get_critter_stat(self_obj, STAT_current_hp);
            if (combat_is_initialized) then begin
                add_timer_event(self_obj, 0, 2);
            end
            else begin
                add_timer_event(self_obj, 1, 2);
            end
        end
    end
end

procedure push_p_proc
begin
end

procedure damage_p_proc
begin
    if ((source_obj == dude_obj) and not(party_member_obj(16777729) != 0)) then begin
        set_local_var(4, 1);
    end
end

procedure map_enter_p_proc
begin
    if (CUR_MAP_NH_VILL) then begin
        if (elevation(self_obj) != dude_elevation) then begin
            move_to(self_obj, tile_num(self_obj), dude_elevation);
        end
    end
    if ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 1024) != 0) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 256);
    end
    else begin
        if (party_member_obj(16777729) != 0) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
        end
        else begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 289);
        end
    end
    rm_fixed_timer_event(self_obj, 1);
    add_timer_event(self_obj, game_ticks(random(20, 40)), 1);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if ((get_critter_stat(self_obj, STAT_current_hp) * 100 / get_critter_stat(self_obj, STAT_max_hp)) < 30) then begin
            float_msg(self_obj, mstr(305), FLOAT_MSG_YELLOW);
        end
        rm_fixed_timer_event(self_obj, 1);
        add_timer_event(self_obj, game_ticks(random(20, 40)), 1);
    end
    if (fixed_param == 2) then begin
        if ((lCurrentHP > 0) and ((get_critter_stat(self_obj, STAT_current_hp) - lCurrentHP) > 0)) then begin
            display_msg(mstr(340) + (get_critter_stat(self_obj, STAT_current_hp) - lCurrentHP) + mstr(341));
        end
    end
    if (fixed_param == 11) then begin
        call REMOVE_FROM_PARTY();
    end
end

procedure combat_p_proc
begin
    if (global_var(GVAR_C_RING_POINTER) != 0) then begin
        script_overrides;
    end
    else begin
        if (fixed_param == 4) then begin
            if (random(1, 10) == 5) then begin
                float_msg(self_obj, mstr(random(350, 355)), FLOAT_MSG_RED);
            end
        end
    end
end

procedure Node999
begin
end

procedure Node1650
begin
    Reply(1650);
    giq_option(4, NAME, 1651, Node1900, NEUTRAL_REACTION);
    giq_option(4, NAME, 1652, Node1700, NEUTRAL_REACTION);
    giq_option(4, NAME, 1653, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1654, Node2050, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1655, Node1700, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1656, Node999, NEUTRAL_REACTION);
end

procedure Node1700
begin
    Reply(1700);
    giq_option(4, NAME, 1701, Node1750, NEUTRAL_REACTION);
    giq_option(4, NAME, 1702, REMOVE_FROM_PARTY, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1703, Node1750, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1704, REMOVE_FROM_PARTY, NEUTRAL_REACTION);
end

procedure Node1750
begin
    Reply(1750);
    if (not(party_member_obj(16777729) != 0)) then begin
        call JOIN_TO_PARTY();
    end
    giq_option(4, NAME, 1751, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1752, Node999, NEUTRAL_REACTION);
end

procedure Node1800
begin
    Reply(1800);
    if (((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk))) or ((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= 5)) then begin
        giq_option(4, NAME, 1801, Node1850, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 1801, Node1750, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1802, Node999, NEUTRAL_REACTION);
end

procedure Node1850
begin
    Reply(1850);
    giq_option(4, NAME, 1851, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1852, Node999, NEUTRAL_REACTION);
end

procedure Node1900
begin
    Reply(1900);
    if (not(local_var(5) == 3)) then begin
        giq_option(4, NAME, 1901, change_dist_close, NEUTRAL_REACTION);
    end
    if (not(local_var(5) == 6)) then begin
        giq_option(4, NAME, 1902, change_dist_medium, NEUTRAL_REACTION);
    end
    if (not(local_var(5) == 9)) then begin
        giq_option(4, NAME, 1903, change_dist_far, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1904, Node999, NEUTRAL_REACTION);
end

procedure Node1950
begin
    if (dude_gender == 0) then begin
        Reply(1950);
    end
    else begin
        Reply(1951);
    end
    if (not(local_var(5) == 3)) then begin
        giq_option(4, NAME, 1952, change_dist_close, NEUTRAL_REACTION);
    end
    if (not(local_var(5) == 6)) then begin
        giq_option(4, NAME, 1953, change_dist_medium, NEUTRAL_REACTION);
    end
    if (not(local_var(5) == 9)) then begin
        giq_option(4, NAME, 1954, change_dist_far, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1955, Node999, NEUTRAL_REACTION);
end

procedure Node2000
begin
    Reply(2000);
    if (((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk))) or ((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= 5)) then begin
        giq_option(-3, NAME, 2001, Node1850, NEUTRAL_REACTION);
    end
    else begin
        giq_option(-3, NAME, 2001, Node1750, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 2002, Node999, NEUTRAL_REACTION);
end

procedure Node2050
begin
    Reply(2050);
    if (not(local_var(5) == 3)) then begin
        giq_option(-3, NAME, 2051, change_dist_close, NEUTRAL_REACTION);
    end
    if (not(local_var(5) == 6)) then begin
        giq_option(-3, NAME, 2052, change_dist_medium, NEUTRAL_REACTION);
    end
    if (not(local_var(5) == 9)) then begin
        giq_option(-3, NAME, 2053, change_dist_far, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 2054, Node999, NEUTRAL_REACTION);
end

procedure Node2100
begin
    if (dude_gender == 0) then begin
        Reply(2100);
    end
    else begin
        Reply(2101);
    end
    if (not(local_var(5) == 3)) then begin
        giq_option(-3, NAME, 2102, change_dist_close, NEUTRAL_REACTION);
    end
    if (not(local_var(5) == 6)) then begin
        giq_option(-3, NAME, 2103, change_dist_medium, NEUTRAL_REACTION);
    end
    if (not(local_var(5) == 9)) then begin
        giq_option(-3, NAME, 2104, change_dist_far, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 2105, Node999, NEUTRAL_REACTION);
end

procedure JOIN_TO_PARTY
begin
    set_local_var(4, 0);
    if (not(party_member_obj(16777729) != 0)) then begin
        party_add(self_obj);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    end
end

procedure REMOVE_FROM_PARTY
begin
    if ((global_var(GVAR_PERK_LEADER_PARTY) bwand 1) != 0) then begin
        if (get_ini_setting("ddraw.ini|Resurrection|Debug") > 0) then begin
            display_msg("temp.c" + "@" + 378 + ": " + ("Disabling" + " 'leader' perk stats for '" + "Vorech" + "'."));
        end
        set_global_var(GVAR_PERK_LEADER_PARTY, global_var(GVAR_PERK_LEADER_PARTY) bwand (-1 - 1));
        set_critter_extra_stat(party_member_obj(16777729), 8, get_critter_extra_stat(party_member_obj(16777729), 8) + -1);
        set_critter_extra_stat(party_member_obj(16777729), 9, get_critter_extra_stat(party_member_obj(16777729), 9) + (10 * -1));
    end
    if (party_member_obj(16777729) != 0) then begin
        party_remove(self_obj);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 289);
    end
    if (local_var(4) == 1) then begin
        set_local_var(4, 0);
    end
end

procedure LEVELING
begin
    variable LVar0 := 0;
    LVar0 := get_critter_extra_stat(self_obj, 7);
    set_critter_extra_stat(self_obj, 7, LVar0 + 10);
    critter_heal(self_obj, 10);
    LVar0 := get_critter_extra_stat(self_obj, 11);
    set_critter_extra_stat(self_obj, 11, LVar0 + 3);
    LVar0 := get_critter_extra_stat(self_obj, 24);
    set_critter_extra_stat(self_obj, 24, LVar0 + 2);
    if (local_var(7) >= 4) then begin
        LVar0 := get_critter_extra_stat(self_obj, 15);
        set_critter_extra_stat(self_obj, 15, LVar0 + 2);
        LVar0 := get_critter_extra_stat(self_obj, 14);
        set_critter_extra_stat(self_obj, 14, LVar0 + 1);
        LVar0 := get_critter_extra_stat(self_obj, 17);
        set_critter_extra_stat(self_obj, 17, LVar0 + 2);
    end
end

procedure change_dist_close
begin
    set_local_var(5, 3);
    if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) then begin
        call Node1950();
    end
    else begin
        call Node2100();
    end
end

procedure change_dist_medium
begin
    set_local_var(5, 6);
    if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) then begin
        call Node1950();
    end
    else begin
        call Node2100();
    end
end

procedure change_dist_far
begin
    set_local_var(5, 9);
    if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) then begin
        call Node1950();
    end
    else begin
        call Node2100();
    end
end
