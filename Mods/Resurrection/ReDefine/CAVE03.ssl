variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);

variable encounter_pid1;
variable encounter_pid2;
variable encounter_pid3;
variable encounter_pid4;
variable encounter_pid5;
variable encounter_pid6;
variable encounter_sid1;
variable encounter_sid2;
variable encounter_sid3;
variable encounter_sid4;
variable encounter_sid5;
variable encounter_sid6;
variable active_encounter_pids;
variable total_encounter_mobs;
variable special_theif_encounter;
variable choose_enc_pid;
variable choose_enc_sid;

procedure Choose_Encounter;
procedure Choose_Pid;
procedure placeCritter(variable arg0, variable arg1, variable arg2);
procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;
procedure LoadCritters;
procedure LoadCritterPos;

variable Critter;
variable Critter_Tile;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure Choose_Encounter
begin
    variable LVar0 := 0;
    special_theif_encounter := 0;
    LVar0 := random(1, 12);
    if (LVar0 == 1) then begin
        active_encounter_pids := 1;
        if (get_pc_stat(PCSTAT_level) < 6) then begin
            encounter_pid1 := 16777296;
            encounter_sid1 := 615;
            total_encounter_mobs := random(3, 5);
        end
        else begin
            encounter_pid1 := 16777297;
            encounter_sid1 := 615;
            total_encounter_mobs := random(3, 5);
        end
    end
    else begin
        if (LVar0 == 2) then begin
            active_encounter_pids := 1;
            if (get_pc_stat(PCSTAT_level) < 5) then begin
                encounter_pid1 := 16777299;
                encounter_sid1 := 615;
                total_encounter_mobs := random(3, 5);
            end
            else begin
                encounter_pid1 := 16777302;
                encounter_sid1 := 615;
                total_encounter_mobs := random(3, 5);
            end
        end
        else begin
            if (LVar0 == 3) then begin
                active_encounter_pids := 1;
                encounter_pid1 := 16777221;
                encounter_sid1 := 616;
                total_encounter_mobs := random(3, 5);
            end
            else begin
                if (LVar0 == 4) then begin
                    active_encounter_pids := 1;
                    encounter_pid1 := 16777222;
                    encounter_sid1 := 616;
                    total_encounter_mobs := random(3, 5);
                end
                else begin
                    if (LVar0 == 5) then begin
                        active_encounter_pids := 1;
                        encounter_pid1 := 16777223;
                        encounter_sid1 := 22;
                        total_encounter_mobs := random(3, 5);
                    end
                    else begin
                        if (LVar0 == 6) then begin
                            active_encounter_pids := 1;
                            encounter_pid1 := 16777224;
                            encounter_sid1 := 22;
                            total_encounter_mobs := 5;
                        end
                        else begin
                            if (LVar0 == 7) then begin
                                active_encounter_pids := 1;
                                encounter_pid1 := 16777333;
                                encounter_sid1 := 617;
                                total_encounter_mobs := random(3, 5);
                            end
                            else begin
                                if (LVar0 == 8) then begin
                                    active_encounter_pids := 1;
                                    encounter_pid1 := 16777334;
                                    encounter_sid1 := 617;
                                    total_encounter_mobs := random(4, 5);
                                end
                                else begin
                                    if (LVar0 == 9) then begin
                                        active_encounter_pids := 2;
                                        if (get_pc_stat(PCSTAT_level) < 5) then begin
                                            encounter_pid1 := 16777296;
                                            encounter_pid2 := 16777299;
                                            encounter_sid1 := 615;
                                            encounter_sid2 := 615;
                                            total_encounter_mobs := random(3, 5);
                                        end
                                        else begin
                                            encounter_pid1 := 16777297;
                                            encounter_pid2 := 16777302;
                                            encounter_sid1 := 615;
                                            encounter_sid2 := 615;
                                            if (get_pc_stat(PCSTAT_level) > 12) then begin
                                                active_encounter_pids := 3;
                                                encounter_pid3 := 16777302;
                                                encounter_sid3 := 615;
                                            end
                                            else begin
                                                if (get_pc_stat(PCSTAT_level) > 15) then begin
                                                    active_encounter_pids := 3;
                                                    encounter_pid3 := 16777302;
                                                    encounter_sid3 := 615;
                                                end
                                            end
                                            total_encounter_mobs := 5;
                                        end
                                    end
                                    else begin
                                        if (LVar0 == 10) then begin
                                            active_encounter_pids := 2;
                                            encounter_pid1 := 16777221;
                                            encounter_pid2 := 16777222;
                                            encounter_sid1 := 616;
                                            encounter_sid2 := 616;
                                            total_encounter_mobs := random(3, 5);
                                        end
                                        else begin
                                            if (LVar0 == 11) then begin
                                                active_encounter_pids := 2;
                                                encounter_pid1 := 16777223;
                                                encounter_pid2 := 16777224;
                                                encounter_sid1 := 22;
                                                encounter_sid2 := 22;
                                                total_encounter_mobs := 5;
                                            end
                                            else begin
                                                if (LVar0 == 12) then begin
                                                    active_encounter_pids := 2;
                                                    encounter_pid1 := 16777333;
                                                    encounter_pid1 := 16777334;
                                                    encounter_sid1 := 617;
                                                    encounter_sid2 := 617;
                                                    total_encounter_mobs := 5;
                                                end
                                                else begin
                                                    if (LVar0 == 13) then begin
                                                        if (is_success(do_check(dude_obj, 6, 0))) then begin
                                                            special_theif_encounter := 1;
                                                            active_encounter_pids := 2;
                                                            if (get_pc_stat(PCSTAT_level) < 5) then begin
                                                                encounter_pid1 := 16777486;
                                                                encounter_pid2 := 16777487;
                                                                encounter_sid1 := 625;
                                                                encounter_sid2 := 625;
                                                                total_encounter_mobs := random(2, 3);
                                                            end
                                                            else begin
                                                                if (get_pc_stat(PCSTAT_level) < 11) then begin
                                                                    encounter_pid1 := 16777400;
                                                                    encounter_pid2 := 16777401;
                                                                    encounter_sid1 := 625;
                                                                    encounter_sid2 := 625;
                                                                    total_encounter_mobs := random(3, 4);
                                                                end
                                                                else begin
                                                                    encounter_pid1 := 16777403;
                                                                    encounter_pid2 := 16777404;
                                                                    encounter_sid1 := 625;
                                                                    encounter_sid2 := 625;
                                                                    total_encounter_mobs := random(3, 4);
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Choose_Pid
begin
    variable LVar0 := 0;
    LVar0 := random(1, active_encounter_pids);
    if (LVar0 == 1) then begin
        choose_enc_pid := encounter_pid1;
        choose_enc_sid := encounter_sid1;
    end
    else begin
        if (LVar0 == 2) then begin
            choose_enc_pid := encounter_pid2;
            choose_enc_sid := encounter_sid2;
        end
        else begin
            if (LVar0 == 3) then begin
                choose_enc_pid := encounter_pid3;
                choose_enc_sid := encounter_sid3;
            end
            else begin
                if (LVar0 == 4) then begin
                    choose_enc_pid := encounter_pid4;
                    choose_enc_sid := encounter_sid4;
                end
                else begin
                    if (LVar0 == 5) then begin
                        choose_enc_pid := encounter_pid5;
                        choose_enc_sid := encounter_sid5;
                    end
                    else begin
                        if (LVar0 == 6) then begin
                            choose_enc_pid := encounter_pid6;
                            choose_enc_sid := encounter_sid6;
                        end
                        else begin
                            choose_enc_pid := encounter_pid6;
                            choose_enc_sid := encounter_sid6;
                        end
                    end
                end
            end
        end
    end
end

procedure placeCritter(variable arg0, variable arg1, variable arg2)
begin
    variable LVar3 := 0;
    variable LVar4 := 0;
    variable LVar5 := 0;
    if (arg0 >= 1) then begin
        LVar3 := tile_num_in_direction(arg2, random(0, 5), random(1, 3));
        LVar4 := create_object_sid(arg0, 0, 0, arg1);
        if (cur_map_index != MAP_CAVE5) then begin
            critter_attempt_placement(LVar4, LVar3, 1);
        end
        else begin
            critter_attempt_placement(LVar4, LVar3, 2);
        end
        while ((tile_distance(tile_num(LVar4), arg2) > 5) and (LVar5 < 4)) do begin
            LVar3 := tile_num_in_direction(arg2, random(0, 5), random(1, 2));
            debug_msg("tile_num == " + LVar3);
            LVar5 := LVar5 + 1;
        end
        if ((LVar5 >= 4) and (LVar3 > 0)) then begin
            if (cur_map_index != MAP_CAVE5) then begin
                critter_attempt_placement(LVar4, arg2, 1);
            end
            else begin
                critter_attempt_placement(LVar4, arg2, 2);
            end
        end
        if (tile_distance(tile_num(LVar4), arg2) > 5) then begin
            destroy_object(LVar4);
            debug_msg("Couldn't find Safe spot. Destroying Ptr.");
        end
    end
    else begin
        debug_msg("ERROR: Pid < 1. Pid == " + arg0 + ".");
    end
end

procedure start
begin
end

procedure map_enter_p_proc
begin
    wm_area_set_pos(17, worldmap_xpos, worldmap_ypos);
    if (not(is_loading_game)) then begin
        call LoadCritters();
    end
    if (map_first_run) then begin
        display_msg(message_str(SCRIPT_CAVE01, 100));
    end
    if (dude_elevation == 0) then begin
        if ((get_month >= 3) and (get_month < 5)) then begin
            if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                set_light_level(game_time_hour - 600 + 40);
            end
            else begin
                if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1800));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 5) and (get_month < 9)) then begin
                if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                    set_light_level(game_time_hour - 500 + 40);
                end
                else begin
                    if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1900));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((get_month >= 9) and (get_month < 11)) then begin
                    if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                        set_light_level(game_time_hour - 600 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1800));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
                else begin
                    if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                        set_light_level(game_time_hour - 700 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1700));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
            end
        end
    end
    else begin
        set_light_level(50);
    end
    if (map_first_run and not(global_var(GVAR_MYSTERIOUS_STRANGER) bwand 1) and (random(0, 99) < (30 + (2 * dude_luck))) and has_trait(TRAIT_PERK, dude_obj, PERK_mysterious_stranger)) then begin
        if (not(global_var(GVAR_MYSTERIOUS_STRANGER) bwand 2)) then begin
            set_global_var(GVAR_MYSTERIOUS_STRANGER, global_var(GVAR_MYSTERIOUS_STRANGER) bwor 2);
            debug_msg("Set the Stranger Gender");
            if (random(0, 99) < 50) then begin
                set_global_var(GVAR_MYSTERIOUS_STRANGER, global_var(GVAR_MYSTERIOUS_STRANGER) bwor 4);
            end
        end
        if (global_var(GVAR_MYSTERIOUS_STRANGER) bwand 4) then begin
            if (get_pc_stat(PCSTAT_level) >= 20) then begin
                Critter := create_object_sid(16777503, 0, 0, SCRIPT_ECMSTSTR);
            end
            else begin
                if (get_pc_stat(PCSTAT_level) >= 16) then begin
                    Critter := create_object_sid(16777501, 0, 0, SCRIPT_ECMSTSTR);
                end
                else begin
                    if (get_pc_stat(PCSTAT_level) >= 10) then begin
                        Critter := create_object_sid(16777499, 0, 0, SCRIPT_ECMSTSTR);
                    end
                    else begin
                        if (get_pc_stat(PCSTAT_level) >= 5) then begin
                            Critter := create_object_sid(16777497, 0, 0, SCRIPT_ECMSTSTR);
                        end
                        else begin
                            Critter := create_object_sid(16777487, 0, 0, SCRIPT_ECMSTSTR);
                        end
                    end
                end
            end
        end
        else begin
            if (get_pc_stat(PCSTAT_level) >= 20) then begin
                Critter := create_object_sid(16777502, 0, 0, SCRIPT_ECMSTSTR);
            end
            else begin
                if (get_pc_stat(PCSTAT_level) >= 16) then begin
                    Critter := create_object_sid(16777500, 0, 0, SCRIPT_ECMSTSTR);
                end
                else begin
                    if (get_pc_stat(PCSTAT_level) >= 10) then begin
                        Critter := create_object_sid(16777498, 0, 0, SCRIPT_ECMSTSTR);
                    end
                    else begin
                        if (get_pc_stat(PCSTAT_level) >= 5) then begin
                            Critter := create_object_sid(16777496, 0, 0, SCRIPT_ECMSTSTR);
                        end
                        else begin
                            Critter := create_object_sid(16777486, 0, 0, SCRIPT_ECMSTSTR);
                        end
                    end
                end
            end
        end
        Critter_Tile := tile_num_in_direction(dude_tile, random(0, 5), random(5, 10));
        critter_attempt_placement(Critter, Critter_Tile, dude_elevation);
    end
    set_global_var(GVAR_LOAD_MAP_INDEX, 0);
end

procedure map_update_p_proc
begin
    if (dude_elevation == 0) then begin
        if ((get_month >= 3) and (get_month < 5)) then begin
            if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                set_light_level(game_time_hour - 600 + 40);
            end
            else begin
                if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1800));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 5) and (get_month < 9)) then begin
                if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                    set_light_level(game_time_hour - 500 + 40);
                end
                else begin
                    if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1900));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((get_month >= 9) and (get_month < 11)) then begin
                    if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                        set_light_level(game_time_hour - 600 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1800));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
                else begin
                    if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                        set_light_level(game_time_hour - 700 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1700));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
            end
        end
    end
    else begin
        set_light_level(50);
    end
end

procedure map_exit_p_proc
begin
end

procedure LoadCritters
begin
    call Choose_Encounter();
    call LoadCritterPos();
end

procedure LoadCritterPos
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar1 := total_encounter_mobs;
    while (LVar1 > 0) do begin
        call Choose_Pid();
        call placeCritter(choose_enc_pid, choose_enc_sid, 21292);
        LVar1 := LVar1 - 1;
    end
    LVar1 := total_encounter_mobs;
    while (LVar1 > 0) do begin
        call Choose_Pid();
        call placeCritter(choose_enc_pid, choose_enc_sid, 20092);
        LVar1 := LVar1 - 1;
    end
    LVar1 := total_encounter_mobs;
    while (LVar1 > 0) do begin
        call Choose_Pid();
        call placeCritter(choose_enc_pid, choose_enc_sid, 20508);
        LVar1 := LVar1 - 1;
    end
end
