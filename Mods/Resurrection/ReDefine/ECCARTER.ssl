variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node999_Hurt;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Node1550;
procedure Node1600;
procedure Node1650;
procedure Node1700;
procedure Node1750;
procedure Node1800;
procedure Node1850;
procedure Node1900;
procedure Node1950;
procedure Node2000;
procedure Node2050;
procedure Node2100;
procedure Node2150;
procedure Node2200;
procedure Node2250;
procedure Node2300;
procedure Node2350;
procedure Node2400;
procedure Node2450;
procedure Node2500;
procedure Node2550;
procedure Node2600;
procedure Node2650;
procedure Node2700;
procedure Node2750;
procedure Node2800;
procedure Node2850;
procedure Node2900;
procedure Node2950;
procedure Node3000;
procedure Node3050;
procedure Node3100;
procedure Node3150;
procedure Node3200;
procedure Node3250;
procedure Node3300;
procedure Node3350;
procedure Node3400;
procedure Node3450;
procedure Node3500;
procedure Node3550;
procedure Node3600;
procedure Node3650;
procedure Node3700;
procedure Node3750;
procedure Node3800;
procedure Node3850;

import variable sg_carter;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    sg_carter := self_obj;
end

procedure critter_p_proc
begin
    if ((map_var(1) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_map_var(1, 1);
    end
end

procedure talk_p_proc
begin
    anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    start_gdialog(1592, self_obj, 4, -1, -1);
    gsay_start;
    call Node500();
    gsay_end;
    end_dialogue;
    set_local_var(4, 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        if (dude_iq < 4) then begin
            display_mstr(150);
        end
        else begin
            display_mstr(151);
        end
    end
    else begin
        if (dude_iq < 4) then begin
            display_mstr(100);
        end
        else begin
            if (dude_iq < 8) then begin
                display_mstr(101 + (dude_gender == 1));
            end
            else begin
                display_mstr(103);
            end
        end
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_mstr(250);
    end
    else begin
        display_mstr(200);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_map_var(1, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 285);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD_NO_TALKING);
    rm_fixed_timer_event(self_obj, 1);
    add_timer_event(self_obj, game_ticks(random(18, 24)), 1);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if ((map_var(2) == 0) and not(combat_is_initialized)) then begin
            float_msg(self_obj, mstr(random(300, 302)), FLOAT_MSG_YELLOW);
        end
        rm_fixed_timer_event(self_obj, 1);
        add_timer_event(self_obj, game_ticks(random(18, 24)), 1);
    end
end

procedure Node998
begin
    set_map_var(1, 1);
end

procedure Node999
begin
end

procedure Node999_Hurt
begin
    display_mstr(3900);
    critter_damage(dude_obj, 1);
end

procedure Node500
begin
    Reply(500);
    giq_option(-3, NAME, 501, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 502, Node600, NEUTRAL_REACTION);
    if (local_var(5) == 1) then begin
        giq_option(4, NAME, 503, Node650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 504, Node700, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    giq_option(-3, NAME, 551, Node750, NEUTRAL_REACTION);
    giq_option(-3, NAME, 552, Node800, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600);
    set_local_var(5, 1);
    giq_option(4, NAME, 601 + (dude_gender == 1), Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 603, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 604, Node850, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 605, Node900, NEUTRAL_REACTION);
    end
end

procedure Node650
begin
    Reply(650);
    giq_option(4, NAME, 651, Node950, NEUTRAL_REACTION);
    giq_option(6, NAME, 652, Node1000, NEUTRAL_REACTION);
    giq_option(9, NAME, 653, Node1050, NEUTRAL_REACTION);
    giq_option(4, NAME, 654, Node999, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    giq_option(4, NAME, 701, Node1100, NEUTRAL_REACTION);
    giq_option(4, NAME, 702, Node1150, NEUTRAL_REACTION);
    giq_option(4, NAME, 703, Node1200, NEUTRAL_REACTION);
    giq_option(4, NAME, 704, Node1300, NEUTRAL_REACTION);
    giq_option(4, NAME, 705, Node1350, NEUTRAL_REACTION);
    giq_option(4, NAME, 706, Node999, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    giq_option(-3, NAME, 751, Node1400, NEUTRAL_REACTION);
    giq_option(-3, NAME, 752, Node1450, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800);
    giq_option(-3, NAME, 801, Node1500, NEUTRAL_REACTION);
    giq_option(-3, NAME, 802, Node1550, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850);
    giq_option(4, NAME, 851, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 852, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 853, Node999, NEUTRAL_REACTION);
end

procedure Node900
begin
    Reply(900);
    giq_option(4, NAME, 901, Node1600, NEUTRAL_REACTION);
    giq_option(4, NAME, 902, Node1650, NEUTRAL_REACTION);
end

procedure Node950
begin
    Reply(950);
    giq_option(4, NAME, 951, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 952, Node999, NEUTRAL_REACTION);
end

procedure Node1000
begin
    Reply(1000);
    giq_option(4, NAME, 1001, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 1002, Node1700, NEUTRAL_REACTION);
end

procedure Node1050
begin
    Reply(1050);
    giq_option(4, NAME, 1051, Node1750, NEUTRAL_REACTION);
    giq_option(4, NAME, 1052, Node1800, NEUTRAL_REACTION);
    giq_option(4, NAME, 1053, Node1850, NEUTRAL_REACTION);
end

procedure Node1100
begin
    Reply(1100);
    giq_option(4, NAME, 1101, Node1900, NEUTRAL_REACTION);
    giq_option(4, NAME, 1102, Node700, NEUTRAL_REACTION);
end

procedure Node1150
begin
    Reply(1150);
    giq_option(4, NAME, 1151, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 1152, Node1950, NEUTRAL_REACTION);
end

procedure Node1200
begin
    Reply(1200);
    giq_option(4, NAME, 1201, Node1250, NEUTRAL_REACTION);
    giq_option(4, NAME, 1202, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 1203, Node2000, NEUTRAL_REACTION);
end

procedure Node1250
begin
    Reply(1250);
    giq_option(4, NAME, 1251, Node2050, NEUTRAL_REACTION);
    giq_option(7, NAME, 1252, Node2100, NEUTRAL_REACTION);
    giq_option(8, NAME, 1253, Node2150, NEUTRAL_REACTION);
    giq_option(6, NAME, 1254, Node2200, NEUTRAL_REACTION);
    giq_option(4, NAME, 1255, Node2250, NEUTRAL_REACTION);
    giq_option(4, NAME, 1256, Node999, NEUTRAL_REACTION);
end

procedure Node1300
begin
    Reply(1300);
    giq_option(4, NAME, 1301, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 1302, Node2300, NEUTRAL_REACTION);
    giq_option(8, NAME, 1303, Node2350, NEUTRAL_REACTION);
end

procedure Node1350
begin
    Reply(1350);
    giq_option(4, NAME, 1351, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 1352, Node999, NEUTRAL_REACTION);
end

procedure Node1400
begin
    Reply(1400 + (dude_gender == 1));
    giq_option(-3, NAME, 1402, Node999, NEUTRAL_REACTION);
end

procedure Node1450
begin
    Reply(1450 + (dude_gender == 1));
    giq_option(4, NAME, 1452, Node999, NEUTRAL_REACTION);
end

procedure Node1500
begin
    Reply(1500);
    giq_option(-3, NAME, 1501, Node2400, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1502, Node2450, NEUTRAL_REACTION);
end

procedure Node1550
begin
    Reply(1550);
    giq_option(-3, NAME, 1551, Node999, NEUTRAL_REACTION);
end

procedure Node1600
begin
    Reply(1600);
    giq_option(4, NAME, 1601, Node999, NEUTRAL_REACTION);
end

procedure Node1650
begin
    Reply(1650);
    giq_option(4, NAME, 1651, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 1652, Node999, NEUTRAL_REACTION);
end

procedure Node1700
begin
    Reply(1700);
    giq_option(4, NAME, 1701, Node2500, NEUTRAL_REACTION);
    giq_option(4, NAME, 1702, Node2550, NEUTRAL_REACTION);
end

procedure Node1750
begin
    Reply(1750);
    giq_option(4, NAME, 1751, Node1050, NEUTRAL_REACTION);
    giq_option(4, NAME, 1752, Node1700, NEUTRAL_REACTION);
end

procedure Node1800
begin
    Reply(1800);
    giq_option(4, NAME, 1801, Node1700, NEUTRAL_REACTION);
    giq_option(4, NAME, 1802, Node2550, NEUTRAL_REACTION);
end

procedure Node1850
begin
    Reply(1850);
    giq_option(4, NAME, 1851, Node2600, NEUTRAL_REACTION);
    giq_option(4, NAME, 1852, Node1700, NEUTRAL_REACTION);
end

procedure Node1900
begin
    Reply(1900);
    giq_option(4, NAME, 1901, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 1902, Node999, NEUTRAL_REACTION);
end

procedure Node1950
begin
    Reply(1950);
    giq_option(4, NAME, 1951, Node2650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1952, Node2700, NEUTRAL_REACTION);
    giq_option(4, NAME, 1953, Node700, NEUTRAL_REACTION);
end

procedure Node2000
begin
    Reply(2000);
    giq_option(4, NAME, 2001, Node2300, NEUTRAL_REACTION);
    giq_option(4, NAME, 2002, Node2750, NEUTRAL_REACTION);
end

procedure Node2050
begin
    Reply(2050);
    giq_option(4, NAME, 2051, Node1250, NEUTRAL_REACTION);
    giq_option(4, NAME, 2052, Node700, NEUTRAL_REACTION);
end

procedure Node2100
begin
    Reply(2100);
    giq_option(4, NAME, 2101, Node1250, NEUTRAL_REACTION);
    giq_option(4, NAME, 2102, Node700, NEUTRAL_REACTION);
end

procedure Node2150
begin
    Reply(2150);
    giq_option(4, NAME, 2151, Node1250, NEUTRAL_REACTION);
    giq_option(4, NAME, 2152, Node700, NEUTRAL_REACTION);
end

procedure Node2200
begin
    Reply(2200);
    giq_option(4, NAME, 2201, Node1250, NEUTRAL_REACTION);
    giq_option(4, NAME, 2202, Node999, NEUTRAL_REACTION);
    if (dude_skill(SKILL_SCIENCE) > 70) then begin
        giq_option(8, NAME, 2203, Node2800, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2204, Node2750, NEUTRAL_REACTION);
end

procedure Node2250
begin
    Reply(2250);
    giq_option(4, NAME, 2251, Node2850, NEUTRAL_REACTION);
    giq_option(4, NAME, 2252, Node2900, NEUTRAL_REACTION);
end

procedure Node2300
begin
    Reply(2300);
    giq_option(4, NAME, 2301, Node700, NEUTRAL_REACTION);
    giq_option(6, NAME, 2302, Node2950, NEUTRAL_REACTION);
    giq_option(8, NAME, 2303, Node3000, NEUTRAL_REACTION);
end

procedure Node2350
begin
    Reply(2350);
    giq_option(4, NAME, 2351, Node3050, NEUTRAL_REACTION);
    giq_option(4, NAME, 2352, Node3100, NEUTRAL_REACTION);
end

procedure Node2400
begin
    Reply(2400);
    giq_option(-3, NAME, 2401, Node999, NEUTRAL_REACTION);
end

procedure Node2450
begin
    Reply(2450);
    giq_option(-3, NAME, 2451, Node999, NEUTRAL_REACTION);
end

procedure Node2500
begin
    Reply(2500);
    giq_option(4, NAME, 2501, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 2502, Node1250, NEUTRAL_REACTION);
    giq_option(4, NAME, 2503, Node999, NEUTRAL_REACTION);
end

procedure Node2550
begin
    Reply(2550);
    giq_option(4, NAME, 2551, Node3500, NEUTRAL_REACTION);
    if ((map_var(0) == 1) and (local_var(6) == 0)) then begin
        giq_option(4, NAME, 2552, Node3200, NEUTRAL_REACTION);
    end
end

procedure Node2600
begin
    Reply(2600);
    giq_option(4, NAME, 2601, Node3250, NEUTRAL_REACTION);
    giq_option(4, NAME, 2602, Node1800, NEUTRAL_REACTION);
end

procedure Node2650
begin
    Reply(2650);
    giq_option(4, NAME, 2651, Node2700, NEUTRAL_REACTION);
    giq_option(4, NAME, 2652, Node700, NEUTRAL_REACTION);
end

procedure Node2700
begin
    Reply(2700);
    giq_option(4, NAME, 2701, Node700, NEUTRAL_REACTION);
end

procedure Node2750
begin
    Reply(2750);
    giq_option(4, NAME, 2751, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 2752, Node2300, NEUTRAL_REACTION);
    giq_option(8, NAME, 2753, Node2350, NEUTRAL_REACTION);
end

procedure Node2800
begin
    Reply(2800);
    giq_option(4, NAME, 2801, Node3300, NEUTRAL_REACTION);
    giq_option(4, NAME, 2802, Node700, NEUTRAL_REACTION);
end

procedure Node2850
begin
    Reply(2850);
    giq_option(4, NAME, 2851, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 2852, Node3350, NEUTRAL_REACTION);
end

procedure Node2900
begin
    Reply(2900);
    giq_option(4, NAME, 2901, Node2850, NEUTRAL_REACTION);
end

procedure Node2950
begin
    Reply(2950);
    giq_option(4, NAME, 2951, Node3500, NEUTRAL_REACTION);
    giq_option(8, NAME, 2952, Node3550, NEUTRAL_REACTION);
end

procedure Node3000
begin
    Reply(3000);
    giq_option(4, NAME, 3001, Node999, NEUTRAL_REACTION);
end

procedure Node3050
begin
    Reply(3050);
    giq_option(4, NAME, 3051, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 3052, Node2350, NEUTRAL_REACTION);
end

procedure Node3100
begin
    Reply(3100);
    giq_option(4, NAME, 3101, Node3150, NEUTRAL_REACTION);
    giq_option(4, NAME, 3102, Node3600, NEUTRAL_REACTION);
end

procedure Node3150
begin
    Reply(3150);
    giq_option(4, NAME, 3151, Node2950, NEUTRAL_REACTION);
    giq_option(4, NAME, 3152, Node999, NEUTRAL_REACTION);
end

procedure Node3200
begin
    Reply(3200);
    giq_option(4, NAME, 3201, Node3650, NEUTRAL_REACTION);
end

procedure Node3250
begin
    Reply(3250);
    giq_option(4, NAME, 3251, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 3252, Node999, NEUTRAL_REACTION);
end

procedure Node3300
begin
    Reply(3300);
    giq_option(4, NAME, 3301, Node3400, NEUTRAL_REACTION);
    giq_option(4, NAME, 3302, Node3450, NEUTRAL_REACTION);
end

procedure Node3350
begin
    Reply(3350);
    giq_option(4, NAME, 3351, Node999, NEUTRAL_REACTION);
end

procedure Node3400
begin
    Reply(3400);
    giq_option(4, NAME, 3401, Node999, NEUTRAL_REACTION);
end

procedure Node3450
begin
    Reply(3450);
    giq_option(4, NAME, 3451, Node2850, NEUTRAL_REACTION);
end

procedure Node3500
begin
    Reply(3500);
    giq_option(4, NAME, 3501, Node999, NEUTRAL_REACTION);
end

procedure Node3550
begin
    Reply(3550);
    giq_option(4, NAME, 3551, Node3000, NEUTRAL_REACTION);
end

procedure Node3600
begin
    Reply(3600 + (dude_gender == 1));
    giq_option(4, NAME, 3602 + (dude_gender == 1), Node3700, NEUTRAL_REACTION);
    giq_option(7, NAME, 3604, Node3750, NEUTRAL_REACTION);
    giq_option(6, NAME, 3605, Node3400, NEUTRAL_REACTION);
    giq_option(4, NAME, 3606, Node999_Hurt, NEUTRAL_REACTION);
end

procedure Node3650
begin
    Reply(3650);
    giq_option(4, NAME, 3651, Node3800, NEUTRAL_REACTION);
    giq_option(4, NAME, 3652, Node3400, NEUTRAL_REACTION);
end

procedure Node3700
begin
    Reply(3700 + (dude_gender == 1));
    giq_option(4, NAME, 3702, Node999, NEUTRAL_REACTION);
end

procedure Node3750
begin
    Reply(3750);
    giq_option(4, NAME, 3751, Node2300, NEUTRAL_REACTION);
    giq_option(4, NAME, 3752, Node999, NEUTRAL_REACTION);
end

procedure Node3800
begin
    Reply(3800);
    giq_option(4, NAME, 3801, Node3850, NEUTRAL_REACTION);
end

procedure Node3850
begin
    Reply(3850 + (dude_gender == 1));
    set_local_var(6, 1);
    giq_option(4, NAME, 3852, Node999, NEUTRAL_REACTION);
end
