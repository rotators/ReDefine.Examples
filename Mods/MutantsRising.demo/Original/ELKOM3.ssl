variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;
procedure start;
procedure map_exit_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;

export variable cassidy_ptr;
export variable kirki_ptr;
export variable temoak_ptr;
export variable vrax_ptr;
export variable matatu_ptr;
export variable corben_west_ptr;
export variable wlynch_ptr;
export variable russel_ptr;
export variable jakes_grave_ptr;
export variable jordan_ptr;

variable cass;
variable russell;
variable shaman;
variable councilor;
variable captain;
variable kirki_guard;
variable junky;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777728) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777728)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777701) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777701)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure map_exit_p_proc
begin
    if ((global_var(884) > 0) and ((global_var(904) > 0) or (global_var(907) > 0))) then begin
        if (global_var(906) > game_time) then begin
            set_global_var(905, global_var(906));
        end
        else begin
            set_global_var(905, game_time);
        end
    end
end

procedure map_enter_p_proc
begin
    if (global_var(706) == 4) then begin
        if (tile_contains_obj_pid(16872, 0, 16777725) == 0) then begin
            create_object_sid(16777725, 16872, 0, 1319);
        end
        override_map_start(17075 % 200, 17075 / 200, 0, 0);
        russell := tile_contains_pid_obj(16872, 0, 16777725);
        anim(russell, 1000, 3);
    end
    else begin
        if (global_var(710) == 2) then begin
            if (metarule(22, 0) == 0) then begin
                set_map_var(6, 1);
                if (tile_contains_obj_pid(13320, 0, 16777701) == 0) then begin
                    create_object_sid(16777701, 13320, 0, 1304);
                end
                override_map_start(13719 % 200, 13719 / 200, 0, 5);
                cass := tile_contains_pid_obj(13320, 0, 16777701);
                anim(cass, 1000, 5);
                kirki_guard := tile_contains_pid_obj(12720, 0, 16777712);
                game_ui_disable;
                add_timer_event(kirki_guard, 10, 0);
            end
        end
        else begin
            if (global_var(701) == 3) then begin
                if (tile_contains_obj_pid(16696, 0, 16777701) == 0) then begin
                    create_object_sid(16777701, 16696, 0, 1304);
                end
                override_map_start(17099 % 200, 17099 / 200, 0, 0);
                cass := tile_contains_pid_obj(16696, 0, 16777701);
                anim(cass, 1000, 5);
                add_timer_event(cass, 12, 2);
            end
            else begin
                if (global_var(698) == 8) then begin
                    set_map_var(1, 1);
                    if (tile_contains_obj_pid(24528, 0, 16777702) == 0) then begin
                        create_object_sid(16777702, 24528, 0, 1307);
                    end
                    if (tile_contains_obj_pid(24326, 0, 16777711) == 0) then begin
                        create_object_sid(16777711, 24326, 0, 1315);
                    end
                    if (get_critter_stat(dude_obj, 4) < 4) then begin
                        if (tile_contains_obj_pid(24925, 0, 16777700) == 0) then begin
                            create_object_sid(16777700, 24925, 0, 1308);
                        end
                        if (tile_contains_obj_pid(25127, 0, 16777701) == 0) then begin
                            create_object_sid(16777701, 25127, 0, 1304);
                        end
                        cass := tile_contains_pid_obj(25127, 0, 16777701);
                        junky := tile_contains_pid_obj(24925, 0, 16777700);
                        anim(cass, 1000, 5);
                        anim(junky, 1000, 5);
                    end
                    councilor := tile_contains_pid_obj(24528, 0, 16777702);
                    captain := tile_contains_pid_obj(24326, 0, 16777711);
                    shaman := tile_contains_pid_obj(22527, 0, 16777714);
                    override_map_start(24530 % 200, 24530 / 200, 0, 5);
                    move_to(shaman, 23928, 0);
                    anim(shaman, 1000, 2);
                    anim(captain, 1000, 4);
                    anim(councilor, 1000, 5);
                    add_timer_event(councilor, 4, 2);
                end
                else begin
                    override_map_start(28080 % 200, 28080 / 200, 0, 4);
                    if (metarule(14, 0)) then begin
                        display_msg(message_str(1536, 100));
                    end
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if (elevation(dude_obj) == 0) then begin
        if ((get_month >= 3) and (get_month < 5)) then begin
            if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                set_light_level(game_time_hour - 600 + 40);
            end
            else begin
                if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1800));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 5) and (get_month < 9)) then begin
                if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                    set_light_level(game_time_hour - 500 + 40);
                end
                else begin
                    if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1900));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((get_month >= 9) and (get_month < 11)) then begin
                    if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                        set_light_level(game_time_hour - 600 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1800));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
                else begin
                    if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                        set_light_level(game_time_hour - 700 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1700));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
            end
        end
    end
    else begin
        set_light_level(50);
    end
end

