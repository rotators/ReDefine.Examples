variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure combat_p_proc;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure plateau_show;
procedure cass_show;
procedure node001;
procedure node002;
procedure node003;
procedure node004;
procedure node005;
procedure node006;
procedure node007;
procedure node008;
procedure node009;
procedure node010;
procedure node011;
procedure node012;
procedure node013;
procedure node014;
procedure node015;
procedure node016;
procedure node017;
procedure node018;
procedure node019;
procedure node020;
procedure node021;
procedure node022;
procedure node023;
procedure node024;
procedure node025;
procedure node026;
procedure node026a;
procedure node027;
procedure node028;
procedure node029;
procedure node030;
procedure node031;
procedure node032;
procedure node033;
procedure node034;
procedure node035;
procedure node036;
procedure node037;
procedure node038;
procedure node039;
procedure node040;
procedure node041;
procedure node042;
procedure node043;
procedure node044;
procedure node045;
procedure node046;
procedure node047;
procedure node048;
procedure node049;
procedure node050;
procedure node051;
procedure node052;
procedure node053;
procedure node054;
procedure node055;
procedure node056;
procedure node057;
procedure node058;
procedure node059;
procedure node060;
procedure node993;
procedure node994;
procedure node995;
procedure node996;
procedure node997;
procedure node998;
procedure node999;

import variable jordan_ptr;
import variable jordan_desk_ptr;
import variable jordan_door_ptr;
import variable matatu_ptr;
import variable cassidy_ptr;
import variable vrax_ptr;

variable talker;
variable item;
variable warning;
variable walks;
variable cloz;
variable mshow;
variable cshow;
variable rot;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777728) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777728)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777701) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777701)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    jordan_ptr := self_obj;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        dialogue_system_enter;
    end
    else begin
        if (fixed_param == 1) then begin
            if (warning == 0) then begin
                float_msg(self_obj, message_str(1308, 151), 2);
            end
            else begin
                if (warning == 1) then begin
                    float_msg(self_obj, message_str(1308, 150), 2);
                end
                else begin
                    call node998();
                end
            end
        end
        else begin
            if (fixed_param == 2) then begin
                float_msg(self_obj, message_str(1308, 150), 2);
                set_local_var(5, 1);
                attack_setup(self_obj, dude_obj);
            end
            else begin
                if (fixed_param == 3) then begin
                    call plateau_show();
                end
                else begin
                    if (fixed_param == 4) then begin
                        call cass_show();
                    end
                    else begin
                        if (fixed_param == 5) then begin
                            if (tile_num(self_obj) != 24067) then begin
                                move_to(self_obj, 24067, 0);
                                anim(self_obj, 1000, 5);
                                if (map_var(14) > 0) then begin
                                    set_map_var(14, 0);
                                end
                                set_local_var(11, 0);
                                set_local_var(12, game_time + (2 * (24 * (60 * (60 * 10)))));
                                set_local_var(13, game_time + (3 * (24 * (60 * (60 * 10)))));
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (local_var(8) == 0) then begin
        set_local_var(8, local_var(8) + 1);
        float_msg(self_obj, message_str(1308, 150), 2);
    end
    else begin
        call node998();
    end
end

procedure destroy_p_proc
begin
    set_global_var(47, global_var(47) - 100);
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) - -15);
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure combat_p_proc
begin
end

procedure critter_p_proc
begin
    if ((cur_map_index == 3) and (global_var(710) == 6)) then begin
        destroy_object(self_obj);
    end
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if ((global_var(698) == 2) and (map_var(3) == 2) and (talker == 0) and (map_var(7) > 0) and (tile_num(self_obj) == 25697)) then begin
        talker := 1;
        add_timer_event(self_obj, 8, 0);
    end
    if ((global_var(698) == 1) and (global_var(697) == 3) and (talker == 0) and (map_var(7) > 0) and (tile_num(self_obj) == 25697)) then begin
        talker := 1;
        add_timer_event(self_obj, 8, 0);
    end
    if ((map_var(26) == 0) and (global_var(698) == 0) and (global_var(697) == 2) and (talker == 0) and (map_var(7) > 0) and (tile_num(self_obj) == 25697)) then begin
        talker := 1;
        add_timer_event(self_obj, 8, 0);
    end
    if ((obj_is_carrying_obj_pid(self_obj, 536) > 0) and (obj_is_carrying_obj_pid(dude_obj, 536) > 0)) then begin
        removed_qty := obj_is_carrying_obj_pid(self_obj, 536);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(self_obj, 536);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, 536);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(self_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(self_obj, restock_obj);
                        add_obj_to_inven(self_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                        metarule(43, self_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
    end
    if ((cur_map_index == 4) and (obj_on_screen(self_obj) == 1) and (talker == 0) and (tile_distance_objs(self_obj, dude_obj) < 25)) then begin
        talker := 1;
        reg_anim_func(2, dude_obj);
        game_ui_disable;
        add_timer_event(self_obj, 5, 3);
    end
    if ((cur_map_index == 126) and (get_critter_stat(dude_obj, 4) > 3)) then begin
        if ((local_var(12) != 0) and (local_var(12) < game_time) and (local_var(11) == 0) and (tile_num(self_obj) == 24067)) then begin
            set_local_var(11, 1);
            walks := 1;
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 21078, 0);
            reg_anim_func(3, 0);
        end
        if ((local_var(11) == 2) and (tile_num(self_obj) == 21078) and (walks == 0)) then begin
            walks := 1;
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 20288, 0);
            reg_anim_func(3, 0);
        end
        if ((local_var(11) == 3) and (tile_num(self_obj) == 20288) and (walks == 0)) then begin
            walks := 1;
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 23110, 0);
            reg_anim_func(3, 0);
        end
        if ((local_var(11) == 4) and (tile_num(self_obj) == 23110) and (walks == 0)) then begin
            walks := 1;
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 23087, 0);
            reg_anim_func(3, 0);
        end
        if ((local_var(11) == 5) and (tile_num(self_obj) == 23087) and (walks == 0)) then begin
            obj_unlock(jordan_door_ptr);
            add_timer_event(jordan_door_ptr, 1, 1);
            walks := 1;
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 24067, 0);
            reg_anim_func(3, 0);
        end
        if ((local_var(11) > 0) and (walks == 0) and ((tile_num(dude_obj) != 21078) and (tile_num(dude_obj) != 20288) and (tile_num(dude_obj) != 23110) and (tile_num(dude_obj) != 23087))) then begin
            walks := 1;
            if (local_var(11) == 1) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                animate_move_obj_to_tile(self_obj, 21078, 0);
                reg_anim_func(3, 0);
            end
            else begin
                if (local_var(11) == 2) then begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    animate_move_obj_to_tile(self_obj, 20288, 0);
                    reg_anim_func(3, 0);
                end
                else begin
                    if (local_var(11) == 3) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        animate_move_obj_to_tile(self_obj, 23110, 0);
                        reg_anim_func(3, 0);
                    end
                    else begin
                        if (local_var(11) == 4) then begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            animate_move_obj_to_tile(self_obj, 23087, 0);
                            reg_anim_func(3, 0);
                        end
                        else begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            animate_move_obj_to_tile(self_obj, 24067, 0);
                            reg_anim_func(3, 0);
                        end
                    end
                end
            end
        end
        if ((local_var(11) == 1) and (tile_num(self_obj) == 21078)) then begin
            set_local_var(11, 2);
            walks := 0;
            cloz := 0;
        end
        if ((local_var(11) == 2) and (tile_num(self_obj) == 20288)) then begin
            set_local_var(11, 3);
            walks := 0;
        end
        if ((local_var(11) == 3) and (tile_num(self_obj) == 23110)) then begin
            set_local_var(11, 4);
            walks := 0;
        end
        if ((local_var(11) == 4) and (tile_num(self_obj) == 23087)) then begin
            set_local_var(11, 5);
            walks := 0;
        end
        if ((local_var(11) == 5) and (tile_num(self_obj) == 24067)) then begin
            set_local_var(11, 0);
            anim(self_obj, 1000, 5);
            set_local_var(12, game_time + (2 * (60 * (60 * 10))));
        end
        if ((tile_distance_objs(self_obj, jordan_door_ptr) > 2) and (map_var(14) > 0) and (cloz == 0)) then begin
            cloz := 1;
            add_timer_event(jordan_door_ptr, 3, 0);
        end
        if ((map_var(14) == 0) and (map_var(6) > 0) and (local_var(11) == 5) and obj_can_see_obj(self_obj, dude_obj)) then begin
            float_msg(self_obj, message_str(1308, 153), 2);
            set_global_var(909, 1);
            set_local_var(5, 1);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(1308, 100));
    end
    else begin
        display_msg(message_str(1308, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(1308, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        call node998();
    end
end

procedure map_enter_p_proc
begin
    jordan_ptr := self_obj;
    if ((get_critter_stat(dude_obj, 4) < 4) and (cur_map_index == 126) and (global_var(712) < 6)) then begin
        destroy_object(self_obj);
    end
    if ((cur_map_index == 3) and ((global_var(698) >= 10) or (global_var(710) >= 7))) then begin
        destroy_object(self_obj);
    end
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
        critter_injure(self_obj, 4);
    end
    if ((cur_map_index == 4) and (get_critter_stat(dude_obj, 4) > 3)) then begin
        destroy_object(self_obj);
    end
end

procedure map_update_p_proc
begin
    jordan_ptr := self_obj;
    walks := 0;
    if ((cur_map_index == 126) and (get_critter_stat(dude_obj, 4) > 3)) then begin
        if ((map_var(0) > 0) and (local_var(12) == 0)) then begin
            set_local_var(12, game_time + (2 * (60 * (60 * 10))));
        end
    end
end

procedure talk_p_proc
begin
    game_ui_enable;
    if (get_critter_stat(dude_obj, 4) > 3) then begin
        if (local_var(11) == 0) then begin
            if (tile_num(self_obj) == 25697) then begin
                if (global_var(697) == 1) then begin
                    float_msg(self_obj, message_str(1308, 240), 8);
                end
                else begin
                    if (global_var(697) == 5) then begin
                        if (map_var(3) == 1) then begin
                            float_msg(self_obj, message_str(1308, 230), 8);
                        end
                        else begin
                            if (map_var(3) == 2) then begin
                                if (global_var(698) < 3) then begin
                                    start_gdialog(1308, self_obj, 4, -1, -1);
                                    gsay_start;
                                    call node008();
                                    gsay_end;
                                    end_dialogue;
                                end
                                else begin
                                    if (global_var(698) < 8) then begin
                                        if (map_var(8) == 0) then begin
                                            start_gdialog(1308, self_obj, 4, -1, -1);
                                            gsay_start;
                                            call node014();
                                            gsay_end;
                                            end_dialogue;
                                        end
                                        else begin
                                            float_msg(self_obj, message_str(1308, 220), 8);
                                        end
                                    end
                                    else begin
                                        float_msg(self_obj, message_str(1308, 220), 8);
                                    end
                                end
                            end
                        end
                    end
                    else begin
                        if (global_var(698) < 3) then begin
                            if (map_var(26) > 0) then begin
                                float_msg(self_obj, message_str(1308, 220), 8);
                            end
                            else begin
                                start_gdialog(1308, self_obj, 4, -1, -1);
                                gsay_start;
                                call node044();
                                gsay_end;
                                end_dialogue;
                            end
                        end
                        else begin
                            float_msg(self_obj, message_str(1308, 250) + obj_name(dude_obj) + message_str(1308, 251), 0);
                        end
                    end
                end
            end
            else begin
                if (global_var(697) == 1) then begin
                    float_msg(self_obj, message_str(1308, 200), 2);
                end
                else begin
                    if (global_var(697) == 3) then begin
                        start_gdialog(1308, self_obj, 4, -1, -1);
                        gsay_start;
                        call node042();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        start_gdialog(1308, self_obj, 4, -1, -1);
                        gsay_start;
                        if (local_var(9) == 0) then begin
                            call node001();
                        end
                        else begin
                            call node002();
                        end
                        gsay_end;
                        end_dialogue;
                    end
                end
            end
        end
        else begin
            float_msg(self_obj, message_str(1308, random(201, 207)), 8);
        end
    end
    else begin
        if (cur_map_index == 4) then begin
            start_gdialog(1308, self_obj, 4, -1, -1);
            gsay_start;
            call node048();
            gsay_end;
            end_dialogue;
        end
        else begin
            float_msg(self_obj, message_str(1308, 260), 8);
        end
    end
    talker := 0;
end

procedure plateau_show
begin
    float_msg(self_obj, " ", 8);
    float_msg(matatu_ptr, " ", 8);
    float_msg(self_obj, 0, 0);
    float_msg(matatu_ptr, 0, 0);
    if (mshow == 0) then begin
        mshow := mshow + 1;
        float_msg(self_obj, message_str(1308, 160), 9);
        add_timer_event(self_obj, game_ticks(4), 3);
    end
    else begin
        if (mshow == 1) then begin
            mshow := mshow + 1;
            float_msg(matatu_ptr, message_str(1308, 161), 2);
            add_timer_event(self_obj, game_ticks(6), 3);
        end
        else begin
            if (mshow == 2) then begin
                mshow := mshow + 1;
                float_msg(self_obj, message_str(1308, 162), 9);
                add_timer_event(self_obj, game_ticks(5), 3);
            end
            else begin
                if (mshow == 3) then begin
                    mshow := mshow + 1;
                    float_msg(matatu_ptr, message_str(1308, 163), 2);
                    add_timer_event(self_obj, game_ticks(8), 3);
                end
                else begin
                    if (mshow == 4) then begin
                        mshow := mshow + 1;
                        float_msg(self_obj, message_str(1308, 164), 9);
                        add_timer_event(self_obj, game_ticks(3), 3);
                    end
                    else begin
                        if (mshow == 5) then begin
                            mshow := mshow + 1;
                            float_msg(matatu_ptr, message_str(1308, 165), 12);
                            add_timer_event(self_obj, game_ticks(3), 3);
                        end
                        else begin
                            if (mshow == 6) then begin
                                mshow := mshow + 1;
                                float_msg(matatu_ptr, message_str(1308, 166), 2);
                                add_timer_event(self_obj, game_ticks(5), 3);
                            end
                            else begin
                                if (mshow == 7) then begin
                                    mshow := mshow + 1;
                                    float_msg(self_obj, message_str(1308, 167), 9);
                                    add_timer_event(self_obj, game_ticks(3), 3);
                                end
                                else begin
                                    if (mshow == 8) then begin
                                        mshow := mshow + 1;
                                        float_msg(matatu_ptr, message_str(1308, 168), 2);
                                        add_timer_event(self_obj, game_ticks(4), 3);
                                    end
                                    else begin
                                        if (mshow == 9) then begin
                                            mshow := mshow + 1;
                                            reg_anim_func(2, matatu_ptr);
                                            reg_anim_func(1, 1);
                                            animate_move_obj_to_tile(matatu_ptr, 12428, 0);
                                            reg_anim_func(3, 0);
                                            add_timer_event(self_obj, 12, 3);
                                        end
                                        else begin
                                            if (mshow == 10) then begin
                                                mshow := mshow + 1;
                                                reg_anim_func(2, vrax_ptr);
                                                reg_anim_func(1, 1);
                                                animate_move_obj_to_tile(vrax_ptr, 12428, 0);
                                                reg_anim_func(3, 0);
                                                add_timer_event(self_obj, game_ticks(6), 3);
                                            end
                                            else begin
                                                if (mshow == 11) then begin
                                                    mshow := mshow + 1;
                                                    destroy_object(matatu_ptr);
                                                    destroy_object(vrax_ptr);
                                                    rot := rotation_to_tile(tile_num(self_obj), tile_num(dude_obj));
                                                    anim(self_obj, 1000, rot);
                                                    add_timer_event(self_obj, 5, 3);
                                                end
                                                else begin
                                                    if (mshow == 12) then begin
                                                        mshow := mshow + 1;
                                                        start_gdialog(1308, self_obj, 4, -1, -1);
                                                        gsay_start;
                                                        call node048();
                                                        gsay_end;
                                                        end_dialogue;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure cass_show
begin
    float_msg(self_obj, " ", 8);
    float_msg(cassidy_ptr, " ", 8);
    float_msg(self_obj, 0, 0);
    float_msg(cassidy_ptr, 0, 0);
    if (cshow == 0) then begin
        cshow := cshow + 1;
        rot := rotation_to_tile(tile_num(self_obj), tile_num(cassidy_ptr));
        anim(self_obj, 1000, rot);
        add_timer_event(self_obj, 5, 4);
    end
    else begin
        if (cshow == 1) then begin
            cshow := cshow + 1;
            game_ui_disable;
            float_msg(cassidy_ptr, message_str(1308, 170), 3);
            add_timer_event(self_obj, game_ticks(6), 4);
        end
        else begin
            if (cshow == 2) then begin
                cshow := cshow + 1;
                float_msg(self_obj, message_str(1308, 171), 9);
                add_timer_event(self_obj, game_ticks(5), 4);
            end
            else begin
                if (cshow == 3) then begin
                    cshow := cshow + 1;
                    float_msg(cassidy_ptr, message_str(1308, 172), 3);
                    add_timer_event(self_obj, game_ticks(5), 4);
                end
                else begin
                    if (cshow == 4) then begin
                        cshow := cshow + 1;
                        float_msg(self_obj, message_str(1308, 173), 9);
                        add_timer_event(self_obj, game_ticks(6), 4);
                    end
                    else begin
                        if (cshow == 5) then begin
                            cshow := cshow + 1;
                            float_msg(cassidy_ptr, message_str(1308, 174), 3);
                            add_timer_event(self_obj, game_ticks(1), 4);
                        end
                        else begin
                            if (cshow == 6) then begin
                                cshow := cshow + 1;
                                float_msg(self_obj, message_str(1308, 175), 9);
                                add_timer_event(self_obj, game_ticks(4), 4);
                            end
                            else begin
                                if (cshow == 7) then begin
                                    cshow := cshow + 1;
                                    float_msg(cassidy_ptr, message_str(1308, 176), 3);
                                    add_timer_event(self_obj, game_ticks(6), 4);
                                end
                                else begin
                                    if (cshow == 8) then begin
                                        cshow := cshow + 1;
                                        float_msg(self_obj, message_str(1308, 177), 9);
                                        add_timer_event(self_obj, game_ticks(1), 4);
                                    end
                                    else begin
                                        if (cshow == 9) then begin
                                            set_global_var(698, 8);
                                            game_ui_enable;
                                            load_map(3, 0);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure node001
begin
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
    gsay_reply(1308, 270);
    if (global_var(698) == 2) then begin
        giq_option(4, 1308, 271, node005, 51);
    end
    if ((global_var(696) == 6) and (global_var(697) == 0)) then begin
        giq_option(4, 1308, 275, node025, 51);
    end
    if (local_var(14) == 0) then begin
        giq_option(4, 1308, 272, node003, 51);
    end
    if (local_var(14) > 0) then begin
        giq_option(4, 1308, 273, node003, 51);
    end
    giq_option(4, 1308, 274, node999, 50);
end

procedure node002
begin
    gsay_reply(1308, 280);
    if (global_var(698) == 2) then begin
        giq_option(4, 1308, 271, node005, 51);
    end
    if ((global_var(696) == 6) and (global_var(697) == 0)) then begin
        giq_option(4, 1308, 274, node025, 51);
    end
    giq_option(4, 1308, 281, node997, 49);
    giq_option(4, 1308, 282, node999, 50);
end

procedure node003
begin
    if (local_var(14) == 0) then begin
        gsay_reply(1308, 290);
    end
    else begin
        gsay_reply(1308, 291);
    end
    if ((global_var(696) == 6) and (global_var(697) == 0)) then begin
        giq_option(4, 1308, 275, node025, 51);
    end
    if (local_var(14) == 0) then begin
        set_local_var(14, 1);
        giq_option(4, 1308, 292, node004, 51);
    end
    else begin
        if (local_var(14) > 0) then begin
            giq_option(4, 1308, 293, node004, 51);
        end
    end
    giq_option(4, 1308, 294, node999, 50);
end

procedure node004
begin
    gsay_reply(1308, 300);
    giq_option(4, 1308, 301, node999, 50);
    giq_option(4, 1308, 302, node997, 51);
end

procedure node005
begin
    gsay_reply(1308, 310);
    giq_option(4, 1308, 311, node006, 50);
end

procedure node006
begin
    gsay_reply(1308, 320);
    giq_option(4, 1308, 321, node007, 50);
    if (get_critter_stat(dude_obj, 1) >= 8) then begin
        giq_option(4, 1308, 322, node020, 51);
    end
end

procedure node007
begin
    set_map_var(3, 2);
    gsay_reply(1308, 330);
    giq_option(4, 1308, 331, node996, 50);
end

procedure node008
begin
    set_global_var(698, 3);
    gsay_reply(1308, 340);
    giq_option(4, 1308, 341, node009, 50);
end

procedure node009
begin
    gsay_reply(1308, 350);
    giq_option(4, 1308, 351, node010, 50);
end

procedure node010
begin
    gsay_reply(1308, 360);
    giq_option(5, 1308, 361, node011, 50);
    giq_option(4, 1308, 362, node012, 49);
end

procedure node011
begin
    gsay_reply(1308, 370);
    giq_option(4, 1308, 371, node012, 50);
end

procedure node012
begin
    gsay_reply(1308, 380);
    giq_option(4, 1308, 381, node013, 50);
end

procedure node013
begin
    gsay_reply(1308, message_str(1308, 390) + obj_name(dude_obj) + message_str(1308, 391));
    giq_option(4, 1308, 392, node999, 50);
end

procedure node014
begin
    gsay_reply(1308, message_str(1308, 400) + obj_name(dude_obj) + message_str(1308, 401));
    if ((obj_is_carrying_obj_pid(dude_obj, 544) > 0) and (obj_is_carrying_obj_pid(dude_obj, 545) > 0)) then begin
        giq_option(4, 1308, 404, node019, 49);
    end
    giq_option(4, 1308, 403, node015, 51);
    giq_option(4, 1308, 402, node999, 50);
end

procedure node015
begin
    gsay_reply(1308, 410);
    giq_option(4, 1308, 411, node016, 50);
    giq_option(5, 1308, 412, node017, 50);
    giq_option(4, 1308, 413, node018, 50);
    giq_option(4, 1308, 414, node999, 50);
end

procedure node016
begin
    gsay_reply(1308, 420);
    giq_option(4, 1308, 422, node015, 50);
    giq_option(4, 1308, 421, node999, 50);
end

procedure node017
begin
    gsay_reply(1308, 430);
    giq_option(4, 1308, 432, node015, 50);
    giq_option(4, 1308, 431, node999, 50);
end

procedure node018
begin
    gsay_reply(1308, 440);
    giq_option(4, 1308, 442, node015, 50);
    giq_option(4, 1308, 441, node999, 50);
end

procedure node019
begin
    set_map_var(8, 1);
    gsay_reply(1308, 450);
    giq_option(4, 1308, 451, node999, 50);
end

procedure node020
begin
    set_map_var(3, 1);
    gsay_reply(1308, 460);
    giq_option(4, 1308, 461, node021, 51);
end

procedure node021
begin
    gsay_reply(1308, 470);
    giq_option(4, 1308, 471, node022, 50);
end

procedure node022
begin
    gsay_reply(1308, 480);
    giq_option(4, 1308, 481, node023, 50);
end

procedure node023
begin
    gsay_reply(1308, 490);
    giq_option(4, 1308, 491, node024, 50);
end

procedure node024
begin
    gsay_reply(1308, 500);
    giq_option(4, 1308, 501, node996, 50);
end

procedure node025
begin
    gsay_reply(1308, 510);
    giq_option(4, 1308, 511, node030, 50);
    if (local_var(10) == 0) then begin
        giq_option(4, 1308, 512, node026, 51);
    end
    if (local_var(10) > 0) then begin
        giq_option(4, 1308, 512, node029, 51);
    end
end

procedure node026
begin
    set_local_var(10, 1);
    gsay_reply(1308, 520);
    giq_option(4, 1308, 521, node026a, 51);
    giq_option(4, 1308, 522, node999, 50);
end

procedure node026a
begin
    if (is_success(do_check(dude_obj, 3, -1 - local_var(9)))) then begin
        call node027();
    end
    else begin
        call node028();
    end
end

procedure node027
begin
    gsay_reply(1308, 530);
    giq_option(4, 1308, 531, node031, 50);
end

procedure node028
begin
    set_global_var(697, 1);
    gsay_reply(1308, 540);
    giq_option(4, 1308, 541, node997, 50);
end

procedure node029
begin
    gsay_reply(1308, 550);
    giq_option(4, 1308, 551, node999, 50);
end

procedure node030
begin
    gsay_reply(1308, 560);
    giq_option(4, 1308, 531, node031, 50);
end

procedure node031
begin
    gsay_reply(1308, 570);
    giq_option(4, 1308, 571, node032, 50);
end

procedure node032
begin
    gsay_reply(1308, 580);
    if (get_critter_stat(dude_obj, 1) > 6) then begin
        giq_option(4, 1308, 582, node033, 51);
    end
    if ((get_critter_stat(dude_obj, 3) > 6) or (has_skill(dude_obj, 14) >= 50)) then begin
        giq_option(4, 1308, 583, node034, 51);
    end
    giq_option(4, 1308, 581, node035, 51);
end

procedure node033
begin
    gsay_reply(1308, 590);
    giq_option(4, 1308, 591, node038, 50);
end

procedure node034
begin
    gsay_reply(1308, 600);
    giq_option(4, 1308, 601, node037, 50);
end

procedure node035
begin
    set_global_var(697, 1);
    gsay_reply(1308, 610);
    giq_option(4, 1308, 611, node999, 51);
    giq_option(4, 1308, 612, node036, 51);
    if ((get_critter_stat(dude_obj, 1) >= 7) or (get_critter_stat(dude_obj, 3) >= 7) or (has_skill(dude_obj, 14) >= 35)) then begin
        giq_option(4, 1308, 613, node037, 51);
    end
end

procedure node036
begin
    gsay_reply(1308, 620);
    giq_option(4, 1308, 621, node999, 50);
end

procedure node037
begin
    gsay_reply(1308, 630);
    giq_option(4, 1308, 631, node038, 50);
    giq_option(4, 1308, 632, node039, 49);
end

procedure node038
begin
    item := create_object_sid(534, 0, 0, -1);
    add_obj_to_inven(dude_obj, item);
    removed_qty := obj_is_carrying_obj_pid(jordan_desk_ptr, 534);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(jordan_desk_ptr, 534);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(jordan_desk_ptr, 534);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(jordan_desk_ptr, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(jordan_desk_ptr, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(jordan_desk_ptr, restock_obj);
                    add_obj_to_inven(jordan_desk_ptr, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(jordan_desk_ptr, 2) == restock_obj) or (critter_inven_obj(jordan_desk_ptr, 1) == restock_obj)) then begin
                    metarule(43, jordan_desk_ptr);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(jordan_desk_ptr, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    gsay_reply(1308, 640);
    giq_option(4, 1308, 641, node993, 51);
    giq_option(4, 1308, 642, node039, 50);
end

procedure node039
begin
    if (obj_is_carrying_obj_pid(dude_obj, 534) == 0) then begin
        item := create_object_sid(534, 0, 0, -1);
        add_obj_to_inven(dude_obj, item);
        removed_qty := obj_is_carrying_obj_pid(jordan_desk_ptr, 534);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(jordan_desk_ptr, 534);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(jordan_desk_ptr, 534);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(jordan_desk_ptr, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(jordan_desk_ptr, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(jordan_desk_ptr, restock_obj);
                        add_obj_to_inven(jordan_desk_ptr, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(jordan_desk_ptr, 2) == restock_obj) or (critter_inven_obj(jordan_desk_ptr, 1) == restock_obj)) then begin
                        metarule(43, jordan_desk_ptr);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(jordan_desk_ptr, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        gsay_reply(1308, 650);
    end
    else begin
        gsay_reply(1308, 651);
    end
    giq_option(4, 1308, 652, node040, 50);
end

procedure node040
begin
    gsay_reply(1308, 660);
    giq_option(4, 1308, 661, node993, 51);
    giq_option(4, 1308, 662, node041, 49);
end

procedure node041
begin
    set_global_var(697, 3);
    gsay_reply(1308, message_str(1308, 670) + obj_name(dude_obj) + message_str(1308, 671));
    giq_option(4, 1308, 672, node999, 50);
end

procedure node042
begin
    gsay_reply(1308, message_str(1308, 680) + obj_name(dude_obj) + message_str(1308, 681));
    if (global_var(698) == 1) then begin
        giq_option(4, 1308, 683, node043, 50);
    end
    giq_option(4, 1308, 682, node999, 50);
end

procedure node043
begin
    set_map_var(5, 1);
    gsay_reply(1308, message_str(1308, 690) + obj_name(dude_obj) + message_str(1308, 691));
    giq_option(4, 1308, 692, node995, 50);
    giq_option(4, 1308, 693, node995, 49);
end

procedure node044
begin
    set_global_var(698, 3);
    set_map_var(5, 2);
    gsay_reply(1308, 700);
    giq_option(4, 1308, 701, node045, 50);
end

procedure node045
begin
    gsay_reply(1308, 710);
    giq_option(4, 1308, 711, node046, 50);
end

procedure node046
begin
    gsay_reply(1308, message_str(1308, 720) + obj_name(dude_obj) + message_str(1308, 721) + obj_name(dude_obj) + message_str(1308, 722));
    giq_option(4, 1308, 723, node047, 51);
end

procedure node047
begin
    gsay_reply(1308, message_str(1308, 730) + obj_name(dude_obj) + message_str(1308, 731));
    giq_option(4, 1308, 732, node999, 51);
    giq_option(4, 1308, 733, node999, 50);
end

procedure node048
begin
    gsay_reply(1308, 740);
    giq_option(-3, 1308, 741, node049, 50);
    giq_option(-3, 1308, 742, node049, 50);
    giq_option(-3, 1308, 743, node050, 50);
end

procedure node049
begin
    gsay_reply(1308, 750);
    giq_option(-3, 1308, 751, node050, 50);
end

procedure node050
begin
    gsay_reply(1308, 760);
    giq_option(-3, 1308, 761, node051, 50);
end

procedure node051
begin
    set_global_var(710, 4);
    gsay_reply(1308, 770);
    giq_option(-3, 1308, 771, node052, 49);
    giq_option(-3, 1308, 772, node055, 50);
end

procedure node052
begin
    set_global_var(0, global_var(0) + 1);
    debug_msg("Player gains " + 1 + " Karma Points.");
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    gsay_reply(1308, 780);
    giq_option(-3, 1308, 781, node053, 50);
    giq_option(-3, 1308, 782, node054, 49);
end

procedure node053
begin
    gsay_reply(1308, 790);
    giq_option(-3, 1308, 791, node994, 50);
end

procedure node054
begin
    gsay_reply(1308, 800);
    giq_option(-3, 1308, 801, node994, 50);
end

procedure node055
begin
    set_global_var(0, global_var(0) - 1);
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    gsay_reply(1308, 810);
    giq_option(-3, 1308, 811, node994, 50);
end

procedure node056
begin
    gsay_reply(1308, 820);
end

procedure node057
begin
end

procedure node058
begin
end

procedure node059
begin
end

procedure node060
begin
end

procedure node993
begin
    gfade_out(10);
    game_ui_disable;
    set_map_var(26, 1);
    if (global_var(697) < 2) then begin
        set_global_var(697, 2);
    end
    move_to(self_obj, 25697, 0);
    anim(self_obj, 1000, 2);
    move_to(dude_obj, 26300, 0);
    anim(dude_obj, 1000, 0);
    set_map_var(7, 1);
    set_map_var(14, 1);
    if (map_var(6) > 0) then begin
        set_map_var(6, 0);
    end
    gfade_in(10);
end

procedure node994
begin
    set_global_var(710, 5);
    create_object_sid(16777701, 10261, 0, 1304);
    move_to(dude_obj, tile_num_in_direction(tile_num(self_obj), 3, 3), elevation(self_obj));
    anim(dude_obj, 1000, 5);
    add_timer_event(self_obj, game_ticks(2), 4);
end

procedure node995
begin
    gfade_out(10);
    game_ui_disable;
    if (global_var(697) < 2) then begin
        set_global_var(697, 2);
    end
    move_to(self_obj, 25697, 0);
    anim(self_obj, 1000, 2);
    move_to(dude_obj, 26300, 0);
    anim(dude_obj, 1000, 0);
    set_map_var(7, 1);
    set_map_var(14, 1);
    if (map_var(6) > 0) then begin
        set_map_var(6, 0);
    end
    gfade_in(10);
end

procedure node996
begin
    gfade_out(10);
    move_to(self_obj, 25697, 0);
    set_map_var(14, 1);
    anim(self_obj, 1000, 2);
    gfade_in(10);
end

procedure node997
begin
    if (local_var(9) == 0) then begin
        set_local_var(9, 1);
    end
    else begin
        set_local_var(9, 0);
    end
end

procedure node998
begin
    set_local_var(5, 2);
end

procedure node999
begin
end

