variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure combat_p_proc;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure plateau_show;
procedure cass_show;
procedure node001;
procedure node002;
procedure node003;
procedure node004;
procedure node005;
procedure node006;
procedure node007;
procedure node008;
procedure node009;
procedure node010;
procedure node011;
procedure node012;
procedure node013;
procedure node014;
procedure node015;
procedure node016;
procedure node017;
procedure node018;
procedure node019;
procedure node020;
procedure node021;
procedure node022;
procedure node023;
procedure node024;
procedure node025;
procedure node026;
procedure node026a;
procedure node027;
procedure node028;
procedure node029;
procedure node030;
procedure node031;
procedure node032;
procedure node033;
procedure node034;
procedure node035;
procedure node036;
procedure node037;
procedure node038;
procedure node039;
procedure node040;
procedure node041;
procedure node042;
procedure node043;
procedure node044;
procedure node045;
procedure node046;
procedure node047;
procedure node048;
procedure node049;
procedure node050;
procedure node051;
procedure node052;
procedure node053;
procedure node054;
procedure node055;
procedure node056;
procedure node057;
procedure node058;
procedure node059;
procedure node060;
procedure node993;
procedure node994;
procedure node995;
procedure node996;
procedure node997;
procedure node998;
procedure node999;

import variable jordan_ptr;
import variable jordan_desk_ptr;
import variable jordan_door_ptr;
import variable matatu_ptr;
import variable cassidy_ptr;
import variable vrax_ptr;

variable talker;
variable item;
variable warning;
variable walks;
variable cloz;
variable mshow;
variable cshow;
variable rot;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777728) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777728)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777701) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777701)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    jordan_ptr := self_obj;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        dialogue_system_enter;
    end
    else begin
        if (fixed_param == 1) then begin
            if (warning == 0) then begin
                float_msg(self_obj, mstr(151), FLOAT_MSG_RED);
            end
            else begin
                if (warning == 1) then begin
                    float_msg(self_obj, mstr(150), FLOAT_MSG_RED);
                end
                else begin
                    call node998();
                end
            end
        end
        else begin
            if (fixed_param == 2) then begin
                float_msg(self_obj, mstr(150), FLOAT_MSG_RED);
                set_local_var(5, 1);
                attack_setup(self_obj, dude_obj);
            end
            else begin
                if (fixed_param == 3) then begin
                    call plateau_show();
                end
                else begin
                    if (fixed_param == 4) then begin
                        call cass_show();
                    end
                    else begin
                        if (fixed_param == 5) then begin
                            if (tile_num(self_obj) != 24067) then begin
                                move_to(self_obj, 24067, 0);
                                anim(self_obj, 1000, 5);
                                if (map_var(14) > 0) then begin
                                    set_map_var(14, 0);
                                end
                                set_local_var(11, 0);
                                set_local_var(12, game_time + (2 * (24 * (60 * (60 * 10)))));
                                set_local_var(13, game_time + (3 * (24 * (60 * (60 * 10)))));
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (local_var(8) == 0) then begin
        set_local_var(8, local_var(8) + 1);
        float_msg(self_obj, mstr(150), FLOAT_MSG_RED);
    end
    else begin
        call node998();
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) - 100);
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - -15);
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure combat_p_proc
begin
end

procedure critter_p_proc
begin
    if ((CUR_MAP_ARCAVES) and (global_var(GVAR_ELKO_SHITSTORM) == 6)) then begin
        destroy_object(self_obj);
    end
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if ((global_var(GVAR_ELKO_ARROYAN_SICKNESS) == 2) and (map_var(3) == 2) and (talker == 0) and (map_var(7) > 0) and (tile_num(self_obj) == 25697)) then begin
        talker := 1;
        add_timer_event(self_obj, 8, 0);
    end
    if ((global_var(GVAR_ELKO_ARROYAN_SICKNESS) == 1) and (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 3) and (talker == 0) and (map_var(7) > 0) and (tile_num(self_obj) == 25697)) then begin
        talker := 1;
        add_timer_event(self_obj, 8, 0);
    end
    if ((map_var(26) == 0) and (global_var(GVAR_ELKO_ARROYAN_SICKNESS) == 0) and (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 2) and (talker == 0) and (map_var(7) > 0) and (tile_num(self_obj) == 25697)) then begin
        talker := 1;
        add_timer_event(self_obj, 8, 0);
    end
    if ((obj_is_carrying_obj_pid(self_obj, 536) > 0) and (obj_is_carrying_obj_pid(dude_obj, 536) > 0)) then begin
        removed_qty := obj_is_carrying_obj_pid(self_obj, 536);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(self_obj, 536);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, 536);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(self_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(self_obj, restock_obj);
                        add_obj_to_inven(self_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                        inven_unwield(self_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
    end
    if ((CUR_MAP_ARVILLAG) and (obj_on_screen(self_obj) == 1) and (talker == 0) and (tile_distance_objs(self_obj, dude_obj) < 25)) then begin
        talker := 1;
        reg_anim_func(2, dude_obj);
        game_ui_disable;
        add_timer_event(self_obj, 5, 3);
    end
    if ((CUR_MAP_ARTEMPLE) and (dude_iq > 3)) then begin
        if ((local_var(12) != 0) and (local_var(12) < game_time) and (local_var(11) == 0) and (tile_num(self_obj) == 24067)) then begin
            set_local_var(11, 1);
            walks := 1;
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 21078, 0);
            reg_anim_func(3, 0);
        end
        if ((local_var(11) == 2) and (tile_num(self_obj) == 21078) and (walks == 0)) then begin
            walks := 1;
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 20288, 0);
            reg_anim_func(3, 0);
        end
        if ((local_var(11) == 3) and (tile_num(self_obj) == 20288) and (walks == 0)) then begin
            walks := 1;
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 23110, 0);
            reg_anim_func(3, 0);
        end
        if ((local_var(11) == 4) and (tile_num(self_obj) == 23110) and (walks == 0)) then begin
            walks := 1;
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 23087, 0);
            reg_anim_func(3, 0);
        end
        if ((local_var(11) == 5) and (tile_num(self_obj) == 23087) and (walks == 0)) then begin
            obj_unlock(jordan_door_ptr);
            add_timer_event(jordan_door_ptr, 1, 1);
            walks := 1;
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 24067, 0);
            reg_anim_func(3, 0);
        end
        if ((local_var(11) > 0) and (walks == 0) and ((dude_tile != 21078) and (dude_tile != 20288) and (dude_tile != 23110) and (dude_tile != 23087))) then begin
            walks := 1;
            if (local_var(11) == 1) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                animate_move_obj_to_tile(self_obj, 21078, 0);
                reg_anim_func(3, 0);
            end
            else begin
                if (local_var(11) == 2) then begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    animate_move_obj_to_tile(self_obj, 20288, 0);
                    reg_anim_func(3, 0);
                end
                else begin
                    if (local_var(11) == 3) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        animate_move_obj_to_tile(self_obj, 23110, 0);
                        reg_anim_func(3, 0);
                    end
                    else begin
                        if (local_var(11) == 4) then begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            animate_move_obj_to_tile(self_obj, 23087, 0);
                            reg_anim_func(3, 0);
                        end
                        else begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            animate_move_obj_to_tile(self_obj, 24067, 0);
                            reg_anim_func(3, 0);
                        end
                    end
                end
            end
        end
        if ((local_var(11) == 1) and (tile_num(self_obj) == 21078)) then begin
            set_local_var(11, 2);
            walks := 0;
            cloz := 0;
        end
        if ((local_var(11) == 2) and (tile_num(self_obj) == 20288)) then begin
            set_local_var(11, 3);
            walks := 0;
        end
        if ((local_var(11) == 3) and (tile_num(self_obj) == 23110)) then begin
            set_local_var(11, 4);
            walks := 0;
        end
        if ((local_var(11) == 4) and (tile_num(self_obj) == 23087)) then begin
            set_local_var(11, 5);
            walks := 0;
        end
        if ((local_var(11) == 5) and (tile_num(self_obj) == 24067)) then begin
            set_local_var(11, 0);
            anim(self_obj, 1000, 5);
            set_local_var(12, game_time + (2 * (60 * (60 * 10))));
        end
        if ((tile_distance_objs(self_obj, jordan_door_ptr) > 2) and (map_var(14) > 0) and (cloz == 0)) then begin
            cloz := 1;
            add_timer_event(jordan_door_ptr, 3, 0);
        end
        if ((map_var(14) == 0) and (map_var(6) > 0) and (local_var(11) == 5) and obj_can_see_obj(self_obj, dude_obj)) then begin
            float_msg(self_obj, mstr(153), FLOAT_MSG_RED);
            set_global_var(GVAR_ENEMY_ELKO, 1);
            set_local_var(5, 1);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        call node998();
    end
end

procedure map_enter_p_proc
begin
    jordan_ptr := self_obj;
    if ((dude_iq < 4) and (CUR_MAP_ARTEMPLE) and (global_var(GVAR_ELKO_MAIN_QUESTS) < 6)) then begin
        destroy_object(self_obj);
    end
    if ((CUR_MAP_ARCAVES) and ((global_var(GVAR_ELKO_ARROYAN_SICKNESS) >= 10) or (global_var(GVAR_ELKO_SHITSTORM) >= 7))) then begin
        destroy_object(self_obj);
    end
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
        critter_injure(self_obj, 4);
    end
    if ((CUR_MAP_ARVILLAG) and (dude_iq > 3)) then begin
        destroy_object(self_obj);
    end
end

procedure map_update_p_proc
begin
    jordan_ptr := self_obj;
    walks := 0;
    if ((CUR_MAP_ARTEMPLE) and (dude_iq > 3)) then begin
        if ((map_var(0) > 0) and (local_var(12) == 0)) then begin
            set_local_var(12, game_time + (2 * (60 * (60 * 10))));
        end
    end
end

procedure talk_p_proc
begin
    game_ui_enable;
    if (dude_iq > 3) then begin
        if (local_var(11) == 0) then begin
            if (tile_num(self_obj) == 25697) then begin
                if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 1) then begin
                    float_msg(self_obj, mstr(240), FLOAT_MSG_YELLOW);
                end
                else begin
                    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 5) then begin
                        if (map_var(3) == 1) then begin
                            float_msg(self_obj, mstr(230), FLOAT_MSG_YELLOW);
                        end
                        else begin
                            if (map_var(3) == 2) then begin
                                if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) < 3) then begin
                                    start_gdialog(1308, self_obj, 4, -1, -1);
                                    gsay_start;
                                    call node008();
                                    gsay_end;
                                    end_dialogue;
                                end
                                else begin
                                    if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) < 8) then begin
                                        if (map_var(8) == 0) then begin
                                            start_gdialog(1308, self_obj, 4, -1, -1);
                                            gsay_start;
                                            call node014();
                                            gsay_end;
                                            end_dialogue;
                                        end
                                        else begin
                                            float_msg(self_obj, mstr(220), FLOAT_MSG_YELLOW);
                                        end
                                    end
                                    else begin
                                        float_msg(self_obj, mstr(220), FLOAT_MSG_YELLOW);
                                    end
                                end
                            end
                        end
                    end
                    else begin
                        if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) < 3) then begin
                            if (map_var(26) > 0) then begin
                                float_msg(self_obj, mstr(220), FLOAT_MSG_YELLOW);
                            end
                            else begin
                                start_gdialog(1308, self_obj, 4, -1, -1);
                                gsay_start;
                                call node044();
                                gsay_end;
                                end_dialogue;
                            end
                        end
                        else begin
                            float_msg(self_obj, mstr(250) + dude_name + mstr(251), FLOAT_MSG_NORMAL);
                        end
                    end
                end
            end
            else begin
                if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 1) then begin
                    float_msg(self_obj, mstr(200), FLOAT_MSG_RED);
                end
                else begin
                    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 3) then begin
                        start_gdialog(1308, self_obj, 4, -1, -1);
                        gsay_start;
                        call node042();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        start_gdialog(1308, self_obj, 4, -1, -1);
                        gsay_start;
                        if (local_var(9) == 0) then begin
                            call node001();
                        end
                        else begin
                            call node002();
                        end
                        gsay_end;
                        end_dialogue;
                    end
                end
            end
        end
        else begin
            float_msg(self_obj, mstr(random(201, 207)), FLOAT_MSG_YELLOW);
        end
    end
    else begin
        if (CUR_MAP_ARVILLAG) then begin
            start_gdialog(1308, self_obj, 4, -1, -1);
            gsay_start;
            call node048();
            gsay_end;
            end_dialogue;
        end
        else begin
            float_msg(self_obj, mstr(260), FLOAT_MSG_YELLOW);
        end
    end
    talker := 0;
end

procedure plateau_show
begin
    float_msg(self_obj, " ", FLOAT_MSG_YELLOW);
    float_msg(matatu_ptr, " ", FLOAT_MSG_YELLOW);
    float_msg(self_obj, 0, FLOAT_MSG_NORMAL);
    float_msg(matatu_ptr, 0, FLOAT_MSG_NORMAL);
    if (mshow == 0) then begin
        mshow := mshow + 1;
        float_msg(self_obj, mstr(160), FLOAT_MSG_WHITE);
        add_timer_event(self_obj, game_ticks(4), 3);
    end
    else begin
        if (mshow == 1) then begin
            mshow := mshow + 1;
            float_msg(matatu_ptr, mstr(161), FLOAT_MSG_RED);
            add_timer_event(self_obj, game_ticks(6), 3);
        end
        else begin
            if (mshow == 2) then begin
                mshow := mshow + 1;
                float_msg(self_obj, mstr(162), FLOAT_MSG_WHITE);
                add_timer_event(self_obj, game_ticks(5), 3);
            end
            else begin
                if (mshow == 3) then begin
                    mshow := mshow + 1;
                    float_msg(matatu_ptr, mstr(163), FLOAT_MSG_RED);
                    add_timer_event(self_obj, game_ticks(8), 3);
                end
                else begin
                    if (mshow == 4) then begin
                        mshow := mshow + 1;
                        float_msg(self_obj, mstr(164), FLOAT_MSG_WHITE);
                        add_timer_event(self_obj, game_ticks(3), 3);
                    end
                    else begin
                        if (mshow == 5) then begin
                            mshow := mshow + 1;
                            float_msg(matatu_ptr, mstr(165), FLOAT_MSG_LIGHT_GREY);
                            add_timer_event(self_obj, game_ticks(3), 3);
                        end
                        else begin
                            if (mshow == 6) then begin
                                mshow := mshow + 1;
                                float_msg(matatu_ptr, mstr(166), FLOAT_MSG_RED);
                                add_timer_event(self_obj, game_ticks(5), 3);
                            end
                            else begin
                                if (mshow == 7) then begin
                                    mshow := mshow + 1;
                                    float_msg(self_obj, mstr(167), FLOAT_MSG_WHITE);
                                    add_timer_event(self_obj, game_ticks(3), 3);
                                end
                                else begin
                                    if (mshow == 8) then begin
                                        mshow := mshow + 1;
                                        float_msg(matatu_ptr, mstr(168), FLOAT_MSG_RED);
                                        add_timer_event(self_obj, game_ticks(4), 3);
                                    end
                                    else begin
                                        if (mshow == 9) then begin
                                            mshow := mshow + 1;
                                            reg_anim_func(2, matatu_ptr);
                                            reg_anim_func(1, 1);
                                            animate_move_obj_to_tile(matatu_ptr, 12428, 0);
                                            reg_anim_func(3, 0);
                                            add_timer_event(self_obj, 12, 3);
                                        end
                                        else begin
                                            if (mshow == 10) then begin
                                                mshow := mshow + 1;
                                                reg_anim_func(2, vrax_ptr);
                                                reg_anim_func(1, 1);
                                                animate_move_obj_to_tile(vrax_ptr, 12428, 0);
                                                reg_anim_func(3, 0);
                                                add_timer_event(self_obj, game_ticks(6), 3);
                                            end
                                            else begin
                                                if (mshow == 11) then begin
                                                    mshow := mshow + 1;
                                                    destroy_object(matatu_ptr);
                                                    destroy_object(vrax_ptr);
                                                    rot := rotation_to_tile(tile_num(self_obj), dude_tile);
                                                    anim(self_obj, 1000, rot);
                                                    add_timer_event(self_obj, 5, 3);
                                                end
                                                else begin
                                                    if (mshow == 12) then begin
                                                        mshow := mshow + 1;
                                                        start_gdialog(1308, self_obj, 4, -1, -1);
                                                        gsay_start;
                                                        call node048();
                                                        gsay_end;
                                                        end_dialogue;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure cass_show
begin
    float_msg(self_obj, " ", FLOAT_MSG_YELLOW);
    float_msg(cassidy_ptr, " ", FLOAT_MSG_YELLOW);
    float_msg(self_obj, 0, FLOAT_MSG_NORMAL);
    float_msg(cassidy_ptr, 0, FLOAT_MSG_NORMAL);
    if (cshow == 0) then begin
        cshow := cshow + 1;
        rot := rotation_to_tile(tile_num(self_obj), tile_num(cassidy_ptr));
        anim(self_obj, 1000, rot);
        add_timer_event(self_obj, 5, 4);
    end
    else begin
        if (cshow == 1) then begin
            cshow := cshow + 1;
            game_ui_disable;
            float_msg(cassidy_ptr, mstr(170), FLOAT_MSG_GREEN);
            add_timer_event(self_obj, game_ticks(6), 4);
        end
        else begin
            if (cshow == 2) then begin
                cshow := cshow + 1;
                float_msg(self_obj, mstr(171), FLOAT_MSG_WHITE);
                add_timer_event(self_obj, game_ticks(5), 4);
            end
            else begin
                if (cshow == 3) then begin
                    cshow := cshow + 1;
                    float_msg(cassidy_ptr, mstr(172), FLOAT_MSG_GREEN);
                    add_timer_event(self_obj, game_ticks(5), 4);
                end
                else begin
                    if (cshow == 4) then begin
                        cshow := cshow + 1;
                        float_msg(self_obj, mstr(173), FLOAT_MSG_WHITE);
                        add_timer_event(self_obj, game_ticks(6), 4);
                    end
                    else begin
                        if (cshow == 5) then begin
                            cshow := cshow + 1;
                            float_msg(cassidy_ptr, mstr(174), FLOAT_MSG_GREEN);
                            add_timer_event(self_obj, game_ticks(1), 4);
                        end
                        else begin
                            if (cshow == 6) then begin
                                cshow := cshow + 1;
                                float_msg(self_obj, mstr(175), FLOAT_MSG_WHITE);
                                add_timer_event(self_obj, game_ticks(4), 4);
                            end
                            else begin
                                if (cshow == 7) then begin
                                    cshow := cshow + 1;
                                    float_msg(cassidy_ptr, mstr(176), FLOAT_MSG_GREEN);
                                    add_timer_event(self_obj, game_ticks(6), 4);
                                end
                                else begin
                                    if (cshow == 8) then begin
                                        cshow := cshow + 1;
                                        float_msg(self_obj, mstr(177), FLOAT_MSG_WHITE);
                                        add_timer_event(self_obj, game_ticks(1), 4);
                                    end
                                    else begin
                                        if (cshow == 9) then begin
                                            set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 8);
                                            game_ui_enable;
                                            load_map(3, 0);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure node001
begin
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
    Reply(270);
    if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) == 2) then begin
        giq_option(4, NAME, 271, node005, BAD_REACTION);
    end
    if ((global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 6) and (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 0)) then begin
        giq_option(4, NAME, 275, node025, BAD_REACTION);
    end
    if (local_var(14) == 0) then begin
        giq_option(4, NAME, 272, node003, BAD_REACTION);
    end
    if (local_var(14) > 0) then begin
        giq_option(4, NAME, 273, node003, BAD_REACTION);
    end
    giq_option(4, NAME, 274, node999, NEUTRAL_REACTION);
end

procedure node002
begin
    Reply(280);
    if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) == 2) then begin
        giq_option(4, NAME, 271, node005, BAD_REACTION);
    end
    if ((global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 6) and (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 0)) then begin
        giq_option(4, NAME, 274, node025, BAD_REACTION);
    end
    giq_option(4, NAME, 281, node997, GOOD_REACTION);
    giq_option(4, NAME, 282, node999, NEUTRAL_REACTION);
end

procedure node003
begin
    if (local_var(14) == 0) then begin
        Reply(290);
    end
    else begin
        Reply(291);
    end
    if ((global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 6) and (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 0)) then begin
        giq_option(4, NAME, 275, node025, BAD_REACTION);
    end
    if (local_var(14) == 0) then begin
        set_local_var(14, 1);
        giq_option(4, NAME, 292, node004, BAD_REACTION);
    end
    else begin
        if (local_var(14) > 0) then begin
            giq_option(4, NAME, 293, node004, BAD_REACTION);
        end
    end
    giq_option(4, NAME, 294, node999, NEUTRAL_REACTION);
end

procedure node004
begin
    Reply(300);
    giq_option(4, NAME, 301, node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 302, node997, BAD_REACTION);
end

procedure node005
begin
    Reply(310);
    giq_option(4, NAME, 311, node006, NEUTRAL_REACTION);
end

procedure node006
begin
    Reply(320);
    giq_option(4, NAME, 321, node007, NEUTRAL_REACTION);
    if (dude_perception >= 8) then begin
        giq_option(4, NAME, 322, node020, BAD_REACTION);
    end
end

procedure node007
begin
    set_map_var(3, 2);
    Reply(330);
    giq_option(4, NAME, 331, node996, NEUTRAL_REACTION);
end

procedure node008
begin
    set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 3);
    Reply(340);
    giq_option(4, NAME, 341, node009, NEUTRAL_REACTION);
end

procedure node009
begin
    Reply(350);
    giq_option(4, NAME, 351, node010, NEUTRAL_REACTION);
end

procedure node010
begin
    Reply(360);
    giq_option(5, NAME, 361, node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 362, node012, GOOD_REACTION);
end

procedure node011
begin
    Reply(370);
    giq_option(4, NAME, 371, node012, NEUTRAL_REACTION);
end

procedure node012
begin
    Reply(380);
    giq_option(4, NAME, 381, node013, NEUTRAL_REACTION);
end

procedure node013
begin
    Reply(mstr(390) + dude_name + mstr(391));
    giq_option(4, NAME, 392, node999, NEUTRAL_REACTION);
end

procedure node014
begin
    Reply(mstr(400) + dude_name + mstr(401));
    if ((obj_is_carrying_obj_pid(dude_obj, 544) > 0) and (obj_is_carrying_obj_pid(dude_obj, 545) > 0)) then begin
        giq_option(4, NAME, 404, node019, GOOD_REACTION);
    end
    giq_option(4, NAME, 403, node015, BAD_REACTION);
    giq_option(4, NAME, 402, node999, NEUTRAL_REACTION);
end

procedure node015
begin
    Reply(410);
    giq_option(4, NAME, 411, node016, NEUTRAL_REACTION);
    giq_option(5, NAME, 412, node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 413, node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 414, node999, NEUTRAL_REACTION);
end

procedure node016
begin
    Reply(420);
    giq_option(4, NAME, 422, node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 421, node999, NEUTRAL_REACTION);
end

procedure node017
begin
    Reply(430);
    giq_option(4, NAME, 432, node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 431, node999, NEUTRAL_REACTION);
end

procedure node018
begin
    Reply(440);
    giq_option(4, NAME, 442, node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 441, node999, NEUTRAL_REACTION);
end

procedure node019
begin
    set_map_var(8, 1);
    Reply(450);
    giq_option(4, NAME, 451, node999, NEUTRAL_REACTION);
end

procedure node020
begin
    set_map_var(3, 1);
    Reply(460);
    giq_option(4, NAME, 461, node021, BAD_REACTION);
end

procedure node021
begin
    Reply(470);
    giq_option(4, NAME, 471, node022, NEUTRAL_REACTION);
end

procedure node022
begin
    Reply(480);
    giq_option(4, NAME, 481, node023, NEUTRAL_REACTION);
end

procedure node023
begin
    Reply(490);
    giq_option(4, NAME, 491, node024, NEUTRAL_REACTION);
end

procedure node024
begin
    Reply(500);
    giq_option(4, NAME, 501, node996, NEUTRAL_REACTION);
end

procedure node025
begin
    Reply(510);
    giq_option(4, NAME, 511, node030, NEUTRAL_REACTION);
    if (local_var(10) == 0) then begin
        giq_option(4, NAME, 512, node026, BAD_REACTION);
    end
    if (local_var(10) > 0) then begin
        giq_option(4, NAME, 512, node029, BAD_REACTION);
    end
end

procedure node026
begin
    set_local_var(10, 1);
    Reply(520);
    giq_option(4, NAME, 521, node026a, BAD_REACTION);
    giq_option(4, NAME, 522, node999, NEUTRAL_REACTION);
end

procedure node026a
begin
    if (is_success(do_check(dude_obj, 3, -1 - local_var(9)))) then begin
        call node027();
    end
    else begin
        call node028();
    end
end

procedure node027
begin
    Reply(530);
    giq_option(4, NAME, 531, node031, NEUTRAL_REACTION);
end

procedure node028
begin
    set_global_var(GVAR_ELKO_SICK_JONAS_APPROACH, 1);
    Reply(540);
    giq_option(4, NAME, 541, node997, NEUTRAL_REACTION);
end

procedure node029
begin
    Reply(550);
    giq_option(4, NAME, 551, node999, NEUTRAL_REACTION);
end

procedure node030
begin
    Reply(560);
    giq_option(4, NAME, 531, node031, NEUTRAL_REACTION);
end

procedure node031
begin
    Reply(570);
    giq_option(4, NAME, 571, node032, NEUTRAL_REACTION);
end

procedure node032
begin
    Reply(580);
    if (dude_perception > 6) then begin
        giq_option(4, NAME, 582, node033, BAD_REACTION);
    end
    if ((dude_charisma > 6) or (has_skill(dude_obj, SKILL_CONVERSANT) >= 50)) then begin
        giq_option(4, NAME, 583, node034, BAD_REACTION);
    end
    giq_option(4, NAME, 581, node035, BAD_REACTION);
end

procedure node033
begin
    Reply(590);
    giq_option(4, NAME, 591, node038, NEUTRAL_REACTION);
end

procedure node034
begin
    Reply(600);
    giq_option(4, NAME, 601, node037, NEUTRAL_REACTION);
end

procedure node035
begin
    set_global_var(GVAR_ELKO_SICK_JONAS_APPROACH, 1);
    Reply(610);
    giq_option(4, NAME, 611, node999, BAD_REACTION);
    giq_option(4, NAME, 612, node036, BAD_REACTION);
    if ((dude_perception >= 7) or (dude_charisma >= 7) or (has_skill(dude_obj, SKILL_CONVERSANT) >= 35)) then begin
        giq_option(4, NAME, 613, node037, BAD_REACTION);
    end
end

procedure node036
begin
    Reply(620);
    giq_option(4, NAME, 621, node999, NEUTRAL_REACTION);
end

procedure node037
begin
    Reply(630);
    giq_option(4, NAME, 631, node038, NEUTRAL_REACTION);
    giq_option(4, NAME, 632, node039, GOOD_REACTION);
end

procedure node038
begin
    item := create_object(534, 0, 0);
    add_obj_to_inven(dude_obj, item);
    removed_qty := obj_is_carrying_obj_pid(jordan_desk_ptr, 534);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(jordan_desk_ptr, 534);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(jordan_desk_ptr, 534);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(jordan_desk_ptr, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(jordan_desk_ptr, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(jordan_desk_ptr, restock_obj);
                    add_obj_to_inven(jordan_desk_ptr, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(jordan_desk_ptr, 2) == restock_obj) or (critter_inven_obj(jordan_desk_ptr, 1) == restock_obj)) then begin
                    inven_unwield(jordan_desk_ptr);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(jordan_desk_ptr, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    Reply(640);
    giq_option(4, NAME, 641, node993, BAD_REACTION);
    giq_option(4, NAME, 642, node039, NEUTRAL_REACTION);
end

procedure node039
begin
    if (obj_is_carrying_obj_pid(dude_obj, 534) == 0) then begin
        item := create_object(534, 0, 0);
        add_obj_to_inven(dude_obj, item);
        removed_qty := obj_is_carrying_obj_pid(jordan_desk_ptr, 534);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(jordan_desk_ptr, 534);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(jordan_desk_ptr, 534);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(jordan_desk_ptr, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(jordan_desk_ptr, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(jordan_desk_ptr, restock_obj);
                        add_obj_to_inven(jordan_desk_ptr, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(jordan_desk_ptr, 2) == restock_obj) or (critter_inven_obj(jordan_desk_ptr, 1) == restock_obj)) then begin
                        inven_unwield(jordan_desk_ptr);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(jordan_desk_ptr, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        Reply(650);
    end
    else begin
        Reply(651);
    end
    giq_option(4, NAME, 652, node040, NEUTRAL_REACTION);
end

procedure node040
begin
    Reply(660);
    giq_option(4, NAME, 661, node993, BAD_REACTION);
    giq_option(4, NAME, 662, node041, GOOD_REACTION);
end

procedure node041
begin
    set_global_var(GVAR_ELKO_SICK_JONAS_APPROACH, 3);
    Reply(mstr(670) + dude_name + mstr(671));
    giq_option(4, NAME, 672, node999, NEUTRAL_REACTION);
end

procedure node042
begin
    Reply(mstr(680) + dude_name + mstr(681));
    if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) == 1) then begin
        giq_option(4, NAME, 683, node043, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 682, node999, NEUTRAL_REACTION);
end

procedure node043
begin
    set_map_var(5, 1);
    Reply(mstr(690) + dude_name + mstr(691));
    giq_option(4, NAME, 692, node995, NEUTRAL_REACTION);
    giq_option(4, NAME, 693, node995, GOOD_REACTION);
end

procedure node044
begin
    set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 3);
    set_map_var(5, 2);
    Reply(700);
    giq_option(4, NAME, 701, node045, NEUTRAL_REACTION);
end

procedure node045
begin
    Reply(710);
    giq_option(4, NAME, 711, node046, NEUTRAL_REACTION);
end

procedure node046
begin
    Reply(mstr(720) + dude_name + mstr(721) + dude_name + mstr(722));
    giq_option(4, NAME, 723, node047, BAD_REACTION);
end

procedure node047
begin
    Reply(mstr(730) + dude_name + mstr(731));
    giq_option(4, NAME, 732, node999, BAD_REACTION);
    giq_option(4, NAME, 733, node999, NEUTRAL_REACTION);
end

procedure node048
begin
    Reply(740);
    giq_option(-3, NAME, 741, node049, NEUTRAL_REACTION);
    giq_option(-3, NAME, 742, node049, NEUTRAL_REACTION);
    giq_option(-3, NAME, 743, node050, NEUTRAL_REACTION);
end

procedure node049
begin
    Reply(750);
    giq_option(-3, NAME, 751, node050, NEUTRAL_REACTION);
end

procedure node050
begin
    Reply(760);
    giq_option(-3, NAME, 761, node051, NEUTRAL_REACTION);
end

procedure node051
begin
    set_global_var(GVAR_ELKO_SHITSTORM, 4);
    Reply(770);
    giq_option(-3, NAME, 771, node052, GOOD_REACTION);
    giq_option(-3, NAME, 772, node055, NEUTRAL_REACTION);
end

procedure node052
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 1);
    debug_msg("Player gains " + 1 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(780);
    giq_option(-3, NAME, 781, node053, NEUTRAL_REACTION);
    giq_option(-3, NAME, 782, node054, GOOD_REACTION);
end

procedure node053
begin
    Reply(790);
    giq_option(-3, NAME, 791, node994, NEUTRAL_REACTION);
end

procedure node054
begin
    Reply(800);
    giq_option(-3, NAME, 801, node994, NEUTRAL_REACTION);
end

procedure node055
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(810);
    giq_option(-3, NAME, 811, node994, NEUTRAL_REACTION);
end

procedure node056
begin
    Reply(820);
end

procedure node057
begin
end

procedure node058
begin
end

procedure node059
begin
end

procedure node060
begin
end

procedure node993
begin
    gfade_out(10);
    game_ui_disable;
    set_map_var(26, 1);
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) < 2) then begin
        set_global_var(GVAR_ELKO_SICK_JONAS_APPROACH, 2);
    end
    move_to(self_obj, 25697, 0);
    anim(self_obj, 1000, 2);
    move_to(dude_obj, 26300, 0);
    anim(dude_obj, 1000, 0);
    set_map_var(7, 1);
    set_map_var(14, 1);
    if (map_var(6) > 0) then begin
        set_map_var(6, 0);
    end
    gfade_in(10);
end

procedure node994
begin
    set_global_var(GVAR_ELKO_SHITSTORM, 5);
    create_object_sid(16777701, 10261, 0, SCRIPT_ELKOC1);
    move_to(dude_obj, tile_num_in_direction(tile_num(self_obj), 3, 3), elevation(self_obj));
    anim(dude_obj, 1000, 5);
    add_timer_event(self_obj, game_ticks(2), 4);
end

procedure node995
begin
    gfade_out(10);
    game_ui_disable;
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) < 2) then begin
        set_global_var(GVAR_ELKO_SICK_JONAS_APPROACH, 2);
    end
    move_to(self_obj, 25697, 0);
    anim(self_obj, 1000, 2);
    move_to(dude_obj, 26300, 0);
    anim(dude_obj, 1000, 0);
    set_map_var(7, 1);
    set_map_var(14, 1);
    if (map_var(6) > 0) then begin
        set_map_var(6, 0);
    end
    gfade_in(10);
end

procedure node996
begin
    gfade_out(10);
    move_to(self_obj, 25697, 0);
    set_map_var(14, 1);
    anim(self_obj, 1000, 2);
    gfade_in(10);
end

procedure node997
begin
    if (local_var(9) == 0) then begin
        set_local_var(9, 1);
    end
    else begin
        set_local_var(9, 0);
    end
end

procedure node998
begin
    set_local_var(5, 2);
end

procedure node999
begin
end
