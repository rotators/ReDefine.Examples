variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure push_p_proc;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure combat_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure go_to_crypt;
procedure go_to_kirki;
procedure node001;
procedure node002;
procedure node003;
procedure node004;
procedure node005;
procedure node006;
procedure node007;
procedure node008;
procedure node009;
procedure node010;
procedure node011;
procedure node012;
procedure node013;
procedure node014;
procedure node015;
procedure node016;
procedure node017;
procedure node018;
procedure node019;
procedure node020;
procedure node021;
procedure node022;
procedure node023;
procedure node024;
procedure node025;
procedure node026;
procedure node027;
procedure node028;
procedure node029;
procedure node030;
procedure node031;
procedure node032;
procedure node033;
procedure node034;
procedure node035;
procedure node036;
procedure node037;
procedure node038;
procedure node039;
procedure node040;
procedure node041;
procedure node042;
procedure node043;
procedure node044;
procedure node045;
procedure node046;
procedure node047;
procedure node048;
procedure node049;
procedure node050;
procedure node051;
procedure node052;
procedure node053;
procedure node054;
procedure node055;
procedure node056;
procedure node057;
procedure node058;
procedure node059;
procedure node060;
procedure node061;
procedure node062;
procedure node063;
procedure node064;
procedure node065;
procedure node066;
procedure node067;
procedure node068;
procedure node069;
procedure node070;
procedure node071;
procedure node072;
procedure node073;
procedure node074;
procedure node075;
procedure node076;
procedure node077;
procedure node078;
procedure node079;
procedure node080;
procedure node081;
procedure node082;
procedure node083;
procedure node084;
procedure node995;
procedure node996;
procedure node997;
procedure node998;
procedure node999;

import variable cassidy_ptr;
import variable jordan_ptr;

variable rot;
variable j;
variable forcetalk;
variable from61;
variable item;
variable end_elko;
variable walks;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777728) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777728)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777701) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777701)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    if ((CUR_MAP_ARCAVES) or (CUR_MAP_ARVILLAG)) then begin
        cassidy_ptr := self_obj;
    end
end

procedure push_p_proc
begin
    if (local_var(10) == 0) then begin
        script_overrides;
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        dialogue_system_enter;
    end
    else begin
        if (fixed_param == 1) then begin
            float_msg(self_obj, mstr(random(240, 243)), FLOAT_MSG_YELLOW);
            if (global_var(GVAR_ELKO_BIG_TROUBLE) < 4) then begin
                add_timer_event(self_obj, game_ticks(random(6, 12)), 1);
            end
        end
        else begin
            if (fixed_param == 2) then begin
                float_msg(self_obj, mstr(200), FLOAT_MSG_BLUE);
            end
            else begin
                if (fixed_param == 3) then begin
                    float_msg(self_obj, mstr(220), FLOAT_MSG_RED);
                end
                else begin
                    if (fixed_param == 4) then begin
                        float_msg(self_obj, mstr(290), FLOAT_MSG_RED);
                    end
                    else begin
                        if (fixed_param == 5) then begin
                            fade_out;
                            give_exp_points(250);
                            display_msg(g_mstr(100) + 250 + g_mstr(101));
                            removed_qty := obj_is_carrying_obj_pid(dude_obj, 535);
                            if (1 < removed_qty) then begin
                                removed_qty := 1;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(dude_obj, 535);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(dude_obj, 535);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(dude_obj, restock_obj);
                                            add_obj_to_inven(dude_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(dude_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                            removed_qty := obj_is_carrying_obj_pid(dude_obj, 537);
                            if (1 < removed_qty) then begin
                                removed_qty := 1;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(dude_obj, 537);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(dude_obj, 537);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(dude_obj, restock_obj);
                                            add_obj_to_inven(dude_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(dude_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                            set_pipboy_available(1);
                            fade_in;
                            if (dude_gender == 0) then begin
                                play_gmovie(6);
                            end
                            else begin
                                if (dude_gender == 1) then begin
                                    play_gmovie(7);
                                end
                            end
                            endgame_slideshow;
                            kill_critter(dude_obj, 49);
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        script_overrides;
        float_msg(self_obj, mstr(random(150, 152)), FLOAT_MSG_RED);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - -15);
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (party_member_obj(16777701) != 0) then begin
        if (((local_var(11) != 0) == 0) and ((global_var(GVAR_PARTY_NO_FOLLOW) != 0) == 0)) then begin
            if (local_var(12) == 0) then begin
                set_local_var(12, 6);
            end
            if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(12) / 2)) then begin
                if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(12) / 2 * 2)) then begin
                    if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12))) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12)) != 0)) then begin
                        if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12))) and (step_tile < 0)) then begin
                            step_tile := step_tile + 1;
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12));
                                step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12));
                                animate_move_obj_to_tile(self_obj, step_tile, 1);
                                debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12))) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12))))) do begin
                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                    debug_msg("move_to_point: step_tile == " + step_tile);
                                    animate_move_obj_to_tile(self_obj, step_tile, 1);
                                end
                                if (anim_busy(self_obj) == 0) then begin
                                    if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                    else begin
                                        step_tile := -10;
                                    end
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12))) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12)))) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                end
                else begin
                    if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12))) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12)) != 0)) then begin
                        if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12))) and (step_tile < 0)) then begin
                            step_tile := step_tile + 1;
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12));
                                step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12));
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12))) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12))))) do begin
                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                    debug_msg("move_to_point: step_tile == " + step_tile);
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                end
                                if (anim_busy(self_obj) == 0) then begin
                                    if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                    else begin
                                        step_tile := -10;
                                    end
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12))) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(12)))) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if ((global_var(GVAR_ENEMY_ELKO) > 0) and (local_var(5) != 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if ((CUR_MAP_ARTEMPLE) and (local_var(4) == 0) and (map_var(0) == 1)) then begin
        set_map_var(0, 2);
        rot := rotation_to_tile(tile_num(self_obj), dude_tile);
        anim(self_obj, 1000, rot);
        add_timer_event(self_obj, 8, 0);
    end
    if ((CUR_MAP_ARCAVES) and (elevation(self_obj) == 1) and (local_var(9) == 0) and (forcetalk == 0)) then begin
        forcetalk := 1;
        add_timer_event(self_obj, 10, 0);
    end
    if ((CUR_MAP_ARCAVES) and (tile_num(self_obj) == 9091)) then begin
        destroy_object(self_obj);
    end
    if ((CUR_MAP_ARVILLAG) and (tile_num(self_obj) == 24368)) then begin
        destroy_object(self_obj);
    end
    if ((CUR_MAP_ARVILLAG) and (global_var(GVAR_ELKO_SHITSTORM) == 5) and (walks == 0)) then begin
        walks := 1;
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(jordan_ptr), 4, 5), 0);
        reg_anim_func(3, 0);
    end
    if ((CUR_MAP_ARCAVES) and (global_var(GVAR_ELKO_SHITSTORM) == 6)) then begin
        destroy_object(self_obj);
    end
    if ((global_var(GVAR_ELKO_SHITSTORM) == 6) and (dude_iq < 4) and (dude_tile == 16922)) then begin
        set_global_var(GVAR_ELKO_SHITSTORM, 7);
        add_timer_event(self_obj, 2, 0);
    end
end

procedure combat_p_proc
begin
    if ((CUR_MAP_ARCAVES) and (elevation(self_obj) == 1) and (local_var(10) == 0)) then begin
        script_overrides;
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj != dude_obj) then begin
        if (local_var(10) > 0) then begin
            j := random(1, 3);
            if (j < 3) then begin
                float_msg(self_obj, mstr(random(270, 273)), FLOAT_MSG_RED);
            end
        end
    end
    else begin
        script_overrides;
        float_msg(self_obj, mstr(random(153, 155)), FLOAT_MSG_RED);
    end
end

procedure map_enter_p_proc
begin
    if ((CUR_MAP_ARCAVES) or (CUR_MAP_ARVILLAG)) then begin
        cassidy_ptr := self_obj;
    end
    if ((CUR_MAP_ARCAVES) and (global_var(GVAR_ELKO_MAIN_QUESTS) == 6)) then begin
        destroy_object(self_obj);
    end
end

procedure map_update_p_proc
begin
    if ((CUR_MAP_ARCAVES) or (CUR_MAP_ARVILLAG) and (local_var(4) == 0)) then begin
        set_local_var(4, 1);
    end
    if ((CUR_MAP_ARCAVES) or (CUR_MAP_ARVILLAG)) then begin
        cassidy_ptr := self_obj;
    end
end

procedure talk_p_proc
begin
    rot := rotation_to_tile(tile_num(self_obj), dude_tile);
    anim(self_obj, 1000, rot);
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
        if (dude_iq > 3) then begin
            start_gdialog(1304, self_obj, 4, 1, 3);
            gsay_start;
            call node001();
            gsay_end;
            end_dialogue;
        end
        else begin
            start_gdialog(1304, self_obj, 4, 1, 3);
            gsay_start;
            call node040();
            gsay_end;
            end_dialogue;
        end
    end
    else begin
        if (dude_iq > 3) then begin
            if (global_var(GVAR_ELKO_MAIN_QUESTS) < 4) then begin
                start_gdialog(1304, self_obj, 4, 1, 3);
                gsay_start;
                call node012();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (global_var(GVAR_ELKO_MAIN_QUESTS) == 4) then begin
                    set_local_var(3, local_var(3) + 20);
                    set_local_var(0, local_var(0) + 20);
                    if (local_var(0) <= -75) then begin
                        set_local_var(1, -4);
                    end
                    else begin
                        if (local_var(0) <= -50) then begin
                            set_local_var(1, -3);
                        end
                        else begin
                            if (local_var(0) <= -25) then begin
                                set_local_var(1, -2);
                            end
                            else begin
                                if (local_var(0) <= -10) then begin
                                    set_local_var(1, -1);
                                end
                                else begin
                                    if (local_var(0) <= 10) then begin
                                        set_local_var(1, 0);
                                    end
                                    else begin
                                        if (local_var(0) <= 25) then begin
                                            set_local_var(1, 1);
                                        end
                                        else begin
                                            if (local_var(0) <= 50) then begin
                                                set_local_var(1, 2);
                                            end
                                            else begin
                                                if (local_var(0) <= 75) then begin
                                                    set_local_var(1, 3);
                                                end
                                                else begin
                                                    set_local_var(1, 4);
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    start_gdialog(1304, self_obj, 1, 1, 3);
                    gsay_start;
                    if (global_var(GVAR_ELKO_MATATU_STATUS) < 2) then begin
                        call node018();
                    end
                    else begin
                        if (global_var(GVAR_ELKO_MATATU_STATUS) == 2) then begin
                            call node019();
                        end
                        else begin
                            call node020();
                        end
                    end
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (CUR_MAP_ARTEMPLE) then begin
                        start_gdialog(1304, self_obj, 4, 1, 3);
                        gsay_start;
                        call node026();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (CUR_MAP_ARCAVES) then begin
                            if (elevation(self_obj) == 0) then begin
                                float_msg(self_obj, mstr(210), FLOAT_MSG_RED);
                            end
                            else begin
                                if (elevation(self_obj) == 1) then begin
                                    if (local_var(9) == 0) then begin
                                        set_local_var(9, 1);
                                        start_gdialog(1304, self_obj, 4, 1, 14);
                                        gsay_start;
                                        call node028();
                                        gsay_end;
                                        end_dialogue;
                                        if (local_var(10) == 0) then begin
                                            add_timer_event(self_obj, game_ticks(6), 1);
                                        end
                                    end
                                    else begin
                                        if (local_var(10) == 0) then begin
                                            if (((obj_is_carrying_obj_pid(dude_obj, 535) > 0) and (obj_is_carrying_obj_pid(dude_obj, 537) > 0)) == 0) then begin
                                                float_msg(self_obj, mstr(230), FLOAT_MSG_YELLOW);
                                            end
                                            else begin
                                                start_gdialog(1304, self_obj, 4, 1, 14);
                                                gsay_start;
                                                if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 535) then begin
                                                    call node034();
                                                end
                                                else begin
                                                    call node035();
                                                end
                                                gsay_end;
                                                end_dialogue;
                                            end
                                        end
                                        else begin
                                            if (((obj_is_carrying_obj_pid(dude_obj, 535) > 0) and (obj_is_carrying_obj_pid(dude_obj, 537) > 0)) == 0) then begin
                                                float_msg(self_obj, mstr(random(250, 251)), FLOAT_MSG_YELLOW);
                                            end
                                            else begin
                                                start_gdialog(1304, self_obj, 1, 1, 14);
                                                gsay_start;
                                                call node036();
                                                gsay_end;
                                                end_dialogue;
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        else begin
            if (global_var(GVAR_ELKO_MAIN_QUESTS) == 0) then begin
                start_gdialog(1304, self_obj, 4, 1, 3);
                gsay_start;
                call node046();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (global_var(GVAR_ELKO_MAIN_QUESTS) == 1) then begin
                    float_msg(self_obj, mstr(280), FLOAT_MSG_YELLOW);
                end
                else begin
                    if (global_var(GVAR_ELKO_MAIN_QUESTS) == 2) then begin
                        set_local_var(3, local_var(3) + 30);
                        set_local_var(0, local_var(0) + 30);
                        if (local_var(0) <= -75) then begin
                            set_local_var(1, -4);
                        end
                        else begin
                            if (local_var(0) <= -50) then begin
                                set_local_var(1, -3);
                            end
                            else begin
                                if (local_var(0) <= -25) then begin
                                    set_local_var(1, -2);
                                end
                                else begin
                                    if (local_var(0) <= -10) then begin
                                        set_local_var(1, -1);
                                    end
                                    else begin
                                        if (local_var(0) <= 10) then begin
                                            set_local_var(1, 0);
                                        end
                                        else begin
                                            if (local_var(0) <= 25) then begin
                                                set_local_var(1, 1);
                                            end
                                            else begin
                                                if (local_var(0) <= 50) then begin
                                                    set_local_var(1, 2);
                                                end
                                                else begin
                                                    if (local_var(0) <= 75) then begin
                                                        set_local_var(1, 3);
                                                    end
                                                    else begin
                                                        set_local_var(1, 4);
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        start_gdialog(1304, self_obj, 1, 1, 3);
                        gsay_start;
                        call node048();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (global_var(GVAR_ELKO_MAIN_QUESTS) == 3) then begin
                            start_gdialog(1304, self_obj, 4, 1, 3);
                            gsay_start;
                            call node055();
                            gsay_end;
                            end_dialogue;
                        end
                        else begin
                            if (global_var(GVAR_ELKO_MAIN_QUESTS) == 4) then begin
                                start_gdialog(1304, self_obj, 4, 1, 3);
                                gsay_start;
                                call node059();
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                if (global_var(GVAR_ELKO_MAIN_QUESTS) == 5) then begin
                                    if (CUR_MAP_ARCAVES) then begin
                                        float_msg(self_obj, mstr(281) + dude_name + mstr(282), FLOAT_MSG_NORMAL);
                                    end
                                    else begin
                                        if (CUR_MAP_ARVILLAG) then begin
                                            if (local_var(18) == 0) then begin
                                                set_local_var(18, 1);
                                                set_global_var(GVAR_ELKO_SHITSTORM, 3);
                                                float_msg(self_obj, mstr(284), FLOAT_MSG_YELLOW);
                                                reg_anim_func(2, self_obj);
                                                reg_anim_func(1, 1);
                                                animate_move_obj_to_tile(self_obj, 24368, 0);
                                                reg_anim_func(3, 0);
                                            end
                                            else begin
                                                float_msg(self_obj, mstr(283), FLOAT_MSG_YELLOW);
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (global_var(GVAR_ELKO_MAIN_QUESTS) == 6) then begin
                                        start_gdialog(1304, self_obj, 1, 1, 3);
                                        gsay_start;
                                        call node070();
                                        gsay_end;
                                        end_dialogue;
                                    end
                                    else begin
                                        if (global_var(GVAR_ELKO_BIG_TROUBLE) < 3) then begin
                                            start_gdialog(1304, self_obj, 1, 1, 3);
                                            gsay_start;
                                            call node073();
                                            gsay_end;
                                            end_dialogue;
                                        end
                                        else begin
                                            if (elevation(self_obj) == 0) then begin
                                                float_msg(self_obj, mstr(210), FLOAT_MSG_RED);
                                            end
                                            else begin
                                                if (local_var(9) == 0) then begin
                                                    set_local_var(9, 1);
                                                    start_gdialog(1304, self_obj, 4, 1, 14);
                                                    gsay_start;
                                                    call node074();
                                                    gsay_end;
                                                    end_dialogue;
                                                    add_timer_event(self_obj, game_ticks(6), 1);
                                                end
                                                else begin
                                                    if (((obj_is_carrying_obj_pid(dude_obj, 535) > 0) and (obj_is_carrying_obj_pid(dude_obj, 537) > 0)) == 0) then begin
                                                        float_msg(self_obj, mstr(230), FLOAT_MSG_YELLOW);
                                                    end
                                                    else begin
                                                        start_gdialog(1304, self_obj, 1, 1, 14);
                                                        gsay_start;
                                                        if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 535) then begin
                                                            call node081();
                                                        end
                                                        else begin
                                                            call node080();
                                                        end
                                                        gsay_end;
                                                        end_dialogue;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (end_elko > 0) then begin
        add_timer_event(self_obj, 2, 5);
    end
    if (CUR_MAP_ARTEMPLE) then begin
        anim(self_obj, 1000, 2);
    end
    else begin
        if ((CUR_MAP_ARCAVES) and (elevation(self_obj) == 1)) then begin
            anim(self_obj, 1000, 3);
        end
    end
    if ((global_var(GVAR_ELKO_SHITSTORM) == 1) and (CUR_MAP_ARTEMPLE)) then begin
        call go_to_kirki();
    end
    if ((global_var(GVAR_ELKO_BIG_TROUBLE) == 3) and (CUR_MAP_ARTEMPLE)) then begin
        call go_to_crypt();
    end
end

procedure go_to_crypt
begin
    game_time_advance((24 * (60 * (60 * 10)) * (game_time_hour > 300)) + (((300 / 100) - (game_time_hour / 100)) * (60 * (60 * 10))) + (((300 % 100) - (game_time_hour % 100)) * (60 * 10)));
    load_map(3, 0);
end

procedure go_to_kirki
begin
    set_global_var(GVAR_ELKO_SHITSTORM, 2);
    load_map(3, 0);
end

procedure node001
begin
    Reply(300);
    giq_option(4, NAME, 301, node003, GOOD_REACTION);
    giq_option(4, NAME, 302, node002, NEUTRAL_REACTION);
end

procedure node002
begin
    Reply(310);
    giq_option(4, NAME, 311, node003, NEUTRAL_REACTION);
end

procedure node003
begin
    Reply(320);
    giq_option(4, NAME, 321, node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 322, node004, BAD_REACTION);
end

procedure node004
begin
    Reply(330);
    giq_option(4, NAME, 331, node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 332, node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 333, node007, BAD_REACTION);
    giq_option(4, NAME, 334, node008, GOOD_REACTION);
end

procedure node005
begin
    Reply(340);
    giq_option(4, NAME, 341, node006, NEUTRAL_REACTION);
end

procedure node006
begin
    Reply(350);
    giq_option(4, NAME, 351, node008, NEUTRAL_REACTION);
end

procedure node007
begin
    set_local_var(3, local_var(3) + -5);
    set_local_var(0, local_var(0) + -5);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(360);
    giq_option(4, NAME, 361, node008, NEUTRAL_REACTION);
end

procedure node008
begin
    set_local_var(3, local_var(3) + 50);
    set_local_var(0, local_var(0) + 50);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(370);
    giq_option(4, NAME, 371, node009, NEUTRAL_REACTION);
end

procedure node009
begin
    Reply(380);
    giq_option(4, NAME, 381, node010, NEUTRAL_REACTION);
end

procedure node010
begin
    set_map_var(0, 3);
    Reply(390);
    giq_option(4, NAME, 391, node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 392, node011, NEUTRAL_REACTION);
end

procedure node011
begin
    Reply(400);
    giq_option(4, NAME, 401, node999, NEUTRAL_REACTION);
end

procedure node012
begin
    Reply(410);
    if (local_var(7) == 0) then begin
        giq_option(4, NAME, 411, node013, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 412, node014, NEUTRAL_REACTION);
    if ((map_var(1) == 1) and (local_var(8) == 0)) then begin
        giq_option(4, NAME, 414, node016, BAD_REACTION);
    end
    if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) > 0) then begin
        giq_option(4, NAME, 415, node017, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 416, node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 413, node999, NEUTRAL_REACTION);
end

procedure node013
begin
    set_local_var(7, 1);
    if (dude_gender == 0) then begin
        Reply(420);
    end
    else begin
        Reply(421);
    end
    giq_option(4, NAME, 423, node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 422, node999, NEUTRAL_REACTION);
end

procedure node014
begin
    Reply(430);
    if (local_var(7) == 0) then begin
        giq_option(4, NAME, 431, node013, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 432, node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 433, node999, NEUTRAL_REACTION);
end

procedure node015
begin
    Reply(440);
    giq_option(4, NAME, 441, node999, NEUTRAL_REACTION);
end

procedure node016
begin
    set_local_var(8, 1);
    set_local_var(3, local_var(3) + -20);
    set_local_var(0, local_var(0) + -20);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(450);
    giq_option(4, NAME, 451, node999, NEUTRAL_REACTION);
end

procedure node017
begin
    Reply(460);
    giq_option(4, NAME, 461, node999, NEUTRAL_REACTION);
end

procedure node018
begin
    Reply(470);
    giq_option(4, NAME, 471, node022, NEUTRAL_REACTION);
end

procedure node019
begin
    Reply(480);
    giq_option(4, NAME, 481, node022, NEUTRAL_REACTION);
end

procedure node020
begin
    Reply(490);
    giq_option(4, NAME, 491, node022, NEUTRAL_REACTION);
end

procedure node021
begin
    set_local_var(3, local_var(3) + -20);
    set_local_var(0, local_var(0) + -20);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(500);
    giq_option(4, NAME, 501, node022, NEUTRAL_REACTION);
end

procedure node022
begin
    set_global_var(GVAR_ELKO_BIG_TROUBLE, 1);
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 7);
    Reply(510);
    giq_option(4, NAME, 511, node023, NEUTRAL_REACTION);
end

procedure node023
begin
    Reply(520);
    giq_option(4, NAME, 521, node025, NEUTRAL_REACTION);
    giq_option(4, NAME, 522, node024, BAD_REACTION);
end

procedure node024
begin
    set_local_var(3, local_var(3) + -10);
    set_local_var(0, local_var(0) + -10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(530);
    giq_option(4, NAME, 531, node025, NEUTRAL_REACTION);
end

procedure node025
begin
    Reply(540);
    giq_option(4, NAME, 541, node027, GOOD_REACTION);
    giq_option(4, NAME, 542, node997, NEUTRAL_REACTION);
end

procedure node026
begin
    Reply(550);
    giq_option(4, NAME, 552, node027, GOOD_REACTION);
    giq_option(4, NAME, 551, node999, NEUTRAL_REACTION);
end

procedure node027
begin
    set_global_var(GVAR_ELKO_BIG_TROUBLE, 3);
    set_local_var(3, local_var(3) + 30);
    set_local_var(0, local_var(0) + 30);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(560);
    giq_option(4, NAME, 561, node999, NEUTRAL_REACTION);
end

procedure node028
begin
    Reply(570);
    giq_option(4, NAME, 571, node030, BAD_REACTION);
    giq_option(4, NAME, 572, node999, NEUTRAL_REACTION);
end

procedure node029
begin
    Reply(580);
    giq_option(4, NAME, 571, node030, BAD_REACTION);
    giq_option(4, NAME, 572, node999, NEUTRAL_REACTION);
end

procedure node030
begin
    Reply(590);
    giq_option(4, NAME, 591, node031, BAD_REACTION);
    if (dude_skill(SKILL_SPEECH) < 50) then begin
        giq_option(4, NAME, 592, node032, NEUTRAL_REACTION);
    end
    if (dude_skill(SKILL_SPEECH) >= 50) then begin
        giq_option(4, NAME, 594, node033, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 593, node999, NEUTRAL_REACTION);
end

procedure node031
begin
    gsay_message(NAME, 600, NEUTRAL_REACTION);
end

procedure node032
begin
    if (dude_gender == 0) then begin
        Reply(610);
    end
    else begin
        Reply(611);
    end
    giq_option(4, NAME, 612, node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 613, node999, GOOD_REACTION);
    giq_option(4, NAME, 614, node999, BAD_REACTION);
end

procedure node033
begin
    set_local_var(10, 1);
    set_global_var(GVAR_ELKO_BIG_TROUBLE, 4);
    if (local_var(12) == 0) then begin
        set_local_var(12, 6);
    end
    debug_msg("join party: " + self_name);
    set_local_var(11, 0);
    if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) != 0) then begin
        set_local_var(13, has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM));
    end
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    party_add(self_obj);
    display_mstr(103);
    give_exp_points(50);
    display_msg(g_mstr(100) + 50 + g_mstr(101));
    set_local_var(12, 3);
    Reply(620);
    giq_option(4, NAME, 621, node999, NEUTRAL_REACTION);
end

procedure node034
begin
    if (dude_gender == 0) then begin
        Reply(630);
    end
    else begin
        Reply(631);
    end
    giq_option(4, NAME, 632, node037, NEUTRAL_REACTION);
end

procedure node035
begin
    Reply(640);
    giq_option(4, NAME, 641, node037, NEUTRAL_REACTION);
end

procedure node036
begin
    Reply(650);
    giq_option(4, NAME, 651, node037, NEUTRAL_REACTION);
end

procedure node037
begin
    set_global_var(GVAR_ELKO_BIG_TROUBLE, 5);
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 8);
    Reply(660);
    giq_option(4, NAME, 661, node038, NEUTRAL_REACTION);
    giq_option(4, NAME, 662, node038, NEUTRAL_REACTION);
    if (dude_skill(SKILL_SCIENCE) >= 25) then begin
        giq_option(4, NAME, 663, node038, NEUTRAL_REACTION);
    end
end

procedure node038
begin
    Reply(670);
    giq_option(4, NAME, 671, node039, NEUTRAL_REACTION);
end

procedure node039
begin
    gsay_message(NAME, 680, NEUTRAL_REACTION);
    call node996();
end

procedure node040
begin
    Reply(690);
    giq_option(-3, NAME, 691, node041, NEUTRAL_REACTION);
end

procedure node041
begin
    Reply(700);
    giq_option(-3, NAME, 701, node043, GOOD_REACTION);
    giq_option(-3, NAME, 702, node042, NEUTRAL_REACTION);
end

procedure node042
begin
    Reply(710);
    giq_option(-3, NAME, 711, node043, NEUTRAL_REACTION);
end

procedure node043
begin
    set_local_var(3, local_var(3) + 10);
    set_local_var(0, local_var(0) + 10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 1);
    if (dude_gender == 0) then begin
        Reply(720);
    end
    else begin
        Reply(721);
    end
    giq_option(-3, NAME, 722, node044, NEUTRAL_REACTION);
end

procedure node044
begin
    Reply(730);
    giq_option(-3, NAME, 731, node045, GOOD_REACTION);
end

procedure node045
begin
    Reply(740);
    giq_option(-3, NAME, 741, node999, NEUTRAL_REACTION);
end

procedure node046
begin
    Reply(750);
    giq_option(-3, NAME, 752, node047, NEUTRAL_REACTION);
    giq_option(-3, NAME, 751, node999, NEUTRAL_REACTION);
end

procedure node047
begin
    Reply(760);
    giq_option(-3, NAME, 761, node999, NEUTRAL_REACTION);
end

procedure node048
begin
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 3);
    Reply(770);
    if (dude_gender == 0) then begin
        giq_option(-3, NAME, 771, node049, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(-3, NAME, 771, node052, NEUTRAL_REACTION);
    end
end

procedure node049
begin
    set_global_var(GVAR_ELKO_HELPING_HANDS_MALE, 1);
    Reply(780);
    giq_option(-3, NAME, 781, node050, NEUTRAL_REACTION);
    giq_option(-3, NAME, 782, node051, BAD_REACTION);
end

procedure node050
begin
    Reply(790);
    giq_option(-3, NAME, 791, node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 792, node054, NEUTRAL_REACTION);
end

procedure node051
begin
    set_local_var(3, local_var(3) + -20);
    set_local_var(0, local_var(0) + -20);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(800);
    giq_option(-3, NAME, 801, node999, NEUTRAL_REACTION);
end

procedure node052
begin
    set_global_var(GVAR_ELKO_HELPING_HANDS_FEMALE, 1);
    Reply(810);
    giq_option(-3, NAME, 811, node053, NEUTRAL_REACTION);
end

procedure node053
begin
    Reply(820);
    giq_option(-3, NAME, 821, node054, NEUTRAL_REACTION);
    giq_option(-3, NAME, 822, node999, NEUTRAL_REACTION);
end

procedure node054
begin
    Reply(830);
    if (local_var(14) == 0) then begin
        giq_option(-3, NAME, 831, node056, NEUTRAL_REACTION);
    end
    if (local_var(15) == 0) then begin
        giq_option(-3, NAME, 832, node057, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 833, node999, NEUTRAL_REACTION);
end

procedure node055
begin
    Reply(840);
    giq_option(-3, NAME, 841, node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 842, node058, NEUTRAL_REACTION);
end

procedure node056
begin
    set_local_var(14, 1);
    Reply(850);
    if (local_var(15) == 0) then begin
        giq_option(-3, NAME, 852, node057, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 851, node999, NEUTRAL_REACTION);
end

procedure node057
begin
    set_local_var(15, 1);
    Reply(860);
    if (local_var(14) == 0) then begin
        giq_option(-3, NAME, 861, node056, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 862, node999, NEUTRAL_REACTION);
end

procedure node058
begin
    if (dude_gender == 0) then begin
        Reply(870);
    end
    else begin
        Reply(871);
    end
    giq_option(-3, NAME, 872, node999, NEUTRAL_REACTION);
end

procedure node059
begin
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 5);
    set_global_var(GVAR_ELKO_SHITSTORM, 1);
    Reply(880);
    giq_option(-3, NAME, 881, node060, NEUTRAL_REACTION);
    giq_option(-3, NAME, 882, node061, BAD_REACTION);
end

procedure node060
begin
    if (dude_gender == 0) then begin
        Reply(890);
    end
    else begin
        Reply(891);
    end
    giq_option(-3, NAME, 892, node062, NEUTRAL_REACTION);
end

procedure node061
begin
    set_local_var(3, local_var(3) + -10);
    set_local_var(0, local_var(0) + -10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    from61 := 1;
    Reply(900);
    giq_option(-3, NAME, 901, node062, NEUTRAL_REACTION);
end

procedure node062
begin
    if (from61 == 0) then begin
        Reply(910);
    end
    else begin
        Reply(911);
    end
    giq_option(-3, NAME, 912, node063, NEUTRAL_REACTION);
end

procedure node063
begin
    Reply(920);
    giq_option(-3, NAME, 921, node064, BAD_REACTION);
    giq_option(-3, NAME, 922, node065, GOOD_REACTION);
end

procedure node064
begin
    set_local_var(3, local_var(3) + -5);
    set_local_var(0, local_var(0) + -5);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(930);
    if (local_var(16) == 0) then begin
        giq_option(-3, NAME, 931, node066, NEUTRAL_REACTION);
    end
    if (local_var(17) == 0) then begin
        giq_option(-3, NAME, 932, node067, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 933, node068, GOOD_REACTION);
end

procedure node065
begin
    set_local_var(3, local_var(3) + 10);
    set_local_var(0, local_var(0) + 10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (dude_gender == 0) then begin
        Reply(940);
    end
    else begin
        Reply(941);
    end
    giq_option(-3, NAME, 942, node066, NEUTRAL_REACTION);
    giq_option(-3, NAME, 943, node067, NEUTRAL_REACTION);
    giq_option(-3, NAME, 944, node068, GOOD_REACTION);
end

procedure node066
begin
    set_local_var(16, 1);
    Reply(950);
    if (local_var(17) == 0) then begin
        giq_option(-3, NAME, 952, node067, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 951, node068, GOOD_REACTION);
end

procedure node067
begin
    set_local_var(17, 1);
    Reply(960);
    if (local_var(16) == 0) then begin
        giq_option(-3, NAME, 962, node067, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 961, node068, GOOD_REACTION);
end

procedure node068
begin
    Reply(970);
    giq_option(-3, NAME, 971, node999, GOOD_REACTION);
    giq_option(-3, NAME, 972, node069, BAD_REACTION);
end

procedure node069
begin
    Reply(980);
    giq_option(-3, NAME, 981, node999, NEUTRAL_REACTION);
end

procedure node070
begin
    set_local_var(3, local_var(3) + 30);
    set_local_var(0, local_var(0) + 30);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(990);
    giq_option(-3, NAME, 991, node071, NEUTRAL_REACTION);
end

procedure node071
begin
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 7);
    set_global_var(GVAR_ELKO_BIG_TROUBLE, 1);
    Reply(1000);
    giq_option(-3, NAME, 1001, node072, NEUTRAL_REACTION);
end

procedure node072
begin
    Reply(1010);
    giq_option(-3, NAME, 1011, node997, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1012, node995, NEUTRAL_REACTION);
end

procedure node073
begin
    Reply(1020);
    giq_option(-3, NAME, 1021, node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1022, node995, NEUTRAL_REACTION);
end

procedure node074
begin
    Reply(1030);
    giq_option(-3, NAME, 1031, node075, NEUTRAL_REACTION);
end

procedure node075
begin
    Reply(1040);
    giq_option(-3, NAME, 1041, node076, NEUTRAL_REACTION);
end

procedure node076
begin
    item := create_object(7, 0, 0);
    add_obj_to_inven(dude_obj, item);
    item := create_object(273, 0, 0);
    add_mult_objs_to_inven(dude_obj, item, 2);
    Reply(1050);
    giq_option(-3, NAME, 1051, node077, NEUTRAL_REACTION);
end

procedure node077
begin
    Reply(1060);
    giq_option(-3, NAME, 1061, node078, NEUTRAL_REACTION);
end

procedure node078
begin
    Reply(1070);
    giq_option(-3, NAME, 1071, node079, NEUTRAL_REACTION);
end

procedure node079
begin
    Reply(1080);
    giq_option(-3, NAME, 1081, node999, NEUTRAL_REACTION);
end

procedure node080
begin
    Reply(1090);
    giq_option(-3, NAME, 1091, node082, GOOD_REACTION);
end

procedure node081
begin
    Reply(1100);
    giq_option(-3, NAME, 1101, node082, GOOD_REACTION);
end

procedure node082
begin
    set_global_var(GVAR_ELKO_BIG_TROUBLE, 5);
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 8);
    if (dude_gender == 0) then begin
        Reply(1110);
    end
    else begin
        Reply(1111);
    end
    giq_option(-3, NAME, 1112, node083, NEUTRAL_REACTION);
end

procedure node083
begin
    Reply(1120);
    giq_option(-3, NAME, 1121, node084, NEUTRAL_REACTION);
end

procedure node084
begin
    Reply(1130);
    giq_option(-3, NAME, 1131, node996, NEUTRAL_REACTION);
end

procedure node995
begin
    set_global_var(GVAR_ELKO_BIG_TROUBLE, 3);
end

procedure node996
begin
    if (local_var(10) == 1) then begin
        set_local_var(10, 0);
        party_remove(self_obj);
    end
    end_elko := 1;
end

procedure node997
begin
    if (global_var(GVAR_ELKO_BIG_TROUBLE) < 2) then begin
        set_global_var(GVAR_ELKO_BIG_TROUBLE, 2);
    end
end

procedure node998
begin
    set_local_var(5, 2);
end

procedure node999
begin
end
