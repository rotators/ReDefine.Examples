variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure timed_event_p_proc;
procedure combat_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure barter;
procedure jordan_arrest;
procedure matatu_arrest;
procedure ohara_arrest;
procedure node001;
procedure node002;
procedure node003;
procedure node004;
procedure node005;
procedure node006;
procedure node007;
procedure node008;
procedure node009;
procedure node010;
procedure node011;
procedure node012;
procedure node013;
procedure node014;
procedure node015;
procedure node016;
procedure node017;
procedure node018;
procedure node019;
procedure node020;
procedure node021;
procedure node022;
procedure node023;
procedure node024;
procedure node025;
procedure node026;
procedure node027;
procedure node028;
procedure node029;
procedure node030;
procedure node031;
procedure node032;
procedure node033;
procedure node034;
procedure node035;
procedure node036;
procedure node037;
procedure node038;
procedure node039;
procedure node040;
procedure node041;
procedure node042;
procedure node043;
procedure node044;
procedure node045;
procedure node046;
procedure node047;
procedure node048;
procedure node049;
procedure node050;
procedure node051;
procedure node052;
procedure node053;
procedure node054;
procedure node055;
procedure node056;
procedure node057;
procedure node058;
procedure node059;
procedure node060;
procedure node061;
procedure node062;
procedure node063;
procedure node064;
procedure node065;
procedure node066;
procedure node067;
procedure node068;
procedure node069;
procedure node070;
procedure node071;
procedure node072;
procedure node073;
procedure node074;
procedure node075;
procedure node076;
procedure node077;
procedure node078;
procedure node079;
procedure node080;
procedure node994;
procedure node995;
procedure node996;
procedure node997;
procedure node998;
procedure node999;

import variable corben_box;
import variable corben_main_ptr;
import variable corben_west_ptr;
import variable lynch_ptr;
import variable wlynch_ptr;
import variable jordan_ptr;
import variable matatu_ptr;

variable ffire;
variable weapon;
variable item;
variable from46;
variable lockets;
variable jordan_show;
variable matatu_show;
variable ohara_show;
variable rot;
variable talker;
variable move_on;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777728) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777728)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777701) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777701)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    if (CUR_MAP_ARTEMPLE) then begin
        corben_main_ptr := self_obj;
    end
    else begin
        if (CUR_MAP_ARCAVES) then begin
            corben_west_ptr := self_obj;
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        call jordan_arrest();
    end
    else begin
        if (fixed_param == 1) then begin
            game_ui_enable;
            dialogue_system_enter;
        end
        else begin
            if (fixed_param == 2) then begin
                call matatu_arrest();
            end
            else begin
                if (fixed_param == 3) then begin
                    call ohara_arrest();
                end
            end
        end
    end
end

procedure combat_p_proc
begin
    if ((fixed_param == 4) and (local_var(5) == 1)) then begin
        item := create_object(weapon, 0, 0);
        add_obj_to_inven(self_obj, item);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        script_overrides;
        float_msg(self_obj, mstr(random(154, 155)), FLOAT_MSG_RED);
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_ENEMY_ELKO, 1);
    set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) - 100);
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - -15);
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if ((global_var(GVAR_ENEMY_ELKO) > 0) and (local_var(5) != 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if (CUR_MAP_ARTEMPLE) then begin
        if ((ohara_show == 1) and (tile_distance_objs(self_obj, lynch_ptr) < 5)) then begin
            ohara_show := 2;
            game_ui_disable;
            add_timer_event(self_obj, 4, 3);
        end
    end
    if ((global_var(GVAR_ELKO_HELPING_HANDS_FEMALE) == 1) or (global_var(GVAR_ELKO_HELPING_HANDS_MALE) == 1) and (((tile_num(self_obj) == 24880) and (CUR_MAP_ARTEMPLE)) == 0)) then begin
        move_to(self_obj, 24880, 0);
        anim(self_obj, 1000, 4);
    end
    if ((global_var(GVAR_ELKO_HELPING_HANDS_FEMALE) == 3) or (global_var(GVAR_ELKO_HELPING_HANDS_MALE) == 3) and (((tile_num(self_obj) == 24880) and (CUR_MAP_ARTEMPLE)) == 1) and (move_on == 0)) then begin
        move_on := 1;
        move_to(self_obj, local_var(10), 0);
        anim(self_obj, 1000, 3);
    end
    if ((map_var(26) == 1) and (global_var(GVAR_ELKO_ARROYAN_SICKNESS) == 0) and (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 2) and (talker == 0) and (map_var(7) > 0)) then begin
        talker := 1;
        add_timer_event(self_obj, 8, 1);
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (ffire < 3) then begin
            script_overrides;
            ffire := ffire + 1;
            float_msg(self_obj, mstr(random(151, 153)), FLOAT_MSG_RED);
        end
        else begin
            call node998();
        end
    end
end

procedure map_enter_p_proc
begin
    if ((CUR_MAP_ARCAVES) and ((global_var(GVAR_ELKO_ARROYAN_SICKNESS) >= 10) or (global_var(GVAR_ELKO_SHITSTORM) >= 7))) then begin
        destroy_object(self_obj);
    end
    if (CUR_MAP_ARTEMPLE) then begin
        corben_main_ptr := self_obj;
    end
    else begin
        if (CUR_MAP_ARCAVES) then begin
            corben_west_ptr := self_obj;
        end
    end
    if ((CUR_MAP_ARTEMPLE) and (local_var(10) == 0)) then begin
        set_local_var(10, tile_num(self_obj));
    end
    weapon := 8;
end

procedure map_exit_p_proc
begin
    if (ohara_show > 0) then begin
        set_global_var(GVAR_ELKO_GOLD_DIGGER, 6);
        move_to(self_obj, local_var(10), 0);
        anim(self_obj, 1000, 3);
        anim(lynch_ptr, 1000, 3);
    end
end

procedure map_update_p_proc
begin
    if (CUR_MAP_ARTEMPLE) then begin
        corben_main_ptr := self_obj;
    end
    else begin
        if (CUR_MAP_ARCAVES) then begin
            corben_west_ptr := self_obj;
        end
    end
end

procedure talk_p_proc
begin
    if (dude_iq > 3) then begin
        if (ohara_show == 0) then begin
            if (local_var(4) == 0) then begin
                move_obj_inven_to_obj(corben_box, self_obj);
                start_gdialog(1307, self_obj, 4, -1, -1);
                gsay_start;
                call node001();
                gsay_end;
                end_dialogue;
                move_obj_inven_to_obj(self_obj, corben_box);
            end
            else begin
                if (global_var(GVAR_ELKO_MAIN_QUESTS) < 3) then begin
                    if (local_var(9) != 1) then begin
                        if (map_var(4) < 1) then begin
                            move_obj_inven_to_obj(corben_box, self_obj);
                            start_gdialog(1307, self_obj, 4, -1, -1);
                            gsay_start;
                            if ((global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 7) or (map_var(26) == 1)) then begin
                                call node044();
                            end
                            else begin
                                if ((global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 12) and (local_var(11) > 0)) then begin
                                    call node032();
                                end
                                else begin
                                    if (local_var(7) == 0) then begin
                                        call node002();
                                    end
                                    else begin
                                        call node003();
                                    end
                                end
                            end
                            gsay_end;
                            end_dialogue;
                            move_obj_inven_to_obj(self_obj, corben_box);
                        end
                        else begin
                            if (map_var(4) == 1) then begin
                                float_msg(self_obj, mstr(211) + dude_name + mstr(212), FLOAT_MSG_RED);
                                display_mstr(210);
                            end
                            else begin
                                move_obj_inven_to_obj(corben_box, self_obj);
                                start_gdialog(1307, self_obj, 4, -1, -1);
                                gsay_start;
                                call node045();
                                gsay_end;
                                end_dialogue;
                                move_obj_inven_to_obj(self_obj, corben_box);
                            end
                        end
                    end
                    else begin
                        move_obj_inven_to_obj(corben_box, self_obj);
                        start_gdialog(1307, self_obj, 4, -1, -1);
                        gsay_start;
                        call node077();
                        gsay_end;
                        end_dialogue;
                        move_obj_inven_to_obj(self_obj, corben_box);
                    end
                end
                else begin
                    if (global_var(GVAR_ELKO_MAIN_QUESTS) == 3) then begin
                        if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) == 1) then begin
                            float_msg(self_obj, mstr(230) + dude_name + mstr(231), FLOAT_MSG_NORMAL);
                        end
                        else begin
                            if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) == 2) then begin
                                if (map_var(3) == 0) then begin
                                    float_msg(self_obj, mstr(220) + dude_name + mstr(221), FLOAT_MSG_NORMAL);
                                end
                                else begin
                                    if (map_var(3) == 1) then begin
                                        move_obj_inven_to_obj(corben_box, self_obj);
                                        start_gdialog(1307, self_obj, 4, -1, -1);
                                        gsay_start;
                                        call node032();
                                        gsay_end;
                                        end_dialogue;
                                        move_obj_inven_to_obj(self_obj, corben_box);
                                    end
                                    else begin
                                        move_obj_inven_to_obj(corben_box, self_obj);
                                        start_gdialog(1307, self_obj, 4, -1, -1);
                                        gsay_start;
                                        call node037();
                                        gsay_end;
                                        end_dialogue;
                                        move_obj_inven_to_obj(self_obj, corben_box);
                                    end
                                end
                            end
                            else begin
                                if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) < 8) then begin
                                    if (map_var(8) == 0) then begin
                                        move_obj_inven_to_obj(corben_box, self_obj);
                                        start_gdialog(1307, self_obj, 4, -1, -1);
                                        gsay_start;
                                        call node047();
                                        gsay_end;
                                        end_dialogue;
                                        move_obj_inven_to_obj(self_obj, corben_box);
                                    end
                                    else begin
                                        move_obj_inven_to_obj(corben_box, self_obj);
                                        start_gdialog(1307, self_obj, 4, -1, -1);
                                        gsay_start;
                                        call node048();
                                        gsay_end;
                                        end_dialogue;
                                        move_obj_inven_to_obj(self_obj, corben_box);
                                    end
                                end
                                else begin
                                    if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) < 10) then begin
                                        float_msg(self_obj, mstr(240), FLOAT_MSG_RED);
                                    end
                                    else begin
                                        if (global_var(GVAR_ELKO_MATATU_STATUS) <= 1) then begin
                                            move_obj_inven_to_obj(corben_box, self_obj);
                                            start_gdialog(1307, self_obj, 4, -1, -1);
                                            gsay_start;
                                            call node052();
                                            gsay_end;
                                            end_dialogue;
                                            move_obj_inven_to_obj(self_obj, corben_box);
                                        end
                                        else begin
                                            move_obj_inven_to_obj(corben_box, self_obj);
                                            start_gdialog(1307, self_obj, 4, -1, -1);
                                            gsay_start;
                                            call node056();
                                            gsay_end;
                                            end_dialogue;
                                            move_obj_inven_to_obj(self_obj, corben_box);
                                        end
                                    end
                                end
                            end
                        end
                    end
                    else begin
                        if (local_var(9) != 1) then begin
                            move_obj_inven_to_obj(corben_box, self_obj);
                            start_gdialog(1307, self_obj, 4, -1, -1);
                            gsay_start;
                            call node060();
                            gsay_end;
                            end_dialogue;
                            move_obj_inven_to_obj(self_obj, corben_box);
                        end
                        else begin
                            move_obj_inven_to_obj(corben_box, self_obj);
                            start_gdialog(1307, self_obj, 4, -1, -1);
                            gsay_start;
                            call node077();
                            gsay_end;
                            end_dialogue;
                            move_obj_inven_to_obj(self_obj, corben_box);
                        end
                    end
                end
            end
        end
        else begin
            float_msg(self_obj, mstr(290), FLOAT_MSG_YELLOW);
        end
    end
    else begin
        if (global_var(GVAR_ELKO_MAIN_QUESTS) == 1) then begin
            if (global_var(GVAR_ELKO_ERRAND_DUDE) == 0) then begin
                move_obj_inven_to_obj(corben_box, self_obj);
                start_gdialog(1307, self_obj, 4, -1, -1);
                gsay_start;
                call node061();
                gsay_end;
                end_dialogue;
                move_obj_inven_to_obj(self_obj, corben_box);
            end
            else begin
                if (global_var(GVAR_ELKO_ERRAND_DUDE) == 1) then begin
                    float_msg(self_obj, mstr(250), FLOAT_MSG_YELLOW);
                end
                else begin
                    if (global_var(GVAR_ELKO_ERRAND_DUDE) == 2) then begin
                        move_obj_inven_to_obj(corben_box, self_obj);
                        start_gdialog(1307, self_obj, 4, -1, -1);
                        gsay_start;
                        call node066();
                        gsay_end;
                        end_dialogue;
                        move_obj_inven_to_obj(self_obj, corben_box);
                    end
                    else begin
                        if (global_var(GVAR_ELKO_ERRAND_DUDE) < 7) then begin
                            float_msg(self_obj, mstr(260), FLOAT_MSG_YELLOW);
                        end
                        else begin
                            move_obj_inven_to_obj(corben_box, self_obj);
                            start_gdialog(1307, self_obj, 4, -1, -1);
                            gsay_start;
                            call node073();
                            gsay_end;
                            end_dialogue;
                            move_obj_inven_to_obj(self_obj, corben_box);
                        end
                    end
                end
            end
        end
        else begin
            if (((tile_num(self_obj) == 24880) and (CUR_MAP_ARTEMPLE)) == 0) then begin
                move_obj_inven_to_obj(corben_box, self_obj);
                start_gdialog(1307, self_obj, 4, -1, -1);
                gsay_start;
                call node076();
                gsay_end;
                end_dialogue;
                move_obj_inven_to_obj(self_obj, corben_box);
            end
            else begin
                float_msg(self_obj, mstr(270), FLOAT_MSG_YELLOW);
                fade_out;
                move_to(dude_obj, map_var(10), 0);
                fade_in;
            end
        end
    end
    if (jordan_show == 1) then begin
        add_timer_event(self_obj, 15, 0);
    end
    if (ohara_show == 1) then begin
        add_timer_event(self_obj, 4, 3);
    end
end

procedure barter
begin
    if (dude_iq > 3) then begin
        gdialog_mod_barter(-20);
    end
    else begin
        gdialog_mod_barter(-25);
    end
    call node015();
end

procedure jordan_arrest
begin
    float_msg(self_obj, " ", FLOAT_MSG_YELLOW);
    float_msg(jordan_ptr, " ", FLOAT_MSG_YELLOW);
    float_msg(self_obj, 0, FLOAT_MSG_NORMAL);
    float_msg(jordan_ptr, 0, FLOAT_MSG_NORMAL);
    if (jordan_show == 1) then begin
        jordan_show := jordan_show + 1;
        float_msg(jordan_ptr, mstr(200), FLOAT_MSG_NORMAL);
        add_timer_event(self_obj, game_ticks(3), 0);
    end
    else begin
        if (jordan_show == 2) then begin
            jordan_show := jordan_show + 1;
            float_msg(self_obj, mstr(201), FLOAT_MSG_RED);
            add_timer_event(self_obj, game_ticks(5), 0);
        end
        else begin
            if (jordan_show == 3) then begin
                jordan_show := jordan_show + 1;
                float_msg(jordan_ptr, mstr(202), FLOAT_MSG_NORMAL);
                add_timer_event(self_obj, game_ticks(4), 0);
            end
            else begin
                if (jordan_show == 4) then begin
                    fade_out;
                    set_local_var(11, 1);
                    set_map_var(14, 1);
                    jordan_show := 0;
                    if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) < 7) then begin
                        set_global_var(GVAR_ELKO_SICK_JONAS_QUEST, 7);
                    end
                    move_to(self_obj, local_var(10), 0);
                    anim(self_obj, 1000, 3);
                    move_to(jordan_ptr, 25697, 0);
                    anim(jordan_ptr, 1000, 2);
                    move_to(dude_obj, 26300, 0);
                    anim(dude_obj, 1000, 0);
                    add_timer_event(self_obj, game_ticks(2), 1);
                    fade_in;
                end
            end
        end
    end
end

procedure matatu_arrest
begin
    if (matatu_show != 2) then begin
        float_msg(self_obj, " ", FLOAT_MSG_YELLOW);
        float_msg(self_obj, 0, FLOAT_MSG_NORMAL);
    end
    if (matatu_show != 6) then begin
        float_msg(matatu_ptr, " ", FLOAT_MSG_YELLOW);
        float_msg(matatu_ptr, 0, FLOAT_MSG_NORMAL);
    end
    float_msg(wlynch_ptr, " ", FLOAT_MSG_YELLOW);
    float_msg(wlynch_ptr, 0, FLOAT_MSG_NORMAL);
    if (matatu_show == 0) then begin
        matatu_show := matatu_show + 1;
        game_ui_disable;
        float_msg(matatu_ptr, mstr(160), FLOAT_MSG_RED);
        add_timer_event(self_obj, game_ticks(4), 2);
    end
    else begin
        if (matatu_show == 1) then begin
            matatu_show := matatu_show + 1;
            float_msg(self_obj, mstr(161), FLOAT_MSG_GREEN);
            add_timer_event(self_obj, game_ticks(4), 2);
        end
        else begin
            if (matatu_show == 2) then begin
                matatu_show := matatu_show + 1;
                set_map_var(1, 2);
                add_timer_event(self_obj, game_ticks(1), 2);
            end
            else begin
                if (matatu_show == 3) then begin
                    matatu_show := matatu_show + 1;
                    float_msg(matatu_ptr, mstr(162), FLOAT_MSG_RED);
                    add_timer_event(self_obj, game_ticks(5), 2);
                end
                else begin
                    if (matatu_show == 4) then begin
                        matatu_show := matatu_show + 1;
                        float_msg(self_obj, mstr(163), FLOAT_MSG_GREEN);
                        add_timer_event(self_obj, game_ticks(7), 2);
                    end
                    else begin
                        if (matatu_show == 5) then begin
                            matatu_show := matatu_show + 1;
                            float_msg(matatu_ptr, mstr(164), FLOAT_MSG_RED);
                            add_timer_event(self_obj, game_ticks(5), 2);
                        end
                        else begin
                            if (matatu_show == 6) then begin
                                matatu_show := matatu_show + 1;
                                reg_anim_func(2, wlynch_ptr);
                                reg_anim_func(1, 1);
                                animate_move_obj_to_tile(wlynch_ptr, tile_num_in_direction(tile_num(matatu_ptr), 2, 1), 0);
                                reg_anim_func(3, 0);
                                add_timer_event(self_obj, 2, 2);
                            end
                            else begin
                                if (matatu_show == 7) then begin
                                    matatu_show := matatu_show + 1;
                                    float_msg(wlynch_ptr, mstr(165), FLOAT_MSG_LIGHT_RED);
                                    add_timer_event(self_obj, game_ticks(3), 2);
                                end
                                else begin
                                    if (matatu_show == 8) then begin
                                        matatu_show := matatu_show + 1;
                                        set_map_var(1, 3);
                                        reg_anim_func(2, wlynch_ptr);
                                        reg_anim_func(1, 1);
                                        reg_anim_animate(wlynch_ptr, 11, -1);
                                        reg_anim_func(3, 0);
                                        add_timer_event(self_obj, game_ticks(4), 2);
                                    end
                                    else begin
                                        if (matatu_show == 9) then begin
                                            matatu_show := matatu_show + 1;
                                            fade_out;
                                            display_mstr(166);
                                            if (dude_iq > 3) then begin
                                                give_exp_points(500);
                                                display_msg(g_mstr(100) + 500 + g_mstr(101));
                                            end
                                            else begin
                                                give_exp_points(250);
                                                display_msg(g_mstr(100) + 250 + g_mstr(101));
                                            end
                                            set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 4);
                                            debug_msg("Player gains " + 4 + " Karma Points.");
                                            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                                            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                                            set_global_var(GVAR_KARMA_DEFENDER, 0);
                                            set_global_var(GVAR_KARMA_WANDERER, 0);
                                            set_global_var(GVAR_KARMA_BETRAYER, 0);
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                                            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                                            set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                                            if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                                                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                                            end
                                            else begin
                                                if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                                                    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                                                end
                                                else begin
                                                    if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                                                        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                                                    end
                                                    else begin
                                                        if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                                            set_global_var(GVAR_KARMA_DEFENDER, 1);
                                                        end
                                                        else begin
                                                            if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                                                set_global_var(GVAR_KARMA_WANDERER, 1);
                                                            end
                                                            else begin
                                                                if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                                                    set_global_var(GVAR_KARMA_BETRAYER, 1);
                                                                end
                                                                else begin
                                                                    if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                                                        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                                                    end
                                                                    else begin
                                                                        if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                                            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                                                        end
                                                                        else begin
                                                                            set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                            set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) + 10);
                                            set_global_var(GVAR_ELKO_MATATU_STATUS, 1);
                                            if (dude_iq > 3) then begin
                                                set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 10);
                                            end
                                            else begin
                                                set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 0);
                                                set_global_var(GVAR_ELKO_SHITSTORM, 6);
                                                set_global_var(GVAR_ELKO_MAIN_QUESTS, 6);
                                            end
                                            destroy_object(matatu_ptr);
                                            add_timer_event(self_obj, 7, 2);
                                        end
                                        else begin
                                            if (matatu_show == 10) then begin
                                                matatu_show := 0;
                                                game_ui_enable;
                                                load_map(126, 1);
                                                fade_in;
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure ohara_arrest
begin
    if (ohara_show == 1) then begin
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(lynch_ptr), 5, 3), 0);
        reg_anim_func(3, 0);
    end
    else begin
        if (ohara_show == 2) then begin
            ohara_show := ohara_show + 1;
            anim(lynch_ptr, 1000, 5);
            float_msg(self_obj, mstr(291), FLOAT_MSG_GREEN);
            add_timer_event(self_obj, game_ticks(4), 3);
        end
        else begin
            if (ohara_show == 3) then begin
                ohara_show := ohara_show + 1;
                float_msg(lynch_ptr, mstr(292), FLOAT_MSG_RED);
                add_timer_event(self_obj, game_ticks(3), 3);
            end
            else begin
                if (ohara_show == 4) then begin
                    ohara_show := ohara_show + 1;
                    fade_out;
                    game_time_advance(10 * (60 * 10));
                    set_global_var(GVAR_ELKO_GOLD_DIGGER, 6);
                    move_to(self_obj, local_var(10), 0);
                    anim(self_obj, 1000, 3);
                    anim(lynch_ptr, 1000, 3);
                    add_timer_event(self_obj, game_ticks(1), 3);
                end
                else begin
                    if (ohara_show == 5) then begin
                        ohara_show := 0;
                        game_ui_enable;
                        fade_in;
                        dialogue_system_enter;
                    end
                end
            end
        end
    end
end

procedure node001
begin
    set_local_var(4, 1);
    Reply(300);
    giq_option(4, NAME, 301, node004, GOOD_REACTION);
    giq_option(4, NAME, 302, node004, NEUTRAL_REACTION);
end

procedure node002
begin
    Reply(310);
    giq_option(4, NAME, 311, barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 312, node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 313, node013, NEUTRAL_REACTION);
    if ((global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 11) and (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) != 1)) then begin
        giq_option(4, NAME, 314, node027, GOOD_REACTION);
    end
    if ((global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 6) and (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 1)) then begin
        giq_option(4, NAME, 315, node042, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 316, node999, NEUTRAL_REACTION);
end

procedure node003
begin
    Reply(320);
    giq_option(4, NAME, 321, node008, GOOD_REACTION);
    giq_option(4, NAME, 322, barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 323, node999, BAD_REACTION);
end

procedure node004
begin
    Reply(330);
    giq_option(4, NAME, 331, node006, GOOD_REACTION);
    giq_option(4, NAME, 332, node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 333, node005, BAD_REACTION);
    giq_option(6, NAME, 334, node007, GOOD_REACTION);
end

procedure node005
begin
    Reply(340);
    giq_option(4, NAME, 341, node008, GOOD_REACTION);
    giq_option(4, NAME, 342, node997, BAD_REACTION);
end

procedure node006
begin
    Reply(350);
    giq_option(4, NAME, 351, node008, GOOD_REACTION);
end

procedure node007
begin
    Reply(360);
    giq_option(4, NAME, 361, node008, GOOD_REACTION);
end

procedure node008
begin
    set_global_var(GVAR_ELKO_SICK_JONAS_QUEST, 1);
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 1);
    if (local_var(7) > 0) then begin
        set_local_var(7, 0);
    end
    Reply(370);
    giq_option(4, NAME, 371, node009, NEUTRAL_REACTION);
end

procedure node009
begin
    Reply(380);
    giq_option(4, NAME, 381, node010, NEUTRAL_REACTION);
end

procedure node010
begin
    Reply(390);
    giq_option(4, NAME, 391, node011, NEUTRAL_REACTION);
end

procedure node011
begin
    Reply(400);
    giq_option(4, NAME, 401, node012, NEUTRAL_REACTION);
end

procedure node012
begin
    Reply(410);
    giq_option(4, NAME, 411, node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 412, node999, NEUTRAL_REACTION);
end

procedure node013
begin
    Reply(420);
    giq_option(4, NAME, 421, node999, NEUTRAL_REACTION);
end

procedure node014
begin
    Reply(430);
    giq_option(4, NAME, 431, node999, NEUTRAL_REACTION);
end

procedure node015
begin
    Reply(440);
    if (obj_is_carrying_obj_pid(self_obj, 538) > 0) then begin
        giq_option(1, NAME, 441, node078, BAD_REACTION);
    end
    if (obj_is_carrying_obj_pid(self_obj, 538) == 0) then begin
        giq_option(1, NAME, 442, node999, NEUTRAL_REACTION);
    end
end

procedure node016
begin
    Reply(450);
    giq_option(4, NAME, 451, barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 452, node017, NEUTRAL_REACTION);
    if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) < 11) then begin
        giq_option(4, NAME, 453, node024, NEUTRAL_REACTION);
    end
    if (map_var(2) == 1) then begin
        giq_option(4, NAME, 454, node026, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 455, node999, NEUTRAL_REACTION);
end

procedure node017
begin
    Reply(460);
    giq_option(4, NAME, 441, node018, NEUTRAL_REACTION);
end

procedure node018
begin
    Reply(470);
    if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) < 7) then begin
        giq_option(4, NAME, 471, node019, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_GOLD_DIGGER) < 6) then begin
        giq_option(4, NAME, 472, node020, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 473, node016, NEUTRAL_REACTION);
end

procedure node019
begin
    Reply(480);
    giq_option(4, NAME, 481, node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 482, node999, NEUTRAL_REACTION);
end

procedure node020
begin
    if (map_var(2) == 0) then begin
        set_map_var(2, 1);
    end
    Reply(490);
    giq_option(4, NAME, 491, node021, BAD_REACTION);
    giq_option(4, NAME, 492, node022, NEUTRAL_REACTION);
end

procedure node021
begin
    if (global_var(GVAR_ELKO_GOLD_DIGGER) > 1) then begin
        set_global_var(GVAR_ELKO_GOLD_DIGGER, 3);
    end
    Reply(500);
    giq_option(4, NAME, 501, node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 502, node999, NEUTRAL_REACTION);
    if (map_var(20) > 0) then begin
        giq_option(4, NAME, 503, node023, GOOD_REACTION);
    end
end

procedure node022
begin
    Reply(510);
    if (map_var(20) > 0) then begin
        giq_option(4, NAME, 512, node023, GOOD_REACTION);
    end
    giq_option(4, NAME, 511, node999, NEUTRAL_REACTION);
end

procedure node023
begin
    set_local_var(9, 1);
    display_mstr(280);
    give_exp_points(50);
    display_msg(g_mstr(100) + 50 + g_mstr(101));
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 6);
    debug_msg("Player gains " + 6 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) + 10);
    gsay_message(NAME, 520, GOOD_REACTION);
    call node994();
end

procedure node024
begin
    Reply(530);
    giq_option(4, NAME, 531, node025, NEUTRAL_REACTION);
end

procedure node025
begin
    Reply(540);
    giq_option(4, NAME, 542, node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 541, node999, NEUTRAL_REACTION);
end

procedure node026
begin
    set_map_var(2, 2);
    Reply(550);
    giq_option(4, NAME, 552, node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 551, node999, NEUTRAL_REACTION);
end

procedure node027
begin
    set_global_var(GVAR_ELKO_SICK_JONAS_QUEST, 12);
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 2);
    Reply(560);
    giq_option(4, NAME, 561, node028, NEUTRAL_REACTION);
end

procedure node028
begin
    item_caps_adjust(dude_obj, 100);
    Reply(mstr(570) + dude_name + mstr(571));
    giq_option(4, NAME, 572, node029, NEUTRAL_REACTION);
end

procedure node029
begin
    Reply(580);
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 3) then begin
        giq_option(4, NAME, 581, node038, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 5) then begin
        giq_option(4, NAME, 582, node030, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 4) then begin
        giq_option(4, NAME, 583, node040, NEUTRAL_REACTION);
    end
end

procedure node030
begin
    Reply(590);
    giq_option(4, NAME, 591, node031, NEUTRAL_REACTION);
end

procedure node031
begin
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 3);
    set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 2);
    Reply(mstr(600) + dude_name + mstr(601));
    giq_option(4, NAME, 602, node999, NEUTRAL_REACTION);
end

procedure node032
begin
    set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 3);
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 3);
    if (from46 > 0) then begin
        from46 := 0;
        item_caps_adjust(dude_obj, 100);
    end
    Reply(mstr(610) + dude_name + mstr(611));
    giq_option(4, NAME, 612, node033, NEUTRAL_REACTION);
    if (local_var(8) == 0) then begin
        giq_option(4, NAME, 613, node035, GOOD_REACTION);
    end
    if (local_var(8) > 0) then begin
        giq_option(4, NAME, 614, node034, NEUTRAL_REACTION);
    end
end

procedure node033
begin
    Reply(620);
    giq_option(4, NAME, 621, node036, NEUTRAL_REACTION);
end

procedure node034
begin
    Reply(mstr(630) + dude_name + mstr(631));
    giq_option(4, NAME, 632, node036, NEUTRAL_REACTION);
    giq_option(4, NAME, 633, node036, GOOD_REACTION);
end

procedure node035
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 1);
    debug_msg("Player gains " + 1 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(mstr(640) + dude_name + mstr(641));
    giq_option(4, NAME, 642, node036, NEUTRAL_REACTION);
end

procedure node036
begin
    Reply(mstr(650) + dude_name + mstr(651));
    giq_option(4, NAME, 652, node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 653, node999, BAD_REACTION);
end

procedure node037
begin
    Reply(mstr(660) + dude_name + mstr(661));
    giq_option(4, NAME, 662, barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 663, node999, NEUTRAL_REACTION);
end

procedure node038
begin
    Reply(670);
    giq_option(4, NAME, 671, node039, NEUTRAL_REACTION);
end

procedure node039
begin
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 3);
    set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 1);
    Reply(mstr(680) + dude_name + mstr(681));
    giq_option(4, NAME, 682, node999, NEUTRAL_REACTION);
end

procedure node040
begin
    Reply(690);
    giq_option(4, NAME, 691, node041, NEUTRAL_REACTION);
end

procedure node041
begin
    set_local_var(8, 1);
    Reply(700);
    giq_option(4, NAME, 701, node996, NEUTRAL_REACTION);
end

procedure node042
begin
    Reply(mstr(710) + dude_name + mstr(711));
    giq_option(4, NAME, 712, node043, NEUTRAL_REACTION);
end

procedure node043
begin
    Reply(720);
    giq_option(4, NAME, 721, node996, NEUTRAL_REACTION);
end

procedure node044
begin
    set_map_var(4, 1);
    if (obj_is_carrying_obj_pid(dude_obj, 534) == 0) then begin
        item := create_object(536, 0, 0);
        add_obj_to_inven(dude_obj, item);
        Reply(730);
    end
    else begin
        set_map_var(26, 2);
        Reply(731);
    end
    giq_option(4, NAME, 732, node999, NEUTRAL_REACTION);
end

procedure node045
begin
    set_local_var(8, 1);
    set_global_var(GVAR_ELKO_SICK_JONAS_QUEST, 12);
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 2);
    Reply(mstr(740) + dude_name + mstr(741));
    giq_option(4, NAME, 742, node046, GOOD_REACTION);
end

procedure node046
begin
    from46 := 1;
    Reply(mstr(750) + dude_name + mstr(751));
    giq_option(4, NAME, 752, node032, NEUTRAL_REACTION);
end

procedure node047
begin
    Reply(mstr(760) + dude_name + mstr(761));
    if ((obj_is_carrying_obj_pid(dude_obj, 544) > 0) and (obj_is_carrying_obj_pid(dude_obj, 545) > 0)) then begin
        giq_option(4, NAME, 764, node049, GOOD_REACTION);
    end
    giq_option(4, NAME, 762, barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 763, node999, NEUTRAL_REACTION);
end

procedure node048
begin
    Reply(mstr(770) + dude_name + mstr(771));
    giq_option(4, NAME, 772, node049, GOOD_REACTION);
end

procedure node049
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 544);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 544);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 544);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    if (obj_is_carrying_obj_pid(dude_obj, 545) > 0) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 545);
    end
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 545);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 545);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    item_caps_adjust(dude_obj, 25);
    Reply(mstr(780) + dude_name + mstr(781));
    giq_option(4, NAME, 782, node995, NEUTRAL_REACTION);
    if (dude_skill(SKILL_SPEECH) >= 15) then begin
        giq_option(4, NAME, 783, node051, GOOD_REACTION);
    end
    if (dude_skill(SKILL_SPEECH) < 15) then begin
        giq_option(4, NAME, 784, node050, GOOD_REACTION);
    end
end

procedure node050
begin
    Reply(790);
    giq_option(4, NAME, 791, node995, NEUTRAL_REACTION);
end

procedure node051
begin
    set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 9);
    Reply(800);
    giq_option(4, NAME, 801, node999, NEUTRAL_REACTION);
end

procedure node052
begin
    set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 11);
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 4);
    Reply(810);
    giq_option(4, NAME, 811, node053, GOOD_REACTION);
    giq_option(4, NAME, 812, node054, NEUTRAL_REACTION);
end

procedure node053
begin
    Reply(820);
    giq_option(4, NAME, 821, node055, GOOD_REACTION);
end

procedure node054
begin
    Reply(mstr(830) + dude_name + mstr(831));
    giq_option(4, NAME, 832, node055, BAD_REACTION);
    giq_option(4, NAME, 833, node055, NEUTRAL_REACTION);
end

procedure node055
begin
    Reply(840);
    giq_option(4, NAME, 841, node999, NEUTRAL_REACTION);
end

procedure node056
begin
    set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 11);
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 4);
    Reply(mstr(850) + dude_name + mstr(851));
    if (global_var(GVAR_ELKO_MATATU_STATUS) == 2) then begin
        giq_option(4, NAME, 853, node058, GOOD_REACTION);
    end
    if (global_var(GVAR_ELKO_MATATU_STATUS) == 3) then begin
        giq_option(4, NAME, 852, node057, NEUTRAL_REACTION);
    end
end

procedure node057
begin
    Reply(860);
    giq_option(4, NAME, 861, node059, NEUTRAL_REACTION);
end

procedure node058
begin
    Reply(mstr(870) + dude_name + mstr(871));
    giq_option(4, NAME, 872, node059, NEUTRAL_REACTION);
end

procedure node059
begin
    Reply(880);
    giq_option(4, NAME, 881, node999, NEUTRAL_REACTION);
end

procedure node060
begin
    Reply(mstr(890) + dude_name + mstr(891));
    giq_option(4, NAME, 892, barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 893, node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 894, node999, NEUTRAL_REACTION);
end

procedure node061
begin
    Reply(mstr(900) + dude_name + mstr(901));
    giq_option(-3, NAME, 902, node062, NEUTRAL_REACTION);
end

procedure node062
begin
    set_global_var(GVAR_ELKO_ERRAND_DUDE, 1);
    Reply(910);
    giq_option(-3, NAME, 911, node063, NEUTRAL_REACTION);
    giq_option(-3, NAME, 912, node063, GOOD_REACTION);
end

procedure node063
begin
    Reply(920);
    giq_option(-3, NAME, 921, node064, NEUTRAL_REACTION);
end

procedure node064
begin
    Reply(930);
    giq_option(-3, NAME, 931, node065, NEUTRAL_REACTION);
end

procedure node065
begin
    Reply(940);
    giq_option(-3, NAME, 941, node999, NEUTRAL_REACTION);
end

procedure node066
begin
    Reply(950);
    giq_option(-3, NAME, 951, node067, NEUTRAL_REACTION);
end

procedure node067
begin
    Reply(960);
    giq_option(-3, NAME, 961, node069, NEUTRAL_REACTION);
    giq_option(-3, NAME, 962, node068, BAD_REACTION);
end

procedure node068
begin
    Reply(970);
    giq_option(-3, NAME, 971, node069, NEUTRAL_REACTION);
end

procedure node069
begin
    Reply(980);
    giq_option(-3, NAME, 981, node070, NEUTRAL_REACTION);
    giq_option(-3, NAME, 982, node071, NEUTRAL_REACTION);
end

procedure node070
begin
    Reply(mstr(990) + dude_name + mstr(991) + dude_name + mstr(992));
    giq_option(-3, NAME, 993, node072, GOOD_REACTION);
end

procedure node071
begin
    Reply(1000);
    giq_option(-3, NAME, 1001, node072, NEUTRAL_REACTION);
end

procedure node072
begin
    set_global_var(GVAR_ELKO_ERRAND_DUDE, 3);
    item := create_object(289, 0, 0);
    add_obj_to_inven(dude_obj, item);
    Reply(1010);
    giq_option(-3, NAME, 1011, node999, NEUTRAL_REACTION);
end

procedure node073
begin
    Reply(1020);
    giq_option(-3, NAME, 1021, node074, NEUTRAL_REACTION);
end

procedure node074
begin
    set_global_var(GVAR_ELKO_MAIN_QUESTS, 2);
    set_global_var(GVAR_ELKO_ERRAND_DUDE, 8);
    give_exp_points(500);
    display_msg(g_mstr(100) + 500 + g_mstr(101));
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 8);
    debug_msg("Player gains " + 8 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) + 10);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 546);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 546);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 546);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    item_caps_adjust(dude_obj, 50);
    Reply(1030);
    giq_option(-3, NAME, 1031, node075, GOOD_REACTION);
end

procedure node075
begin
    Reply(1040);
    giq_option(-3, NAME, 1041, node999, NEUTRAL_REACTION);
end

procedure node076
begin
    Reply(1050);
    giq_option(-3, NAME, 1051, barter, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1052, node999, NEUTRAL_REACTION);
end

procedure node077
begin
    set_local_var(9, 2);
    Reply(mstr(1060) + dude_name + mstr(1061));
    giq_option(4, NAME, 1064, barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 1062, node999, BAD_REACTION);
    giq_option(4, NAME, 1063, node999, GOOD_REACTION);
end

procedure node078
begin
    set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) - 5);
    lockets := obj_is_carrying_obj_pid(self_obj, 538);
    removed_qty := obj_is_carrying_obj_pid(self_obj, 538);
    if (lockets < removed_qty) then begin
        removed_qty := lockets;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(self_obj, 538);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(self_obj, 538);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(self_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(self_obj, restock_obj);
                    add_obj_to_inven(self_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                    inven_unwield(self_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    if (dude_gender == 0) then begin
        Reply(mstr(1070) + dude_name + mstr(1071) + dude_name + mstr(1072));
    end
    else begin
        Reply(mstr(1070) + dude_name + mstr(1071) + dude_name + mstr(1073));
    end
    giq_option(-3, NAME, 1074, node999, BAD_REACTION);
end

procedure node079
begin
end

procedure node080
begin
end

procedure node994
begin
    ohara_show := 1;
end

procedure node995
begin
    set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 8);
    load_map(3, 0);
end

procedure node996
begin
    fade_out;
    add_timer_event(jordan_ptr, 1, 5);
    game_ui_disable;
    move_to(self_obj, 23468, 0);
    anim(self_obj, 1000, 2);
    move_to(dude_obj, 23466, 0);
    anim(dude_obj, 1000, 3);
    jordan_show := 1;
    fade_in;
end

procedure node997
begin
    set_local_var(7, 1);
end

procedure node998
begin
    set_local_var(5, 2);
end

procedure node999
begin
end
