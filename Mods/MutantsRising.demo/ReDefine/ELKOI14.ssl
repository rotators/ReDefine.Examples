variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure map_update_p_proc;
procedure use_obj_on_p_proc;
procedure pickup_p_proc;
procedure timed_event_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_p_proc;
procedure talk_p_proc;
procedure node001;
procedure node002;
procedure node003;
procedure node004;
procedure node997;
procedure node999;
procedure pick_success;
procedure pick_fail;

variable skill;
variable attempt;
variable pick;
variable tool;
variable lockpick_req;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777728) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777728)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777701) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777701)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure map_update_p_proc
begin
    if (difficulty_level == 0) then begin
        lockpick_req := 100;
    end
    else begin
        if (difficulty_level == 1) then begin
            lockpick_req := 80;
        end
        else begin
            if (difficulty_level == 2) then begin
                lockpick_req := 65;
            end
        end
    end
end

procedure use_obj_on_p_proc
begin
    tool := obj_pid(obj_being_used_with);
    if (tool == 532) then begin
        if ((CUR_MAP_ARVILLAG) and (obj_pid(self_obj) != 646)) then begin
            script_overrides;
            pick := 1;
            call pick_success();
        end
        else begin
            if (obj_pid(self_obj) == 646) then begin
                script_overrides;
                display_mstr(244);
            end
        end
    end
    else begin
        if ((tool == 84) or (tool == 410)) then begin
            if (obj_pid(self_obj) == 646) then begin
                script_overrides;
                dialogue_system_enter;
            end
            else begin
                if ((CUR_MAP_ARTEMPLE) and (obj_pid(self_obj) != 646) and (elevation(self_obj) == 0)) then begin
                    script_overrides;
                    display_mstr(352);
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if ((CUR_MAP_ARVILLAG) and (obj_pid(self_obj) != 646)) then begin
        add_timer_event(self_obj, 10, 0);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        display_mstr(305);
        set_map_var(2, 1);
    end
end

procedure damage_p_proc
begin
    if (obj_pid(self_obj) == 646) then begin
        if (weapon_dmg_type(target_obj) == 6) then begin
            display_mstr(240);
            set_global_var(GVAR_OPENED_CORBEN_STRONGBOX, 2);
            destroy_object(self_obj);
        end
    end
end

procedure map_enter_p_proc
begin
end

procedure description_p_proc
begin
    if ((CUR_MAP_ARTEMPLE) and (obj_pid(self_obj) != 646) and (elevation(self_obj) == 1)) then begin
        script_overrides;
        display_mstr(104);
    end
end

procedure use_skill_on_p_proc
begin
    skill := action_being_used;
    if (skill == 9) then begin
        if ((CUR_MAP_ARTEMPLE) and (obj_pid(self_obj) != 646) and (elevation(self_obj) == 1)) then begin
            script_overrides;
            set_local_var(1, local_var(1) + 1);
            if (local_var(1) < 4) then begin
                display_mstr(101);
            end
            else begin
                if (local_var(1) < 7) then begin
                    display_mstr(102);
                end
                else begin
                    display_mstr(103);
                end
            end
        end
        else begin
            if ((CUR_MAP_ARVILLAG) and (obj_pid(self_obj) != 646)) then begin
                if (is_success(roll_vs_skill(dude_obj, 9, 10))) then begin
                    call pick_success();
                end
                else begin
                    call pick_fail();
                end
            end
            else begin
                if (obj_pid(self_obj) == 646) then begin
                    script_overrides;
                    dialogue_system_enter;
                end
                else begin
                    if ((CUR_MAP_ARTEMPLE) and (obj_pid(self_obj) != 646) and (elevation(self_obj) == 0)) then begin
                        script_overrides;
                        display_mstr(351);
                    end
                end
            end
        end
    end
end

procedure use_p_proc
begin
    if ((CUR_MAP_ARTEMPLE) and (obj_pid(self_obj) != 646) and (elevation(self_obj) == 1)) then begin
        script_overrides;
        display_mstr(100);
    end
    else begin
        if ((CUR_MAP_ARVILLAG) and (obj_pid(self_obj) != 646)) then begin
            if (local_var(2) == 0) then begin
                script_overrides;
                if (local_var(3) == 0) then begin
                    set_local_var(3, 1);
                    display_mstr(300);
                end
                else begin
                    display_mstr(301);
                end
            end
        end
        else begin
            if (obj_pid(self_obj) == 646) then begin
                if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 646) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 646)) then begin
                    dialogue_system_enter;
                end
                else begin
                    display_mstr(241);
                end
            end
            else begin
                if ((CUR_MAP_ARTEMPLE) and (obj_pid(self_obj) != 646) and (elevation(self_obj) == 0)) then begin
                    script_overrides;
                    display_mstr(350);
                end
            end
        end
    end
end

procedure talk_p_proc
begin
    if ((local_var(2) == 1) and (dude_skill(SKILL_LOCKPICK) > 65)) then begin
        set_local_var(2, 0);
    end
    if (local_var(2) != 1) then begin
        start_gdialog(1543, self_obj, 4, -1, -1);
        gsay_start;
        call node001();
        gsay_end;
        end_dialogue;
        if (global_var(GVAR_OPENED_CORBEN_STRONGBOX) > 0) then begin
            add_timer_event(dude_obj, 2, 16);
        end
    end
    else begin
        display_mstr(242);
    end
end

procedure node001
begin
    Reply(200);
    if (dude_skill(SKILL_LOCKPICK) > lockpick_req) then begin
        giq_option(4, NAME, 201, node002, NEUTRAL_REACTION);
    end
    if (dude_skill(SKILL_LOCKPICK) <= lockpick_req) then begin
        giq_option(4, NAME, 201, node003, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 202, node999, NEUTRAL_REACTION);
end

procedure node002
begin
    if (dude_skill(SKILL_LOCKPICK) < (lockpick_req + 25)) then begin
        Reply(210);
    end
    else begin
        Reply(211);
    end
    giq_option(4, NAME, 212, node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 213, node999, NEUTRAL_REACTION);
end

procedure node003
begin
    attempt := attempt + 1;
    if ((obj_is_carrying_obj_pid(dude_obj, 84) == 0) and (obj_is_carrying_obj_pid(dude_obj, 410) == 0)) then begin
        Reply(220);
    end
    else begin
        Reply(221);
    end
    if (attempt < 4) then begin
        giq_option(4, NAME, 222, node003, NEUTRAL_REACTION);
    end
    if (attempt >= 4) then begin
        giq_option(4, NAME, 222, node004, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 223, node999, NEUTRAL_REACTION);
end

procedure node004
begin
    set_local_var(2, 1);
    Reply(230);
    giq_option(4, NAME, 231, node999, NEUTRAL_REACTION);
end

procedure node997
begin
    set_global_var(GVAR_OPENED_CORBEN_STRONGBOX, 1);
    display_mstr(243);
    give_exp_points(50);
    display_msg(g_mstr(100) + 50 + g_mstr(101));
    item_caps_adjust(dude_obj, 662);
end

procedure node999
begin
end

procedure pick_success
begin
    set_local_var(2, 1);
    if (pick == 0) then begin
        display_mstr(302);
    end
    else begin
        display_mstr(304);
    end
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
        give_exp_points(25);
        display_msg(g_mstr(100) + 25 + g_mstr(101));
    end
end

procedure pick_fail
begin
    display_mstr(303);
end
