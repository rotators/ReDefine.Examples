variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure timed_event_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure sex;
procedure cass_show;
procedure node023;
procedure node022;
procedure node021;
procedure node020;
procedure node019;
procedure node018;
procedure node017;
procedure node016;
procedure node015;
procedure node014;
procedure node013;
procedure node012;
procedure node011;
procedure node010;
procedure node009;
procedure node008;
procedure node007;
procedure node006;
procedure node005;
procedure node004;
procedure node003;
procedure node002;
procedure node001;
procedure node998;
procedure node999;

import variable kirki_ptr;
import variable cassidy_ptr;
import variable temoak_ptr;

variable time;
variable item;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777728) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777728)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777701) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777701)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    kirki_ptr := self_obj;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        call cass_show();
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) - 50);
        set_global_var(GVAR_ENEMY_ELKO, 1);
        if (source_obj == dude_obj) then begin
            set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
            if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
                if (source_obj == dude_obj) then begin
                    set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                    set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - -15);
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                    set_global_var(GVAR_KARMA_DEFENDER, 0);
                    set_global_var(GVAR_KARMA_WANDERER, 0);
                    set_global_var(GVAR_KARMA_BETRAYER, 0);
                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                        set_global_var(GVAR_KARMA_WANDERER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                            end
                                            else begin
                                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                                end
                                                else begin
                                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                set_global_var(GVAR_BERSERKER_REPUTATION, 0);
            end
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
            end
            set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
            debug_msg("Player gains " + -10 + " Karma Points.");
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
            set_global_var(GVAR_KARMA_DEFENDER, 0);
            set_global_var(GVAR_KARMA_WANDERER, 0);
            set_global_var(GVAR_KARMA_BETRAYER, 0);
            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
            set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
            if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                            set_global_var(GVAR_KARMA_DEFENDER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                set_global_var(GVAR_KARMA_WANDERER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                    set_global_var(GVAR_KARMA_BETRAYER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                        end
                                        else begin
                                            set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call node998();
    end
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if ((global_var(GVAR_ENEMY_ELKO) > 0) and (local_var(5) != 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if ((tile_num(cassidy_ptr) == 10916) and (obj_get_rot(cassidy_ptr) != 2)) then begin
        anim(cassidy_ptr, 1000, 2);
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        call node998();
    end
end

procedure map_enter_p_proc
begin
    kirki_ptr := self_obj;
    time := game_time_hour;
    if (dude_iq > 3) then begin
        if ((time >= 1900) or (time < 600)) then begin
            move_to(self_obj, 14534, 0);
            anim(self_obj, 1000, 2);
            move_to(temoak_ptr, 12720, 0);
            anim(temoak_ptr, 1000, 2);
            if (obj_is_carrying_obj_pid(self_obj, 7) > 0) then begin
                item := obj_carrying_pid_obj(self_obj, 7);
                if ((critter_inven_obj(self_obj, 2) == item) or (critter_inven_obj(self_obj, 1) == item)) then begin
                    inven_unwield(self_obj);
                end
            end
        end
        else begin
            move_to(self_obj, 12720, 0);
            anim(self_obj, 1000, 2);
            move_to(temoak_ptr, 12718, 0);
            if (obj_is_carrying_obj_pid(self_obj, 7) > 0) then begin
                item := obj_carrying_pid_obj(self_obj, 7);
                if ((critter_inven_obj(self_obj, 2) != item) or (critter_inven_obj(self_obj, 1) != item)) then begin
                    wield_obj_critter(self_obj, item);
                end
            end
        end
    end
    else begin
        move_to(self_obj, 12720, 0);
        anim(self_obj, 1000, 2);
        move_to(temoak_ptr, 12718, 0);
        if (obj_is_carrying_obj_pid(self_obj, 7) > 0) then begin
            item := obj_carrying_pid_obj(self_obj, 7);
            if ((critter_inven_obj(self_obj, 2) != item) or (critter_inven_obj(self_obj, 1) != item)) then begin
                wield_obj_critter(self_obj, item);
            end
        end
    end
end

procedure map_update_p_proc
begin
    kirki_ptr := self_obj;
    time := game_time_hour;
    if (combat_is_initialized == 0) then begin
        if (dude_iq > 3) then begin
            if ((time >= 1900) or (time < 600)) then begin
                if (tile_num(self_obj) != 14534) then begin
                    fade_out;
                    move_to(self_obj, 14534, 0);
                    anim(self_obj, 1000, 2);
                    move_to(temoak_ptr, 12720, 0);
                    anim(temoak_ptr, 1000, 2);
                    fade_in;
                    if (obj_is_carrying_obj_pid(self_obj, 7) > 0) then begin
                        item := obj_carrying_pid_obj(self_obj, 7);
                        if ((critter_inven_obj(self_obj, 2) == item) or (critter_inven_obj(self_obj, 1) == item)) then begin
                            inven_unwield(self_obj);
                        end
                    end
                end
            end
            else begin
                if (tile_num(self_obj) != 12720) then begin
                    fade_out;
                    move_to(self_obj, 12720, 0);
                    anim(self_obj, 1000, 2);
                    move_to(temoak_ptr, 12718, 0);
                    fade_in;
                    if (obj_is_carrying_obj_pid(self_obj, 7) > 0) then begin
                        item := obj_carrying_pid_obj(self_obj, 7);
                        if ((critter_inven_obj(self_obj, 2) != item) or (critter_inven_obj(self_obj, 1) != item)) then begin
                            wield_obj_critter(self_obj, item);
                        end
                    end
                end
            end
        end
    end
end

procedure talk_p_proc
begin
    if (tile_num(self_obj) == 12720) then begin
        if (dude_iq > 3) then begin
            if (local_var(8) == 0) then begin
                start_gdialog(1320, self_obj, 4, -1, -1);
                gsay_start;
                call node001();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (local_var(8) == 1) then begin
                    float_msg(self_obj, mstr(210), FLOAT_MSG_YELLOW);
                end
                else begin
                    start_gdialog(1320, self_obj, 4, -1, -1);
                    gsay_start;
                    call node003();
                    gsay_end;
                    end_dialogue;
                end
            end
        end
        else begin
            if (global_var(GVAR_ELKO_SHITSTORM) != 2) then begin
                start_gdialog(1320, self_obj, 4, -1, -1);
                gsay_start;
                call node021();
                gsay_end;
                end_dialogue;
            end
            else begin
                float_msg(self_obj, mstr(261), FLOAT_MSG_YELLOW);
            end
        end
    end
    else begin
        if (dude_iq > 3) then begin
            if (local_var(8) == 0) then begin
                if (local_var(9) == 0) then begin
                    set_local_var(9, 1);
                    start_gdialog(1320, self_obj, 4, -1, -1);
                    gsay_start;
                    call node002();
                    gsay_end;
                    end_dialogue;
                    if (local_var(8) == 2) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        reg_anim_animate(self_obj, 20, -1);
                        reg_anim_func(3, 0);
                    end
                end
                else begin
                    float_msg(self_obj, mstr(200), FLOAT_MSG_YELLOW);
                end
            end
            else begin
                if (local_var(8) == 1) then begin
                    float_msg(self_obj, mstr(241), FLOAT_MSG_LIGHT_RED);
                end
                else begin
                    float_msg(self_obj, mstr(240), FLOAT_MSG_YELLOW);
                end
            end
        end
        else begin
            float_msg(self_obj, mstr(260), FLOAT_MSG_RED);
        end
    end
end

procedure sex
begin
    fade_out;
    game_time_advance(dude_endurance * random(4, 8) * (60 * 10));
    set_global_var(GVAR_PLAYER_SEX_LEVEL, global_var(194) + (((((dude_charisma * 50) + (dude_endurance * 25) + (get_critter_stat(dude_obj, STAT_ag) * 13) + (dude_strength * 12)) / 100) + (has_trait(TRAIT_PERK, dude_obj, PERK_kama_sutra_perk) * 2) + has_trait(2, dude_obj, 13) + (((global_var(GVAR_PLAYER_SEX_LEVEL) >= 100) or (global_var(GVAR_NEW_RENO_PORN_STAR) > 0)) * 2 * (dude_obj == dude_obj))) * 1));
    if (global_var(GVAR_SEX_COUNTER) >= 9) then begin
        set_global_var(GVAR_SEXPERT, 1);
    end
    if (((((dude_charisma * 50) + (dude_endurance * 25) + (get_critter_stat(dude_obj, STAT_ag) * 13) + (dude_strength * 12)) / 100) + (has_trait(TRAIT_PERK, dude_obj, PERK_kama_sutra_perk) * 2) + has_trait(2, dude_obj, 13) + (((global_var(GVAR_PLAYER_SEX_LEVEL) >= 100) or (global_var(GVAR_NEW_RENO_PORN_STAR) > 0)) * 2 * (dude_obj == dude_obj))) >= 9) then begin
        set_global_var(GVAR_GIGALO, 1);
    end
    set_global_var(GVAR_SEX_COUNTER, global_var(GVAR_SEX_COUNTER) + 1);
    fade_in;
    if (((((dude_charisma * 50) + (dude_endurance * 25) + (get_critter_stat(dude_obj, STAT_ag) * 13) + (dude_strength * 12)) / 100) + (has_trait(TRAIT_PERK, dude_obj, PERK_kama_sutra_perk) * 2) + has_trait(2, dude_obj, 13) + (((global_var(GVAR_PLAYER_SEX_LEVEL) >= 100) or (global_var(GVAR_NEW_RENO_PORN_STAR) > 0)) * 2 * (dude_obj == dude_obj))) >= 5) then begin
        call node016();
    end
    else begin
        call node015();
    end
end

procedure cass_show
begin
    if (map_var(6) < 9) then begin
        float_msg(self_obj, " ", FLOAT_MSG_YELLOW);
        float_msg(cassidy_ptr, " ", FLOAT_MSG_YELLOW);
        float_msg(self_obj, 0, FLOAT_MSG_NORMAL);
        float_msg(cassidy_ptr, 0, FLOAT_MSG_NORMAL);
    end
    if (map_var(6) == 1) then begin
        set_map_var(6, map_var(6) + 1);
        float_msg(cassidy_ptr, mstr(150), FLOAT_MSG_GREEN);
        add_timer_event(self_obj, game_ticks(3), 0);
    end
    else begin
        if (map_var(6) == 2) then begin
            set_map_var(6, map_var(6) + 1);
            float_msg(self_obj, mstr(151), FLOAT_MSG_NORMAL);
            add_timer_event(self_obj, game_ticks(6), 0);
        end
        else begin
            if (map_var(6) == 3) then begin
                set_map_var(6, map_var(6) + 1);
                float_msg(cassidy_ptr, mstr(152), FLOAT_MSG_GREEN);
                add_timer_event(self_obj, game_ticks(3), 0);
            end
            else begin
                if (map_var(6) == 4) then begin
                    set_map_var(6, map_var(6) + 1);
                    float_msg(self_obj, mstr(153), FLOAT_MSG_NORMAL);
                    add_timer_event(self_obj, game_ticks(6), 0);
                end
                else begin
                    if (map_var(6) == 5) then begin
                        set_map_var(6, map_var(6) + 1);
                        if (dude_gender == 0) then begin
                            float_msg(cassidy_ptr, mstr(154), FLOAT_MSG_GREEN);
                        end
                        else begin
                            float_msg(cassidy_ptr, mstr(155), FLOAT_MSG_GREEN);
                        end
                        add_timer_event(self_obj, game_ticks(5), 0);
                    end
                    else begin
                        if (map_var(6) == 6) then begin
                            set_map_var(6, map_var(6) + 1);
                            float_msg(self_obj, mstr(156), FLOAT_MSG_NORMAL);
                            add_timer_event(self_obj, game_ticks(6), 0);
                        end
                        else begin
                            if (map_var(6) == 7) then begin
                                set_map_var(6, map_var(6) + 1);
                                reg_anim_func(2, self_obj);
                                reg_anim_func(1, 1);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(12720, 3, 2), 0);
                                reg_anim_func(3, 0);
                                add_timer_event(self_obj, 14, 0);
                            end
                            else begin
                                if (map_var(6) == 8) then begin
                                    set_map_var(6, map_var(6) + 1);
                                    anim(self_obj, 1000, 2);
                                    float_msg(cassidy_ptr, mstr(157), FLOAT_MSG_GREEN);
                                    reg_anim_func(2, cassidy_ptr);
                                    reg_anim_func(1, 1);
                                    animate_move_obj_to_tile(cassidy_ptr, 10916, 0);
                                    reg_anim_func(3, 0);
                                    add_timer_event(self_obj, game_ticks(2), 0);
                                end
                                else begin
                                    if (map_var(6) == 9) then begin
                                        set_map_var(6, map_var(6) + 1);
                                        reg_anim_func(2, dude_obj);
                                        reg_anim_func(1, 1);
                                        animate_move_obj_to_tile(dude_obj, 11719, 0);
                                        reg_anim_func(3, 0);
                                        add_timer_event(self_obj, game_ticks(3), 0);
                                    end
                                    else begin
                                        if (map_var(6) == 10) then begin
                                            set_map_var(6, map_var(6) + 1);
                                            reg_anim_func(2, self_obj);
                                            reg_anim_func(1, 1);
                                            animate_move_obj_to_tile(self_obj, 12720, 0);
                                            reg_anim_func(3, 0);
                                            add_timer_event(self_obj, game_ticks(2), 0);
                                        end
                                        else begin
                                            if (map_var(6) == 11) then begin
                                                set_map_var(6, 0);
                                                float_msg(cassidy_ptr, mstr(158), FLOAT_MSG_GREEN);
                                                game_ui_enable;
                                                reg_anim_func(2, cassidy_ptr);
                                                reg_anim_func(1, 1);
                                                animate_move_obj_to_tile(cassidy_ptr, 9091, 0);
                                                reg_anim_func(3, 0);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure node023
begin
    Reply(490);
    giq_option(-3, NAME, 491, node999, NEUTRAL_REACTION);
end

procedure node022
begin
    Reply(480);
    giq_option(-3, NAME, 481, node023, NEUTRAL_REACTION);
    giq_option(-3, NAME, 482, node999, NEUTRAL_REACTION);
end

procedure node021
begin
    Reply(470);
    giq_option(-3, NAME, 472, node022, NEUTRAL_REACTION);
    giq_option(-3, NAME, 471, node999, NEUTRAL_REACTION);
end

procedure node020
begin
    Reply(460);
    giq_option(4, NAME, 462, node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 461, node999, NEUTRAL_REACTION);
end

procedure node019
begin
    Reply(450);
    giq_option(4, NAME, 452, node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 451, node999, NEUTRAL_REACTION);
end

procedure node018
begin
    Reply(440);
    giq_option(4, NAME, 441, node019, NEUTRAL_REACTION);
end

procedure node017
begin
    Reply(430);
    giq_option(4, NAME, 431, node018, NEUTRAL_REACTION);
end

procedure node016
begin
    set_local_var(8, 2);
    display_mstr(230);
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 3);
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    give_exp_points(10);
    display_msg(g_mstr(100) + 10 + g_mstr(101));
    Reply(420);
    giq_option(4, NAME, 421, node999, NEUTRAL_REACTION);
end

procedure node015
begin
    set_local_var(8, 1);
    display_mstr(220);
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 3);
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(410);
    giq_option(4, NAME, 411, node999, NEUTRAL_REACTION);
end

procedure node014
begin
    Reply(400);
    giq_option(4, NAME, 401, sex, NEUTRAL_REACTION);
end

procedure node013
begin
    Reply(390);
    giq_option(4, NAME, 391, node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 392, node014, GOOD_REACTION);
end

procedure node012
begin
    set_local_var(7, 1);
    Reply(380);
    giq_option(4, NAME, 381, node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 382, node020, NEUTRAL_REACTION);
    giq_option(4, NAME, 383, node999, NEUTRAL_REACTION);
end

procedure node011
begin
    Reply(370);
    giq_option(4, NAME, 371, node012, GOOD_REACTION);
    giq_option(4, NAME, 372, node999, NEUTRAL_REACTION);
end

procedure node010
begin
    Reply(360);
    giq_option(4, NAME, 361, node011, NEUTRAL_REACTION);
end

procedure node009
begin
    Reply(350);
    if (local_var(8) == 0) then begin
        giq_option(4, NAME, 352, node004, NEUTRAL_REACTION);
    end
    if (local_var(8) > 0) then begin
        giq_option(4, NAME, 353, node005, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 351, node999, NEUTRAL_REACTION);
end

procedure node008
begin
    Reply(340);
    giq_option(4, NAME, 341, node009, NEUTRAL_REACTION);
end

procedure node007
begin
    Reply(330);
    giq_option(4, NAME, 331, node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 332, node999, NEUTRAL_REACTION);
end

procedure node006
begin
    set_local_var(4, 2);
    Reply(320);
    giq_option(4, NAME, 321, node007, NEUTRAL_REACTION);
end

procedure node005
begin
    Reply(310);
    if (local_var(4) < 2) then begin
        giq_option(4, NAME, 301, node006, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 302, node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 303, node010, NEUTRAL_REACTION);
    if ((global_var(GVAR_ELKO_ARROYAN_SICKNESS) >= 3) and (global_var(GVAR_ELKO_ARROYAN_SICKNESS) < 10)) then begin
        giq_option(4, NAME, 304, node017, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 305, node999, NEUTRAL_REACTION);
end

procedure node004
begin
    Reply(300);
    if (local_var(4) < 2) then begin
        giq_option(4, NAME, 301, node006, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 302, node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 303, node010, NEUTRAL_REACTION);
    if ((global_var(GVAR_ELKO_ARROYAN_SICKNESS) >= 3) and (global_var(GVAR_ELKO_ARROYAN_SICKNESS) < 10)) then begin
        giq_option(4, NAME, 304, node017, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 305, node999, NEUTRAL_REACTION);
end

procedure node003
begin
    Reply(mstr(290) + dude_name + mstr(291));
    giq_option(4, NAME, 292, node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 293, node999, NEUTRAL_REACTION);
end

procedure node002
begin
    if (dude_gender == 0) then begin
        Reply(280);
    end
    else begin
        Reply(281);
    end
    giq_option(4, NAME, 282, node999, NEUTRAL_REACTION);
    if ((dude_gender == 0) and ((dude_charisma > 6) or (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal) == 1)) and (local_var(7) > 0)) then begin
        giq_option(4, NAME, 283, node013, GOOD_REACTION);
    end
end

procedure node001
begin
    set_local_var(4, 1);
    Reply(270);
    giq_option(4, NAME, 271, node004, GOOD_REACTION);
    giq_option(4, NAME, 272, node004, NEUTRAL_REACTION);
end

procedure node998
begin
    set_local_var(5, 2);
end

procedure node999
begin
end
