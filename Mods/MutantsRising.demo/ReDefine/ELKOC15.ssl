variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure corpse;
procedure node024;
procedure node023;
procedure node022b;
procedure node022a;
procedure node022;
procedure node021;
procedure node020;
procedure node019;
procedure node018;
procedure node017;
procedure node016;
procedure node015;
procedure node014;
procedure node013;
procedure node012;
procedure node011;
procedure node010;
procedure node009;
procedure node008;
procedure node007;
procedure node006;
procedure node005;
procedure node004;
procedure node003;
procedure node002;
procedure node001;
procedure node995;
procedure node996;
procedure node997;
procedure node998;
procedure node999;

import variable russel_ptr;
import variable jakes_grave_ptr;
import variable feng_ptr;

variable floating;
variable stealing;
variable feng_show;
variable walks;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777728) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777728)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777701) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777701)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    russel_ptr := self_obj;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        animate_move_obj_to_tile(self_obj, 14889, 0);
        reg_anim_func(3, 0);
    end
    else begin
        if (fixed_param == 1) then begin
            float_msg(self_obj, mstr(random(200, 208)), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(random(16, 32)), 1);
        end
        else begin
            if (fixed_param == 2) then begin
                dialogue_system_enter;
            end
            else begin
                if (fixed_param == 3) then begin
                    if (map_var(2) > game_time) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        reg_anim_animate(self_obj, 10, -1);
                        reg_anim_func(3, 0);
                        play_sfx("iocntnre");
                        add_timer_event(self_obj, game_ticks(4), 3);
                    end
                end
                else begin
                    if (fixed_param == 4) then begin
                        call corpse();
                    end
                    else begin
                        if (fixed_param == 5) then begin
                            fade_out;
                            add_timer_event(jakes_grave_ptr, 1, 1);
                            if (dude_tile != 17075) then begin
                                move_to(dude_obj, 17075, 0);
                            end
                            game_time_advance(60 * (60 * 10));
                            fade_in;
                            set_map_var(3, 3);
                            dialogue_system_enter;
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (stealing < 3) then begin
            stealing := stealing + 1;
            float_msg(self_obj, mstr(random(210, 211)), FLOAT_MSG_RED);
        end
        else begin
            call node998();
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) - 50);
        set_global_var(GVAR_ENEMY_ELKO, 1);
        if (source_obj == dude_obj) then begin
            set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
            if (critter_kill_type(self_obj) == 2) then begin
                if (source_obj == dude_obj) then begin
                    set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                    set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - -15);
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                    set_global_var(GVAR_KARMA_DEFENDER, 0);
                    set_global_var(GVAR_KARMA_WANDERER, 0);
                    set_global_var(GVAR_KARMA_BETRAYER, 0);
                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                        set_global_var(GVAR_KARMA_WANDERER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                            end
                                            else begin
                                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                                end
                                                else begin
                                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                set_global_var(GVAR_BERSERKER_REPUTATION, 0);
            end
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
            end
            set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
            debug_msg("Player gains " + -10 + " Karma Points.");
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
            set_global_var(GVAR_KARMA_DEFENDER, 0);
            set_global_var(GVAR_KARMA_WANDERER, 0);
            set_global_var(GVAR_KARMA_BETRAYER, 0);
            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
            set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
            if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                            set_global_var(GVAR_KARMA_DEFENDER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                set_global_var(GVAR_KARMA_WANDERER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                    set_global_var(GVAR_KARMA_BETRAYER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                        end
                                        else begin
                                            set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if ((global_var(GVAR_ENEMY_ELKO) > 0) and (local_var(5) != 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if ((CUR_MAP_ARCAVES) and (global_var(GVAR_ELKO_ERRAND_DUDE) == 4)) then begin
        set_global_var(GVAR_ELKO_ERRAND_DUDE, 5);
        dialogue_system_enter;
    end
    if ((CUR_MAP_ARTEMPLE) and (global_var(GVAR_ELKO_ERRAND_DUDE) == 5)) then begin
        set_global_var(GVAR_ELKO_ERRAND_DUDE, 6);
        move_to(self_obj, 24339, 0);
        anim(self_obj, 1000, 3);
        anim(feng_ptr, 1000, 0);
        game_ui_disable;
        add_timer_event(self_obj, 10, 4);
    end
    if ((CUR_MAP_ARCAVES) and (tile_distance_objs(self_obj, dude_obj) >= 14)) then begin
        reg_anim_func(2, dude_obj);
        move_to(dude_obj, tile_num_in_direction(tile_num(self_obj), 3, 3), 0);
        float_msg(self_obj, mstr(230), FLOAT_MSG_RED);
    end
    if ((CUR_MAP_ARTEMPLE) and (global_var(GVAR_ELKO_ERRAND_DUDE) >= 7) and (tile_num(self_obj) != local_var(8)) and (walks == 0)) then begin
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        animate_move_obj_to_tile(self_obj, local_var(8), 0);
        reg_anim_func(3, 0);
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        call node998();
    end
end

procedure map_enter_p_proc
begin
    russel_ptr := self_obj;
    if ((CUR_MAP_ARTEMPLE) and (local_var(8) == 0)) then begin
        set_local_var(8, tile_num(self_obj));
    end
    if ((floating == 0) and (CUR_MAP_ARTEMPLE)) then begin
        floating := 1;
        add_timer_event(self_obj, game_ticks(14), 1);
    end
    if ((global_var(GVAR_ELKO_ERRAND_DUDE) >= 6) and (CUR_MAP_ARCAVES)) then begin
        destroy_object(self_obj);
    end
end

procedure map_update_p_proc
begin
    russel_ptr := self_obj;
    walks := 0;
    if ((global_var(GVAR_ELKO_ERRAND_DUDE) >= 7) and (tile_num(self_obj) == local_var(8)) and (obj_get_rot(self_obj) != 0)) then begin
        anim(self_obj, 1000, 1);
    end
end

procedure talk_p_proc
begin
    if (global_var(GVAR_ELKO_HELPING_HANDS_MALE) == 2) then begin
        float_msg(self_obj, mstr(250), FLOAT_MSG_YELLOW);
    end
    else begin
        if (global_var(GVAR_ELKO_ERRAND_DUDE) == 3) then begin
            start_gdialog(1319, self_obj, 4, -1, -1);
            gsay_start;
            call node012();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (global_var(GVAR_ELKO_ERRAND_DUDE) == 5) then begin
                if (map_var(3) == 0) then begin
                    start_gdialog(1319, self_obj, 4, -1, -1);
                    gsay_start;
                    call node013();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (map_var(3) == 1) then begin
                        float_msg(self_obj, mstr(221), FLOAT_MSG_YELLOW);
                        display_mstr(220);
                    end
                    else begin
                        if (map_var(3) == 2) then begin
                            start_gdialog(1319, self_obj, 4, -1, -1);
                            gsay_start;
                            if (dude_strength <= 5) then begin
                                call node015();
                            end
                            else begin
                                call node016();
                            end
                            gsay_end;
                            end_dialogue;
                        end
                        else begin
                            if (map_var(3) == 3) then begin
                                start_gdialog(1319, self_obj, 4, -1, -1);
                                gsay_start;
                                call node018();
                                gsay_end;
                                end_dialogue;
                            end
                        end
                    end
                end
            end
            else begin
                if (global_var(GVAR_ELKO_LYNCH_COFFEE) != 2) then begin
                    start_gdialog(1319, self_obj, 4, -1, -1);
                    gsay_start;
                    call node001();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    start_gdialog(1319, self_obj, 4, -1, -1);
                    gsay_start;
                    call node002();
                    gsay_end;
                    end_dialogue;
                end
            end
        end
    end
end

procedure corpse
begin
    float_msg(self_obj, " ", FLOAT_MSG_YELLOW);
    float_msg(feng_ptr, " ", FLOAT_MSG_YELLOW);
    float_msg(self_obj, 0, FLOAT_MSG_NORMAL);
    float_msg(feng_ptr, 0, FLOAT_MSG_NORMAL);
    if (feng_show == 0) then begin
        feng_show := feng_show + 1;
        float_msg(self_obj, mstr(240), FLOAT_MSG_YELLOW);
        add_timer_event(self_obj, game_ticks(3), 4);
    end
    else begin
        if (feng_show == 1) then begin
            feng_show := feng_show + 1;
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, local_var(8), 0);
            reg_anim_func(3, 0);
            add_timer_event(self_obj, 6, 4);
        end
        else begin
            if (feng_show == 2) then begin
                feng_show := feng_show + 1;
                float_msg(feng_ptr, mstr(241), FLOAT_MSG_GREEN);
                add_timer_event(self_obj, 27, 4);
                add_timer_event(feng_ptr, 30, 1);
            end
            else begin
                if (feng_show == 3) then begin
                    feng_show := 0;
                    reg_anim_func(2, self_obj);
                    move_to(self_obj, local_var(8), 0);
                end
            end
        end
    end
end

procedure node024
begin
    Reply(490);
    giq_option(-3, NAME, 491, node997, NEUTRAL_REACTION);
end

procedure node023
begin
    Reply(mstr(480) + dude_name + mstr(481));
    giq_option(-3, NAME, 451, node997, NEUTRAL_REACTION);
end

procedure node022b
begin
    set_global_var(GVAR_ELKO_LOCKET_SUBQUEST, 4);
    add_obj_to_inven(dude_obj, create_object(538, 0, 0));
    call node024();
end

procedure node022a
begin
    set_global_var(GVAR_ELKO_LOCKET_SUBQUEST, 3);
    call node024();
end

procedure node022
begin
    Reply(470);
    giq_option(-3, NAME, 471, node022a, NEUTRAL_REACTION);
    giq_option(-3, NAME, 472, node022b, NEUTRAL_REACTION);
end

procedure node021
begin
    Reply(460);
    giq_option(-3, NAME, 461, node997, NEUTRAL_REACTION);
end

procedure node020
begin
    Reply(450);
    giq_option(-3, NAME, 451, node997, NEUTRAL_REACTION);
end

procedure node019
begin
    Reply(440);
    if (global_var(GVAR_ELKO_LOCKET_SUBQUEST) == 2) then begin
        giq_option(-3, NAME, 441, node022, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_LOCKET_SUBQUEST) == 1) then begin
        giq_option(-3, NAME, 441, node023, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 442, node020, BAD_REACTION);
end

procedure node018
begin
    Reply(430);
    if (global_var(GVAR_ELKO_LOCKET_SUBQUEST) == 2) then begin
        giq_option(-3, NAME, 431, node022, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_LOCKET_SUBQUEST) == 1) then begin
        giq_option(-3, NAME, 431, node023, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 432, node019, BAD_REACTION);
end

procedure node017
begin
    Reply(mstr(420) + dude_name + mstr(421));
    giq_option(-3, NAME, 422, node021, BAD_REACTION);
    giq_option(-3, NAME, 423, node997, NEUTRAL_REACTION);
end

procedure node016
begin
    game_time_advance(60 * (60 * 10));
    fade_in;
    Reply(410);
    giq_option(-3, NAME, 401, node017, NEUTRAL_REACTION);
end

procedure node015
begin
    game_time_advance(2 * (60 * (60 * 10)));
    fade_in;
    Reply(400);
    giq_option(-3, NAME, 401, node017, NEUTRAL_REACTION);
end

procedure node014
begin
    Reply(390);
    giq_option(-3, NAME, 391, node996, NEUTRAL_REACTION);
    giq_option(-3, NAME, 392, node995, GOOD_REACTION);
end

procedure node013
begin
    Reply(380);
    giq_option(-3, NAME, 381, node995, GOOD_REACTION);
    giq_option(-3, NAME, 382, node014, BAD_REACTION);
end

procedure node012
begin
    Reply(370);
    if (obj_is_carrying_obj_pid(dude_obj, 289) > 0) then begin
        giq_option(-3, NAME, 371, node997, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 289) == 0) then begin
        giq_option(-3, NAME, 372, node999, BAD_REACTION);
    end
    giq_option(-3, NAME, 373, node999, NEUTRAL_REACTION);
end

procedure node011
begin
    Reply(360);
    giq_option(-3, NAME, 361, node999, NEUTRAL_REACTION);
end

procedure node010
begin
    Reply(mstr(350) + dude_name + mstr(351));
    giq_option(-3, NAME, 352, node011, NEUTRAL_REACTION);
end

procedure node009
begin
    Reply(340);
    giq_option(4, NAME, 341, node999, NEUTRAL_REACTION);
end

procedure node008
begin
    Reply(330);
    giq_option(4, NAME, 331, node999, NEUTRAL_REACTION);
end

procedure node007
begin
    set_local_var(7, 1);
    Reply(320);
    giq_option(4, NAME, 321, node999, NEUTRAL_REACTION);
end

procedure node006
begin
    Reply(310);
    giq_option(4, NAME, 311, node007, NEUTRAL_REACTION);
    if (map_var(2) == 1) then begin
        giq_option(4, NAME, 263, node004, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 312, node999, NEUTRAL_REACTION);
end

procedure node005
begin
    Reply(300);
    if (map_var(2) == 1) then begin
        giq_option(4, NAME, 301, node004, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_GOLD_DIGGER) < 6) then begin
        giq_option(4, NAME, 302, node006, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 303, node999, NEUTRAL_REACTION);
end

procedure node004
begin
    set_map_var(2, 2);
    Reply(290);
    giq_option(4, NAME, 291, node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 292, node999, NEUTRAL_REACTION);
end

procedure node003
begin
    Reply(280);
    if (map_var(2) == 1) then begin
        giq_option(4, NAME, 281, node004, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 282, node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 283, node999, NEUTRAL_REACTION);
end

procedure node002
begin
    Reply(mstr(270) + dude_name + mstr(271));
    giq_option(4, NAME, 272, node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 273, node999, NEUTRAL_REACTION);
    if (global_var(GVAR_ELKO_PACK_OF_DOGS) == 2) then begin
        giq_option(4, NAME, 266, node009, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 274, node999, NEUTRAL_REACTION);
end

procedure node001
begin
    set_local_var(4, 1);
    Reply(mstr(260) + dude_name + mstr(261));
    giq_option(4, NAME, 262, node003, NEUTRAL_REACTION);
    if (map_var(2) == 1) then begin
        giq_option(4, NAME, 263, node004, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 264, node005, NEUTRAL_REACTION);
    if (map_var(21) == 1) then begin
        giq_option(4, NAME, 265, node008, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_PACK_OF_DOGS) == 2) then begin
        giq_option(4, NAME, 266, node009, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 267, node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 268, node010, NEUTRAL_REACTION);
    giq_option(-3, NAME, 269, node999, NEUTRAL_REACTION);
end

procedure node995
begin
    fade_out;
    set_map_var(3, 2);
    add_timer_event(jakes_grave_ptr, 2, 1);
    add_timer_event(self_obj, 10, 2);
end

procedure node996
begin
    set_map_var(3, 1);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 289);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 289);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 289);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    set_map_var(2, game_time + (60 * (60 * 10)));
    add_timer_event(self_obj, game_ticks(2), 3);
    add_timer_event(self_obj, game_ticks(12), 5);
    create_object_sid(16777283, 19286, 0, SCRIPT_ELKOC19);
end

procedure node997
begin
    if (CUR_MAP_ARTEMPLE) then begin
        if (global_var(GVAR_ELKO_ERRAND_DUDE) == 3) then begin
            set_global_var(GVAR_ELKO_ERRAND_DUDE, 4);
        end
        load_map(3, 0);
    end
    else begin
        load_map(126, 0);
    end
end

procedure node998
begin
    set_local_var(5, 2);
end

procedure node999
begin
end
