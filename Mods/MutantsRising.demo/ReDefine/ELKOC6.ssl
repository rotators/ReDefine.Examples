variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure timed_event_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure heal_PC;
procedure saving_Jonas1;
procedure saving_Jonas2;
procedure saving_Jonas3;
procedure node094;
procedure node093;
procedure node092;
procedure node091;
procedure node090;
procedure node089;
procedure node088;
procedure node087;
procedure node086;
procedure node085;
procedure node084;
procedure node083;
procedure node082;
procedure node081;
procedure node080;
procedure node079;
procedure node078;
procedure node077;
procedure node076;
procedure node075;
procedure node074;
procedure node073;
procedure node072;
procedure node071;
procedure node070;
procedure node069;
procedure node068;
procedure node067;
procedure node066;
procedure node065;
procedure node064;
procedure node063;
procedure node062;
procedure node061;
procedure node060;
procedure node059;
procedure node058;
procedure node057;
procedure node056;
procedure node055;
procedure node054;
procedure node053;
procedure node052;
procedure node051;
procedure node050;
procedure node049;
procedure node048;
procedure node047;
procedure node046;
procedure node045;
procedure node044;
procedure node043;
procedure node042;
procedure node041;
procedure node040;
procedure node039;
procedure node038;
procedure node037;
procedure node036;
procedure node035;
procedure node034;
procedure node033;
procedure node032;
procedure node031;
procedure node030;
procedure node029;
procedure node028;
procedure node027;
procedure node026;
procedure node025;
procedure node024;
procedure node023;
procedure node022;
procedure node021;
procedure node020;
procedure node019;
procedure node018;
procedure node017;
procedure node016;
procedure node015;
procedure node014;
procedure node013;
procedure node012;
procedure node011;
procedure node010;
procedure node009;
procedure node008;
procedure node007;
procedure node006;
procedure node005;
procedure node004;
procedure node003;
procedure node002;
procedure node001;
procedure node995;
procedure node996;
procedure node997;
procedure node998;
procedure node999;

import variable kyle_ptr;
import variable kaija_ptr;
import variable feng_ptr;

variable stealing;
variable dmg_taken;
variable weapon;
variable item;
variable healthh;
variable save_j;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777728) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777728)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777701) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777701)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    feng_ptr := self_obj;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        if (map_var(12) == 0) then begin
            call saving_Jonas3();
        end
        else begin
            if (map_var(12) == 1) then begin
                call saving_Jonas2();
            end
            else begin
                call saving_Jonas1();
            end
        end
    end
    else begin
        if (fixed_param == 1) then begin
            game_ui_enable;
            dialogue_system_enter;
        end
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) - 100);
    set_global_var(GVAR_ENEMY_ELKO, 1);
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - -15);
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        script_overrides;
        if (stealing == 0) then begin
            stealing := 1;
            float_msg(self_obj, mstr(180), FLOAT_MSG_LIGHT_RED);
        end
        else begin
            if (stealing == 1) then begin
                stealing := 2;
                float_msg(self_obj, mstr(181), FLOAT_MSG_RED);
            end
            else begin
                call node998();
            end
        end
    end
end

procedure combat_p_proc
begin
    if ((fixed_param == 4) and (local_var(5) == 1)) then begin
        item := create_object(weapon, 0, 0);
        add_obj_to_inven(self_obj, item);
    end
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if ((global_var(GVAR_ENEMY_ELKO) > 0) and (local_var(5) != 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (dmg_taken < 4) then begin
            script_overrides;
            dmg_taken := dmg_taken + 1;
            float_msg(self_obj, mstr(random(182, 185)), FLOAT_MSG_LIGHT_RED);
        end
        else begin
            call node998();
        end
    end
end

procedure map_enter_p_proc
begin
    feng_ptr := self_obj;
    weapon := 388;
    if (local_var(12) == 0) then begin
        set_local_var(12, tile_num(self_obj));
    end
end

procedure map_update_p_proc
begin
    feng_ptr := self_obj;
end

procedure talk_p_proc
begin
    if (dude_iq > 3) then begin
        if (local_var(9) == 0) then begin
            if (global_var(GVAR_ELKO_MAIN_QUESTS) < 3) then begin
                if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) < 2) then begin
                    start_gdialog(1310, self_obj, 4, -1, -1);
                    gsay_start;
                    if (local_var(4) == 0) then begin
                        set_local_var(4, 1);
                    end
                    call node001();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) < 4) then begin
                        start_gdialog(1310, self_obj, 4, -1, -1);
                        gsay_start;
                        call node003();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) < 8) then begin
                            if (local_var(10) == 0) then begin
                                start_gdialog(1310, self_obj, 4, -1, -1);
                                gsay_start;
                                call node004();
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                start_gdialog(1310, self_obj, 4, -1, -1);
                                gsay_start;
                                call node042();
                                gsay_end;
                                end_dialogue;
                            end
                        end
                        else begin
                            if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 8) then begin
                                if (obj_is_carrying_obj_pid(dude_obj, 547) == 0) then begin
                                    float_msg(self_obj, mstr(230) + dude_name + mstr(231), FLOAT_MSG_RED);
                                end
                                else begin
                                    start_gdialog(1310, self_obj, 4, -1, -1);
                                    gsay_start;
                                    call node028();
                                    gsay_end;
                                    end_dialogue;
                                end
                            end
                            else begin
                                if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 9) then begin
                                    float_msg(self_obj, mstr(200) + dude_name + mstr(201), FLOAT_MSG_RED);
                                end
                                else begin
                                    if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 10) then begin
                                        start_gdialog(1310, self_obj, 4, -1, -1);
                                        gsay_start;
                                        call node034();
                                        gsay_end;
                                        end_dialogue;
                                    end
                                    else begin
                                        if (local_var(11) == 0) then begin
                                            start_gdialog(1310, self_obj, 4, -1, -1);
                                            gsay_start;
                                            call node053();
                                            gsay_end;
                                            end_dialogue;
                                        end
                                        else begin
                                            start_gdialog(1310, self_obj, 4, -1, -1);
                                            gsay_start;
                                            call node002();
                                            gsay_end;
                                            end_dialogue;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            else begin
                if (global_var(GVAR_ELKO_MAIN_QUESTS) == 3) then begin
                    if (global_var(GVAR_ELKO_ARROYAN_SICKNESS) < 7) then begin
                        start_gdialog(1310, self_obj, 4, -1, -1);
                        gsay_start;
                        call node060();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        float_msg(self_obj, mstr(240) + dude_name + mstr(241), FLOAT_MSG_NORMAL);
                    end
                end
                else begin
                    start_gdialog(1310, self_obj, 4, -1, -1);
                    gsay_start;
                    call node078();
                    gsay_end;
                    end_dialogue;
                end
            end
        end
        else begin
            if ((local_var(9) != 0) and (local_var(9) < game_time)) then begin
                start_gdialog(1310, self_obj, 4, -1, -1);
                gsay_start;
                call node052();
                gsay_end;
                end_dialogue;
            end
            else begin
                float_msg(self_obj, mstr(210) + dude_name + mstr(211), FLOAT_MSG_NORMAL);
            end
        end
        if (save_j > 0) then begin
            fade_out;
            set_local_var(9, 0);
            if (map_var(11) == 1) then begin
                game_time_advance(3 * (60 * (60 * 10)));
            end
            else begin
                if (map_var(11) == 2) then begin
                    game_time_advance(60 * (60 * 10));
                end
            end
            game_ui_disable;
            move_to(self_obj, 19853, 0);
            anim(self_obj, 1000, 3);
            move_to(dude_obj, 20052, 0);
            anim(dude_obj, 1000, 3);
            add_timer_event(self_obj, 15, 0);
        end
    end
    else begin
        if (global_var(GVAR_ELKO_ERRAND_DUDE) < 2) then begin
            start_gdialog(1310, self_obj, 4, -1, -1);
            gsay_start;
            call node079();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (global_var(GVAR_ELKO_ERRAND_DUDE) < 6) then begin
                float_msg(self_obj, mstr(250) + dude_name + mstr(251), FLOAT_MSG_NORMAL);
            end
            else begin
                if (global_var(GVAR_ELKO_ERRAND_DUDE) == 6) then begin
                    start_gdialog(1310, self_obj, 4, -1, -1);
                    gsay_start;
                    call node083();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (global_var(GVAR_ELKO_ERRAND_DUDE) == 7) then begin
                        float_msg(self_obj, mstr(252) + dude_name + mstr(253), FLOAT_MSG_NORMAL);
                    end
                    else begin
                        start_gdialog(1310, self_obj, 4, -1, -1);
                        gsay_start;
                        call node089();
                        gsay_end;
                        end_dialogue;
                    end
                end
            end
        end
    end
end

procedure heal_PC
begin
    fade_out;
    healthh := get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp);
    game_time_advance(60 * (60 * 10));
    critter_heal(dude_obj, healthh);
    set_global_var(GVAR_BLEEDING_WOUNDS, 0);
    critter_injure(dude_obj, 4 bwor 8 bwor 16 bwor 32 bwor 64 bwor 8388608);
    poison(dude_obj, -get_critter_stat(dude_obj, STAT_current_poison));
    radiation_dec(dude_obj, get_critter_stat(dude_obj, STAT_current_rad));
    fade_in;
    if (dude_iq > 3) then begin
        call node006();
    end
    else begin
        call node081();
    end
end

procedure saving_Jonas1
begin
    float_msg(self_obj, " ", FLOAT_MSG_YELLOW);
    float_msg(kyle_ptr, " ", FLOAT_MSG_YELLOW);
    float_msg(kaija_ptr, " ", FLOAT_MSG_YELLOW);
    float_msg(self_obj, 0, FLOAT_MSG_NORMAL);
    float_msg(kyle_ptr, 0, FLOAT_MSG_NORMAL);
    float_msg(kaija_ptr, 0, FLOAT_MSG_NORMAL);
    if (save_j == 1) then begin
        save_j := save_j + 1;
        move_to(kyle_ptr, 20455, 0);
        anim(kyle_ptr, 1000, 0);
        anim(kaija_ptr, 1000, 0);
        fade_in;
        add_timer_event(self_obj, 5, 0);
    end
    else begin
        if (save_j == 2) then begin
            save_j := save_j + 1;
            float_msg(self_obj, mstr(120), FLOAT_MSG_NORMAL);
            add_timer_event(self_obj, game_ticks(6), 0);
        end
        else begin
            if (save_j == 3) then begin
                save_j := save_j + 1;
                float_msg(kyle_ptr, mstr(121), FLOAT_MSG_GREEN);
                add_timer_event(self_obj, game_ticks(3), 0);
            end
            else begin
                if (save_j == 4) then begin
                    save_j := save_j + 1;
                    float_msg(kaija_ptr, mstr(122), FLOAT_MSG_RED);
                    add_timer_event(self_obj, game_ticks(5), 0);
                end
                else begin
                    if (save_j == 5) then begin
                        save_j := save_j + 1;
                        float_msg(kyle_ptr, mstr(123), FLOAT_MSG_GREEN);
                        add_timer_event(self_obj, game_ticks(4), 0);
                    end
                    else begin
                        if (save_j == 6) then begin
                            save_j := save_j + 1;
                            float_msg(self_obj, mstr(124), FLOAT_MSG_NORMAL);
                            add_timer_event(self_obj, game_ticks(3), 0);
                        end
                        else begin
                            if (save_j == 7) then begin
                                save_j := save_j + 1;
                                fade_out;
                                set_global_var(GVAR_ELKO_SICK_JONAS_QUEST, 11);
                                game_ui_enable;
                                move_to(self_obj, local_var(12), 0);
                                anim(self_obj, 1000, 0);
                                move_to(dude_obj, tile_num_in_direction(local_var(12), 0, 2), 0);
                                anim(dude_obj, 1000, 3);
                                add_timer_event(self_obj, 5, 0);
                            end
                            else begin
                                if (save_j == 8) then begin
                                    fade_in;
                                    save_j := 0;
                                    dialogue_system_enter;
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure saving_Jonas2
begin
    float_msg(self_obj, " ", FLOAT_MSG_YELLOW);
    float_msg(kyle_ptr, " ", FLOAT_MSG_YELLOW);
    float_msg(kaija_ptr, " ", FLOAT_MSG_YELLOW);
    float_msg(self_obj, 0, FLOAT_MSG_NORMAL);
    float_msg(kyle_ptr, 0, FLOAT_MSG_NORMAL);
    float_msg(kaija_ptr, 0, FLOAT_MSG_NORMAL);
    if (save_j == 1) then begin
        save_j := save_j + 1;
        move_to(kyle_ptr, 20455, 0);
        anim(kyle_ptr, 1000, 0);
        anim(kaija_ptr, 1000, 0);
        fade_in;
        add_timer_event(self_obj, 5, 0);
    end
    else begin
        if (save_j == 2) then begin
            save_j := save_j + 1;
            float_msg(self_obj, mstr(130), FLOAT_MSG_NORMAL);
            add_timer_event(self_obj, 45, 0);
        end
        else begin
            if (save_j == 3) then begin
                save_j := save_j + 1;
                float_msg(kaija_ptr, mstr(131), FLOAT_MSG_RED);
                add_timer_event(self_obj, game_ticks(6), 0);
            end
            else begin
                if (save_j == 4) then begin
                    save_j := save_j + 1;
                    float_msg(kyle_ptr, mstr(132), FLOAT_MSG_GREEN);
                    add_timer_event(self_obj, game_ticks(7), 0);
                end
                else begin
                    if (save_j == 5) then begin
                        save_j := save_j + 1;
                        reg_anim_func(2, kaija_ptr);
                        reg_anim_func(1, 1);
                        animate_move_obj_to_tile(kaija_ptr, 21052, 0);
                        reg_anim_func(3, 0);
                        add_timer_event(self_obj, game_ticks(3), 0);
                    end
                    else begin
                        if (save_j == 6) then begin
                            save_j := save_j + 1;
                            float_msg(kaija_ptr, mstr(133), FLOAT_MSG_RED);
                            add_timer_event(self_obj, game_ticks(2), 0);
                        end
                        else begin
                            if (save_j == 7) then begin
                                save_j := save_j + 1;
                                float_msg(kyle_ptr, mstr(134), FLOAT_MSG_GREEN);
                                add_timer_event(self_obj, game_ticks(4), 0);
                            end
                            else begin
                                if (save_j == 8) then begin
                                    save_j := save_j + 1;
                                    float_msg(self_obj, mstr(135), FLOAT_MSG_NORMAL);
                                    add_timer_event(self_obj, game_ticks(3), 0);
                                end
                                else begin
                                    if (save_j == 9) then begin
                                        save_j := save_j + 1;
                                        fade_out;
                                        set_global_var(GVAR_ELKO_SICK_JONAS_QUEST, 11);
                                        game_ui_enable;
                                        move_to(self_obj, local_var(12), 0);
                                        anim(self_obj, 1000, 0);
                                        move_to(dude_obj, tile_num_in_direction(local_var(12), 0, 2), 0);
                                        anim(dude_obj, 1000, 3);
                                        add_timer_event(self_obj, 5, 0);
                                    end
                                    else begin
                                        if (save_j == 10) then begin
                                            fade_in;
                                            save_j := 0;
                                            dialogue_system_enter;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure saving_Jonas3
begin
    float_msg(self_obj, " ", FLOAT_MSG_YELLOW);
    float_msg(kyle_ptr, " ", FLOAT_MSG_YELLOW);
    float_msg(kaija_ptr, " ", FLOAT_MSG_YELLOW);
    float_msg(self_obj, 0, FLOAT_MSG_NORMAL);
    float_msg(kyle_ptr, 0, FLOAT_MSG_NORMAL);
    float_msg(kaija_ptr, 0, FLOAT_MSG_NORMAL);
    if (save_j == 1) then begin
        save_j := save_j + 1;
        move_to(kyle_ptr, 20455, 0);
        anim(kyle_ptr, 1000, 0);
        anim(kaija_ptr, 1000, 0);
        fade_in;
        add_timer_event(self_obj, 5, 0);
    end
    else begin
        if (save_j == 2) then begin
            save_j := save_j + 1;
            float_msg(kyle_ptr, mstr(140), FLOAT_MSG_GREEN);
            add_timer_event(self_obj, game_ticks(3), 0);
        end
        else begin
            if (save_j == 3) then begin
                save_j := save_j + 1;
                float_msg(self_obj, mstr(141), FLOAT_MSG_NORMAL);
                add_timer_event(self_obj, game_ticks(6), 0);
            end
            else begin
                if (save_j == 4) then begin
                    save_j := save_j + 1;
                    float_msg(kaija_ptr, mstr(142), FLOAT_MSG_RED);
                    add_timer_event(self_obj, game_ticks(5), 0);
                end
                else begin
                    if (save_j == 5) then begin
                        save_j := save_j + 1;
                        float_msg(self_obj, mstr(143), FLOAT_MSG_NORMAL);
                        add_timer_event(self_obj, game_ticks(6), 0);
                    end
                    else begin
                        if (save_j == 6) then begin
                            save_j := save_j + 1;
                            float_msg(kyle_ptr, mstr(144), FLOAT_MSG_GREEN);
                            add_timer_event(self_obj, game_ticks(6), 0);
                        end
                        else begin
                            if (save_j == 7) then begin
                                save_j := save_j + 1;
                                anim(kaija_ptr, 1000, 2);
                                float_msg(kaija_ptr, mstr(145), FLOAT_MSG_RED);
                                add_timer_event(self_obj, game_ticks(4), 0);
                            end
                            else begin
                                if (save_j == 8) then begin
                                    save_j := save_j + 1;
                                    reg_anim_func(2, kaija_ptr);
                                    reg_anim_func(1, 1);
                                    animate_move_obj_to_tile(kaija_ptr, 21052, 0);
                                    reg_anim_func(3, 0);
                                    add_timer_event(self_obj, game_ticks(3), 0);
                                end
                                else begin
                                    if (save_j == 9) then begin
                                        save_j := save_j + 1;
                                        float_msg(kyle_ptr, mstr(146), FLOAT_MSG_GREEN);
                                        add_timer_event(self_obj, game_ticks(4), 0);
                                    end
                                    else begin
                                        if (save_j == 10) then begin
                                            save_j := save_j + 1;
                                            float_msg(self_obj, mstr(147), FLOAT_MSG_NORMAL);
                                            add_timer_event(self_obj, game_ticks(5), 0);
                                        end
                                        else begin
                                            if (save_j == 11) then begin
                                                save_j := save_j + 1;
                                                fade_out;
                                                set_global_var(GVAR_ELKO_SICK_JONAS_QUEST, 11);
                                                game_ui_enable;
                                                move_to(self_obj, local_var(12), 0);
                                                anim(self_obj, 1000, 0);
                                                move_to(dude_obj, tile_num_in_direction(local_var(12), 0, 2), 0);
                                                anim(dude_obj, 1000, 3);
                                                add_timer_event(self_obj, 5, 0);
                                            end
                                            else begin
                                                if (save_j == 12) then begin
                                                    fade_in;
                                                    save_j := 0;
                                                    dialogue_system_enter;
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure node094
begin
    gsay_message(NAME, 1200, NEUTRAL_REACTION);
end

procedure node093
begin
    Reply(mstr(1190) + dude_name + mstr(1191));
    giq_option(4, NAME, 1172, node030, NEUTRAL_REACTION);
    giq_option(4, NAME, 1173, node030, BAD_REACTION);
    giq_option(4, NAME, 1192, node998, BAD_REACTION);
end

procedure node092
begin
    Reply(mstr(1180) + dude_name + mstr(1181));
    giq_option(4, NAME, 1172, node030, NEUTRAL_REACTION);
    giq_option(4, NAME, 1173, node030, BAD_REACTION);
end

procedure node091
begin
    Reply(mstr(1170) + dude_name + mstr(1171));
    giq_option(4, NAME, 1172, node030, NEUTRAL_REACTION);
    giq_option(4, NAME, 1173, node030, BAD_REACTION);
end

procedure node090
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 20);
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_GRAVES_UNEARTHED, global_var(GVAR_GRAVES_UNEARTHED) + 1);
    set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) - 15);
    Reply(mstr(1160) + dude_name + mstr(1161));
    giq_option(4, NAME, 1162, node091, BAD_REACTION);
    if ((has_skill(dude_obj, SKILL_CONVERSANT) >= 60) or (dude_iq > 7)) then begin
        giq_option(4, NAME, 1163, node092, BAD_REACTION);
    end
    giq_option(4, NAME, 1164, node093, BAD_REACTION);
end

procedure node089
begin
    Reply(mstr(1150) + dude_name + mstr(1151));
    if ((get_critter_stat(dude_obj, STAT_max_hp) > get_critter_stat(dude_obj, STAT_current_hp)) or (global_var(GVAR_BLEEDING_WOUNDS) > 0) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(-3, NAME, 1152, node080, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 1052, node999, NEUTRAL_REACTION);
end

procedure node088
begin
    Reply(mstr(1140) + dude_name + mstr(1141));
    giq_option(-3, NAME, 1142, node999, NEUTRAL_REACTION);
end

procedure node087
begin
    item := create_object(546, 0, 0);
    add_obj_to_inven(dude_obj, item);
    Reply(mstr(1130) + dude_name + mstr(1131));
    giq_option(-3, NAME, 1132, node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1133, node088, NEUTRAL_REACTION);
end

procedure node086
begin
    Reply(mstr(1120) + dude_name + mstr(1121));
    giq_option(-3, NAME, 1122, node087, NEUTRAL_REACTION);
end

procedure node085
begin
    fade_out;
    game_time_advance(2 * (60 * (60 * 10)));
    set_global_var(GVAR_ELKO_ERRAND_DUDE, 7);
    fade_in;
    Reply(1110);
    giq_option(-3, NAME, 1101, node086, NEUTRAL_REACTION);
end

procedure node084
begin
    Reply(1100);
    giq_option(-3, NAME, 1101, node085, NEUTRAL_REACTION);
end

procedure node083
begin
    Reply(mstr(1090) + dude_name + mstr(1091));
    giq_option(-3, NAME, 1092, node084, NEUTRAL_REACTION);
end

procedure node082
begin
    set_global_var(GVAR_ELKO_ERRAND_DUDE, 2);
    Reply(mstr(1080) + dude_name + mstr(1081));
    giq_option(-3, NAME, 1082, node999, NEUTRAL_REACTION);
end

procedure node081
begin
    Reply(1070);
    giq_option(-3, NAME, 1071, node999, NEUTRAL_REACTION);
end

procedure node080
begin
    Reply(1060);
    giq_option(-3, NAME, 1061, heal_PC, NEUTRAL_REACTION);
end

procedure node079
begin
    Reply(mstr(1050) + dude_name + mstr(1051));
    if (global_var(GVAR_ELKO_ERRAND_DUDE) == 1) then begin
        giq_option(-3, NAME, 1054, node082, NEUTRAL_REACTION);
    end
    if ((get_critter_stat(dude_obj, STAT_max_hp) > get_critter_stat(dude_obj, STAT_current_hp)) or (global_var(GVAR_BLEEDING_WOUNDS) > 0) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(-3, NAME, 1053, node080, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 1052, node999, NEUTRAL_REACTION);
end

procedure node078
begin
    Reply(mstr(1040) + dude_name + mstr(1041));
    if ((get_critter_stat(dude_obj, STAT_max_hp) > get_critter_stat(dude_obj, STAT_current_hp)) or (global_var(GVAR_BLEEDING_WOUNDS) > 0) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(4, NAME, 1042, node005, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1043, node999, NEUTRAL_REACTION);
end

procedure node077
begin
    set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 7);
    item := create_object(545, 0, 0);
    add_obj_to_inven(dude_obj, item);
    Reply(mstr(1030) + dude_name + mstr(1031));
    giq_option(4, NAME, 1032, node999, NEUTRAL_REACTION);
end

procedure node076
begin
    set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 7);
    item := create_object(545, 0, 0);
    add_obj_to_inven(dude_obj, item);
    Reply(mstr(1020) + dude_name + mstr(1021) + dude_name + mstr(1022));
    giq_option(4, NAME, 1023, node999, NEUTRAL_REACTION);
end

procedure node075
begin
    Reply(1010);
    if (obj_is_carrying_obj_pid(dude_obj, 544) == 0) then begin
        giq_option(4, NAME, 1011, node076, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 544) > 0) then begin
        giq_option(4, NAME, 1012, node077, NEUTRAL_REACTION);
    end
end

procedure node074
begin
    fade_out;
    game_time_advance(60 * (60 * 10));
    fade_in;
    Reply(1000);
    giq_option(4, NAME, 1001, node075, NEUTRAL_REACTION);
end

procedure node073
begin
    Reply(mstr(990) + dude_name + mstr(981));
    giq_option(4, NAME, 992, node074, NEUTRAL_REACTION);
    giq_option(4, NAME, 991, node074, BAD_REACTION);
end

procedure node072
begin
    Reply(mstr(980) + dude_name + mstr(981));
    giq_option(4, NAME, 982, node074, NEUTRAL_REACTION);
    giq_option(4, NAME, 983, node074, BAD_REACTION);
end

procedure node071
begin
    fade_out;
    game_time_advance(20 * (60 * 10));
    fade_in;
    Reply(970);
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) != 5) then begin
        giq_option(4, NAME, 971, node072, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 5) then begin
        giq_option(4, NAME, 971, node073, NEUTRAL_REACTION);
    end
end

procedure node070
begin
    Reply(mstr(960) + dude_name + mstr(961));
    giq_option(4, NAME, 962, node071, NEUTRAL_REACTION);
    giq_option(4, NAME, 963, node071, NEUTRAL_REACTION);
end

procedure node069
begin
    Reply(950);
    if ((map_var(13) > 0) and (global_var(GVAR_ELKO_MEAT_CONVERSATION) == 0) and (local_var(14) == 0)) then begin
        giq_option(4, NAME, 901, node065, NEUTRAL_REACTION);
    end
    if ((map_var(13) == 0) and (global_var(GVAR_ELKO_MEAT_CONVERSATION) > 0)) then begin
        giq_option(4, NAME, 902, node068, NEUTRAL_REACTION);
    end
    if ((map_var(13) > 0) and (global_var(GVAR_ELKO_MEAT_CONVERSATION) > 0)) then begin
        giq_option(4, NAME, 903, node070, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 951, node999, NEUTRAL_REACTION);
end

procedure node068
begin
    Reply(940);
    giq_option(4, NAME, 941, node071, NEUTRAL_REACTION);
    giq_option(4, NAME, 942, node071, NEUTRAL_REACTION);
end

procedure node067
begin
    Reply(930);
    giq_option(4, NAME, 913, node066, NEUTRAL_REACTION);
    giq_option(4, NAME, 931, node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 932, node999, BAD_REACTION);
end

procedure node066
begin
    Reply(920);
    giq_option(4, NAME, 921, node999, NEUTRAL_REACTION);
end

procedure node065
begin
    set_local_var(14, 1);
    Reply(910);
    giq_option(4, NAME, 913, node066, NEUTRAL_REACTION);
    giq_option(4, NAME, 911, node067, NEUTRAL_REACTION);
    giq_option(4, NAME, 912, node999, NEUTRAL_REACTION);
end

procedure node064
begin
    Reply(900);
    if ((map_var(13) > 0) and (global_var(GVAR_ELKO_MEAT_CONVERSATION) == 0) and (local_var(14) == 0)) then begin
        giq_option(4, NAME, 901, node065, NEUTRAL_REACTION);
    end
    if ((map_var(13) == 0) and (global_var(GVAR_ELKO_MEAT_CONVERSATION) > 0)) then begin
        giq_option(4, NAME, 902, node068, NEUTRAL_REACTION);
    end
    if ((map_var(13) > 0) and (global_var(GVAR_ELKO_MEAT_CONVERSATION) > 0)) then begin
        giq_option(4, NAME, 903, node070, NEUTRAL_REACTION);
    end
    if ((map_var(13) == 0) and (global_var(GVAR_ELKO_MEAT_CONVERSATION) == 0)) then begin
        giq_option(4, NAME, 904, node999, NEUTRAL_REACTION);
    end
end

procedure node063
begin
    set_global_var(GVAR_ELKO_ARROYAN_SICKNESS, 4);
    set_local_var(13, 1);
    Reply(890);
    giq_option(4, NAME, 891, node064, NEUTRAL_REACTION);
end

procedure node062
begin
    Reply(880);
    giq_option(4, NAME, 881, node060, NEUTRAL_REACTION);
    giq_option(4, NAME, 882, node999, NEUTRAL_REACTION);
end

procedure node061
begin
    Reply(870);
    giq_option(4, NAME, 871, node060, NEUTRAL_REACTION);
    giq_option(4, NAME, 872, node999, NEUTRAL_REACTION);
end

procedure node060
begin
    Reply(mstr(860) + dude_name + mstr(861));
    giq_option(4, NAME, 862, node061, NEUTRAL_REACTION);
    giq_option(4, NAME, 863, node062, NEUTRAL_REACTION);
    if ((global_var(GVAR_ELKO_ARROYAN_SICKNESS) >= 3) and (global_var(GVAR_ELKO_ARROYAN_SICKNESS) < 7) and (local_var(13) == 0)) then begin
        giq_option(4, NAME, 865, node063, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_ELKO_ARROYAN_SICKNESS) >= 3) and (global_var(GVAR_ELKO_ARROYAN_SICKNESS) < 7) and (local_var(13) > 0)) then begin
        giq_option(4, NAME, 866, node069, NEUTRAL_REACTION);
    end
    if ((get_critter_stat(dude_obj, STAT_max_hp) > get_critter_stat(dude_obj, STAT_current_hp)) or (global_var(GVAR_BLEEDING_WOUNDS) > 0) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(4, NAME, 275, node005, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 864, node999, NEUTRAL_REACTION);
end

procedure node059
begin
    Reply(mstr(850) + dude_name + mstr(831));
    giq_option(4, NAME, 851, node999, NEUTRAL_REACTION);
end

procedure node058
begin
    Reply(mstr(840) + dude_name + mstr(831));
    giq_option(4, NAME, 841, node999, NEUTRAL_REACTION);
end

procedure node057
begin
    Reply(mstr(830) + dude_name + mstr(831));
    giq_option(4, NAME, 832, node999, NEUTRAL_REACTION);
end

procedure node056
begin
    Reply(820);
    if ((global_var(GVAR_ELKO_SICK_JONAS_APPROACH) != 3) and (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) != 5)) then begin
        giq_option(4, NAME, 821, node058, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 5) then begin
        giq_option(4, NAME, 822, node057, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 3) then begin
        giq_option(4, NAME, 822, node059, NEUTRAL_REACTION);
    end
end

procedure node055
begin
    Reply(810);
    giq_option(4, NAME, 801, node056, NEUTRAL_REACTION);
end

procedure node054
begin
    Reply(800);
    giq_option(4, NAME, 801, node056, NEUTRAL_REACTION);
end

procedure node053
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 6);
    debug_msg("Player gains " + 6 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) + 10);
    if (map_var(4) == 1) then begin
        set_map_var(4, 2);
    end
    set_local_var(11, 1);
    display_mstr(220);
    if (map_var(11) < 2) then begin
        give_exp_points(500);
        display_msg(g_mstr(100) + 500 + g_mstr(101));
    end
    else begin
        give_exp_points(550);
        display_msg(g_mstr(100) + 550 + g_mstr(101));
    end
    Reply(790);
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 5) then begin
        giq_option(4, NAME, 791, node054, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) != 5) then begin
        giq_option(4, NAME, 792, node055, NEUTRAL_REACTION);
    end
end

procedure node052
begin
    save_j := 1;
    Reply(mstr(780) + dude_name + mstr(781));
    giq_option(4, NAME, 782, node999, NEUTRAL_REACTION);
end

procedure node051
begin
    Reply(770);
    giq_option(4, NAME, 713, node997, NEUTRAL_REACTION);
    if (has_skill(dude_obj, SKILL_DOCTOR) >= 40) then begin
        giq_option(4, NAME, 771, node996, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 715, node995, NEUTRAL_REACTION);
end

procedure node050
begin
    Reply(760);
    giq_option(4, NAME, 761, node997, NEUTRAL_REACTION);
    if (has_skill(dude_obj, SKILL_DOCTOR) >= 40) then begin
        giq_option(4, NAME, 714, node996, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 762, node995, NEUTRAL_REACTION);
end

procedure node049
begin
    Reply(mstr(750) + dude_name + mstr(751));
    giq_option(4, NAME, 713, node997, NEUTRAL_REACTION);
    if (has_skill(dude_obj, SKILL_DOCTOR) >= 40) then begin
        giq_option(4, NAME, 714, node996, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 715, node995, NEUTRAL_REACTION);
end

procedure node048
begin
    Reply(740);
    giq_option(4, NAME, 741, node049, BAD_REACTION);
end

procedure node047
begin
    Reply(mstr(730) + dude_name + mstr(731));
    giq_option(4, NAME, 732, node048, NEUTRAL_REACTION);
end

procedure node046
begin
    Reply(720);
    giq_option(4, NAME, 721, node051, GOOD_REACTION);
    giq_option(4, NAME, 722, node051, NEUTRAL_REACTION);
end

procedure node045
begin
    Reply(mstr(710) + dude_name + mstr(711) + dude_name + mstr(712));
    giq_option(4, NAME, 713, node997, NEUTRAL_REACTION);
    if (has_skill(dude_obj, SKILL_DOCTOR) >= 40) then begin
        giq_option(4, NAME, 714, node996, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 715, node995, NEUTRAL_REACTION);
end

procedure node044
begin
    Reply(700);
    if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 7) then begin
        giq_option(4, NAME, 701, node045, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) != 4) then begin
        giq_option(4, NAME, 702, node050, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 4) then begin
        giq_option(4, NAME, 703, node046, NEUTRAL_REACTION);
    end
end

procedure node043
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 534);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 534);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 534);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    Reply(690);
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) != 3) then begin
        giq_option(4, NAME, 691, node044, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 2) then begin
        giq_option(4, NAME, 692, node050, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_APPROACH) == 3) then begin
        giq_option(4, NAME, 693, node047, NEUTRAL_REACTION);
    end
end

procedure node042
begin
    Reply(mstr(680) + dude_name + mstr(681));
    giq_option(4, NAME, 682, node012, NEUTRAL_REACTION);
    if (obj_is_carrying_obj_pid(dude_obj, 534) > 0) then begin
        giq_option(4, NAME, 683, node043, GOOD_REACTION);
    end
    if ((get_critter_stat(dude_obj, STAT_max_hp) > get_critter_stat(dude_obj, STAT_current_hp)) or (global_var(GVAR_BLEEDING_WOUNDS) > 0) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(4, NAME, 275, node005, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 684, node999, NEUTRAL_REACTION);
end

procedure node041
begin
    set_local_var(10, 1);
    Reply(mstr(670) + dude_name + mstr(671));
    giq_option(4, NAME, 672, node012, NEUTRAL_REACTION);
    giq_option(4, NAME, 673, node999, NEUTRAL_REACTION);
end

procedure node040
begin
    Reply(660);
    giq_option(4, NAME, 661, node041, NEUTRAL_REACTION);
end

procedure node039
begin
    Reply(650);
    giq_option(4, NAME, 651, node040, NEUTRAL_REACTION);
end

procedure node038
begin
    Reply(640);
    giq_option(4, NAME, 641, node039, NEUTRAL_REACTION);
end

procedure node037
begin
    Reply(mstr(630) + dude_name + mstr(631));
    giq_option(4, NAME, 632, node049, NEUTRAL_REACTION);
end

procedure node036
begin
    Reply(620);
    giq_option(4, NAME, 621, node037, NEUTRAL_REACTION);
    giq_option(4, NAME, 622, node049, NEUTRAL_REACTION);
end

procedure node035
begin
    Reply(610);
    giq_option(4, NAME, 611, node036, NEUTRAL_REACTION);
end

procedure node034
begin
    Reply(600);
    giq_option(4, NAME, 601, node035, NEUTRAL_REACTION);
end

procedure node033
begin
    set_global_var(GVAR_ELKO_SICK_JONAS_QUEST, 9);
    Reply(mstr(590) + dude_name + mstr(591));
    giq_option(4, NAME, 592, node999, NEUTRAL_REACTION);
end

procedure node032
begin
    fade_out;
    game_time_advance(2 * (60 * (60 * 10)));
    fade_in;
    Reply(580);
    giq_option(4, NAME, 581, node033, NEUTRAL_REACTION);
end

procedure node031
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 2);
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(570);
    giq_option(4, NAME, 561, node032, NEUTRAL_REACTION);
end

procedure node030
begin
    Reply(560);
    giq_option(4, NAME, 561, node032, NEUTRAL_REACTION);
end

procedure node029
begin
    Reply(550);
    giq_option(4, NAME, 551, node030, NEUTRAL_REACTION);
    giq_option(4, NAME, 552, node031, BAD_REACTION);
end

procedure node028
begin
    Reply(mstr(540) + dude_name + mstr(541));
    giq_option(4, NAME, 542, node029, NEUTRAL_REACTION);
end

procedure node027
begin
    give_exp_points(10);
    display_msg(g_mstr(100) + 10 + g_mstr(101));
    set_global_var(GVAR_ELKO_SICK_JONAS_QUEST, 8);
    set_global_var(GVAR_ELKO_SICK_JONAS_APPROACH, 5);
    Reply(530);
    if (obj_is_carrying_obj_pid(dude_obj, 547) == 0) then begin
        giq_option(4, NAME, 531, node999, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 547) > 0) then begin
        giq_option(4, NAME, 532, node090, BAD_REACTION);
    end
end

procedure node026
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_ELKO_SICK_JONAS_QUEST, 8);
    set_global_var(GVAR_ELKO_SICK_JONAS_APPROACH, 5);
    Reply(520);
    if (obj_is_carrying_obj_pid(dude_obj, 547) == 0) then begin
        giq_option(4, NAME, 521, node999, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 547) > 0) then begin
        giq_option(4, NAME, 522, node090, BAD_REACTION);
    end
end

procedure node025
begin
    Reply(510);
    giq_option(4, NAME, 511, node027, NEUTRAL_REACTION);
    giq_option(4, NAME, 512, node026, BAD_REACTION);
end

procedure node024
begin
    set_local_var(15, 1);
    Reply(mstr(500) + dude_name + mstr(501));
    giq_option(4, NAME, 502, node025, NEUTRAL_REACTION);
    giq_option(4, NAME, 503, node999, NEUTRAL_REACTION);
end

procedure node023
begin
    Reply(490);
    giq_option(4, NAME, 491, node999, NEUTRAL_REACTION);
end

procedure node022
begin
    Reply(480);
    giq_option(4, NAME, 481, node999, NEUTRAL_REACTION);
end

procedure node021
begin
    Reply(470);
    if (obj_is_carrying_obj_pid(dude_obj, 534) > 0) then begin
        giq_option(4, NAME, 472, node043, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 534) == 0) then begin
        giq_option(4, NAME, 471, node022, NEUTRAL_REACTION);
    end
end

procedure node020
begin
    Reply(460);
    giq_option(4, NAME, 461, node021, NEUTRAL_REACTION);
end

procedure node019
begin
    set_global_var(GVAR_ELKO_SICK_JONAS_QUEST, 4);
    Reply(450);
    giq_option(4, NAME, 451, node020, NEUTRAL_REACTION);
end

procedure node018
begin
    fade_out;
    game_time_advance(10 * (60 * 10));
    fade_in;
    Reply(440);
    giq_option(4, NAME, 441, node019, NEUTRAL_REACTION);
end

procedure node017
begin
    set_local_var(8, 1);
    Reply(mstr(430) + dude_name + mstr(431) + dude_name + mstr(432));
    giq_option(4, NAME, 433, node018, NEUTRAL_REACTION);
end

procedure node016
begin
    Reply(420);
    giq_option(4, NAME, 411, node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 401, node015, NEUTRAL_REACTION);
    if (local_var(7) == 0) then begin
        giq_option(4, NAME, 384, node013, NEUTRAL_REACTION);
    end
    if (local_var(7) > 0) then begin
        giq_option(4, NAME, 384, node999, NEUTRAL_REACTION);
    end
end

procedure node015
begin
    Reply(410);
    giq_option(4, NAME, 411, node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 402, node016, NEUTRAL_REACTION);
    if (local_var(7) == 0) then begin
        giq_option(4, NAME, 384, node013, NEUTRAL_REACTION);
    end
    if (local_var(7) > 0) then begin
        giq_option(4, NAME, 384, node999, NEUTRAL_REACTION);
    end
end

procedure node014
begin
    Reply(400);
    giq_option(4, NAME, 401, node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 402, node016, NEUTRAL_REACTION);
    if (local_var(7) == 0) then begin
        giq_option(4, NAME, 384, node013, NEUTRAL_REACTION);
    end
    if (local_var(7) > 0) then begin
        giq_option(4, NAME, 384, node999, NEUTRAL_REACTION);
    end
end

procedure node013
begin
    set_local_var(7, 1);
    set_global_var(GVAR_ELKO_SICK_JONAS_QUEST, 2);
    Reply(mstr(390) + dude_name + mstr(391));
    giq_option(4, NAME, 392, node999, NEUTRAL_REACTION);
end

procedure node012
begin
    Reply(380);
    if (local_var(8) == 0) then begin
        giq_option(4, NAME, 381, node014, NEUTRAL_REACTION);
    end
    if (local_var(8) == 0) then begin
        giq_option(4, NAME, 382, node015, NEUTRAL_REACTION);
    end
    if (local_var(8) == 0) then begin
        giq_option(4, NAME, 383, node016, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 3) then begin
        giq_option(4, NAME, 385, node017, GOOD_REACTION);
    end
    if (local_var(8) > 0) then begin
        giq_option(4, NAME, 386, node023, NEUTRAL_REACTION);
    end
    if (local_var(7) == 0) then begin
        giq_option(4, NAME, 384, node013, NEUTRAL_REACTION);
    end
    if (local_var(7) > 0) then begin
        giq_option(4, NAME, 384, node999, NEUTRAL_REACTION);
    end
end

procedure node011
begin
    Reply(370);
    giq_option(4, NAME, 371, node012, NEUTRAL_REACTION);
end

procedure node010
begin
    Reply(360);
    giq_option(4, NAME, 361, node011, NEUTRAL_REACTION);
end

procedure node009
begin
    Reply(350);
    giq_option(4, NAME, 351, node008, NEUTRAL_REACTION);
    if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 1) then begin
        giq_option(4, NAME, 352, node012, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 1) and ((has_skill(dude_obj, SKILL_DOCTOR) > 30) or (dude_perception > 6) or (dude_iq > 6))) then begin
        giq_option(4, NAME, 353, node021, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 354, node999, NEUTRAL_REACTION);
end

procedure node008
begin
    Reply(340);
    giq_option(4, NAME, 341, node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 342, node999, NEUTRAL_REACTION);
end

procedure node007
begin
    Reply(330);
    giq_option(4, NAME, 331, node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 332, node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 333, node999, NEUTRAL_REACTION);
end

procedure node006
begin
    Reply(mstr(320) + dude_name + mstr(321));
    giq_option(4, NAME, 322, node999, NEUTRAL_REACTION);
end

procedure node005
begin
    Reply(310);
    giq_option(4, NAME, 311, heal_PC, NEUTRAL_REACTION);
end

procedure node004
begin
    if (local_var(15) == 0) then begin
        Reply(300);
    end
    else begin
        Reply(mstr(3000) + dude_name + mstr(3001));
    end
    giq_option(4, NAME, 301, node012, NEUTRAL_REACTION);
    if (obj_is_carrying_obj_pid(dude_obj, 534) > 0) then begin
        giq_option(4, NAME, 305, node043, GOOD_REACTION);
    end
    if (map_var(9) == 5) then begin
        giq_option(4, NAME, 302, node038, GOOD_REACTION);
    end
    if (map_var(9) == 4) then begin
        giq_option(4, NAME, 303, node038, GOOD_REACTION);
    end
    if (map_var(9) == 3) then begin
        giq_option(4, NAME, 304, node024, NEUTRAL_REACTION);
    end
    if ((get_critter_stat(dude_obj, STAT_max_hp) > get_critter_stat(dude_obj, STAT_current_hp)) or (global_var(GVAR_BLEEDING_WOUNDS) > 0) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(4, NAME, 275, node005, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 306, node094, NEUTRAL_REACTION);
end

procedure node003
begin
    Reply(290);
    if (obj_is_carrying_obj_pid(dude_obj, 534) > 0) then begin
        giq_option(4, NAME, 291, node043, GOOD_REACTION);
    end
    giq_option(4, NAME, 292, node012, NEUTRAL_REACTION);
    if ((get_critter_stat(dude_obj, STAT_max_hp) > get_critter_stat(dude_obj, STAT_current_hp)) or (global_var(GVAR_BLEEDING_WOUNDS) > 0) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(4, NAME, 275, node005, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 293, node999, NEUTRAL_REACTION);
end

procedure node002
begin
    Reply(mstr(280) + dude_name + mstr(271));
    if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 1) then begin
        giq_option(4, NAME, 272, node010, GOOD_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 1) then begin
        giq_option(4, NAME, 273, node010, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 274, node007, NEUTRAL_REACTION);
    if ((get_critter_stat(dude_obj, STAT_max_hp) > get_critter_stat(dude_obj, STAT_current_hp)) or (global_var(GVAR_BLEEDING_WOUNDS) > 0) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(4, NAME, 275, node005, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 276, node999, NEUTRAL_REACTION);
end

procedure node001
begin
    Reply(mstr(270) + dude_name + mstr(271));
    if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 1) then begin
        giq_option(4, NAME, 272, node010, GOOD_REACTION);
    end
    if (global_var(GVAR_ELKO_SICK_JONAS_QUEST) == 1) then begin
        giq_option(4, NAME, 273, node010, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 274, node007, NEUTRAL_REACTION);
    if ((get_critter_stat(dude_obj, STAT_max_hp) > get_critter_stat(dude_obj, STAT_current_hp)) or (global_var(GVAR_BLEEDING_WOUNDS) > 0) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(4, NAME, 275, node005, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 276, node999, NEUTRAL_REACTION);
end

procedure node995
begin
    set_local_var(9, game_time + (3 * (60 * (60 * 10))));
end

procedure node996
begin
    set_map_var(11, 2);
    save_j := 1;
end

procedure node997
begin
    set_map_var(11, 1);
    save_j := 1;
end

procedure node998
begin
    set_global_var(GVAR_ENEMY_ELKO, 1);
    set_local_var(5, 2);
end

procedure node999
begin
end
