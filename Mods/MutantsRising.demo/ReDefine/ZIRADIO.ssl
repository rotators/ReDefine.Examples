variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure use_p_proc;
procedure choose_freq;
procedure freq_feng;
procedure freq_bakersfield;
procedure freq_lvl12;
procedure node055;
procedure node054;
procedure node053;
procedure node052;
procedure node051;
procedure node050;
procedure node049;
procedure node048;
procedure node047;
procedure node046;
procedure node045;
procedure node044;
procedure node043;
procedure node042;
procedure node041;
procedure node040;
procedure node039;
procedure node038;
procedure node037;
procedure node036;
procedure node035;
procedure node034;
procedure node033;
procedure node032;
procedure node031;
procedure node030;
procedure node029;
procedure node028;
procedure node027;
procedure node026;
procedure node025;
procedure node024;
procedure node023;
procedure node022;
procedure node021;
procedure node020;
procedure node019;
procedure node018;
procedure node017;
procedure node016;
procedure node015;
procedure node014;
procedure node013;
procedure node012;
procedure node011;
procedure node010;
procedure node009;
procedure node008;
procedure node007;
procedure node006;
procedure node005;
procedure node004;
procedure node003;
procedure node002;
procedure node001;
procedure node997;
procedure node999;

variable kahgan_calling;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777728) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777728)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777701) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777701)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure talk_p_proc
begin
    if (kahgan_calling == 0) then begin
        start_gdialog(1770, self_obj, 4, -1, -1);
        gsay_start;
        if (global_var(GVAR_ELKO_BIG_TROUBLE) < 5) then begin
            call node054();
        end
        else begin
            call choose_freq();
        end
        gsay_end;
        end_dialogue;
    end
    else begin
        start_gdialog(1770, self_obj, 4, -1, -1);
        gsay_start;
        call node051();
        gsay_end;
        end_dialogue;
        kahgan_calling := 0;
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        if (combat_is_initialized == 0) then begin
            kahgan_calling := 1;
            dialogue_system_enter;
        end
    end
end

procedure map_enter_p_proc
begin
    if ((global_var(GVAR_ATTACK_OUTPOST) >= 10) and (global_var(GVAR_V22_GAIN_ENTRANCE) < 1) and (global_var(GVAR_LEVEL_12_RADIO_CALL) == 0) and (get_pc_stat(PCSTAT_level) >= 12) and not((CUR_MAP_ARCAVES) and (elevation(dude_obj) == 1) or ((CUR_MAP_ARVILLAG) and (elevation(dude_obj) == 1)) or ((CUR_MAP_KLAMALL) and (elevation(dude_obj) == 1)) or ((CUR_MAP_KLARATCV) and (elevation(dude_obj) == 1)) or (CUR_MAP_KLATOXCV) or (CUR_MAP_VCTYDWTN) or (CUR_MAP_VCTYCOCL) or (CUR_MAP_MODINN) or (CUR_MAP_MODSHIT) or (CUR_MAP_MODWELL) or ((CUR_MAP_DEPOLV1) and (elevation(dude_obj) == 1)) or ((CUR_MAP_DEPOLV1) and (elevation(dude_obj) == 2)) or (CUR_MAP_DEPOLVA) or ((CUR_MAP_ARCAVES0) and (elevation(dude_obj) == 2)) or (CUR_MAP_ARCAVES6) or ((CUR_MAP_ARVILLAG0) and (elevation(dude_obj) == 1)) or ((CUR_MAP_REDWAME) and (elevation(dude_obj) == 1)) or ((CUR_MAP_REDWAME) and (elevation(dude_obj) == 2)) or (CUR_MAP_REDMTUN) or (CUR_MAP_BROKEN1) or ((CUR_MAP_RAIDERS2) and (elevation(dude_obj) == 2)) or ((CUR_MAP_KLATOXCV6) and (elevation(dude_obj) == 1)) or ((CUR_MAP_KLATOXCV6) and (elevation(dude_obj) == 2)) or (CUR_MAP_ENCPRES) or (CUR_MAP_SFSHUTL1)) and (obj_is_carrying_obj_pid(dude_obj, 100) > 0)) then begin
        add_timer_event(self_obj, 20, 0);
    end
end

procedure use_p_proc
begin
    script_overrides;
    if ((CUR_MAP_ARCAVES) and (elevation(dude_obj) == 1) or ((CUR_MAP_ARVILLAG) and (elevation(dude_obj) == 1)) or ((CUR_MAP_KLAMALL) and (elevation(dude_obj) == 1)) or ((CUR_MAP_KLARATCV) and (elevation(dude_obj) == 1)) or (CUR_MAP_KLATOXCV) or (CUR_MAP_VCTYDWTN) or (CUR_MAP_VCTYCOCL) or (CUR_MAP_MODINN) or (CUR_MAP_MODSHIT) or (CUR_MAP_MODWELL) or ((CUR_MAP_DEPOLV1) and (elevation(dude_obj) == 1)) or ((CUR_MAP_DEPOLV1) and (elevation(dude_obj) == 2)) or (CUR_MAP_DEPOLVA) or ((CUR_MAP_ARCAVES0) and (elevation(dude_obj) == 2)) or (CUR_MAP_ARCAVES6) or ((CUR_MAP_ARVILLAG0) and (elevation(dude_obj) == 1)) or ((CUR_MAP_REDWAME) and (elevation(dude_obj) == 1)) or ((CUR_MAP_REDWAME) and (elevation(dude_obj) == 2)) or (CUR_MAP_REDMTUN) or (CUR_MAP_BROKEN1) or ((CUR_MAP_RAIDERS2) and (elevation(dude_obj) == 2)) or ((CUR_MAP_KLATOXCV6) and (elevation(dude_obj) == 1)) or ((CUR_MAP_KLATOXCV6) and (elevation(dude_obj) == 2)) or (CUR_MAP_ENCPRES) or (CUR_MAP_SFSHUTL1)) then begin
        display_mstr(99);
    end
    else begin
        dialogue_system_enter;
    end
end

procedure choose_freq
begin
    Reply(100);
    giq_option(1, NAME, 101, freq_feng, NEUTRAL_REACTION);
    if (global_var(GVAR_ATTACK_OUTPOST) >= 1) then begin
        giq_option(1, NAME, 102, freq_bakersfield, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_ATTACK_OUTPOST) >= 10) and (global_var(GVAR_V22_GAIN_ENTRANCE) < 1) and (global_var(GVAR_LEVEL_12_RADIO_CALL) == 0)) then begin
        giq_option(1, NAME, 103, freq_lvl12, NEUTRAL_REACTION);
    end
end

procedure freq_feng
begin
end

procedure freq_bakersfield
begin
    if (dude_iq >= 4) then begin
        if (global_var(GVAR_KHANS_FOOD_CARAVAN) != 4) then begin
            if ((global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS) == 0) and (global_var(GVAR_KHANS_ENTRY) != 5)) then begin
                if (local_var(0) == 0) then begin
                    call node003();
                end
                else begin
                    call node025();
                end
            end
            else begin
                if ((global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS) != 0) and (global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS) >= game_time)) then begin
                    call node018();
                end
                else begin
                    call node001();
                end
            end
        end
        else begin
            call node027();
        end
    end
    else begin
        if (global_var(GVAR_KHANS_FOOD_CARAVAN) != 4) then begin
            if ((global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS) == 0) and (global_var(GVAR_KHANS_ENTRY) != 5)) then begin
                if (local_var(0) == 0) then begin
                    call node029();
                end
                else begin
                    call node039();
                end
            end
            else begin
                if ((global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS) != 0) and (global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS) >= game_time)) then begin
                    call node043();
                end
                else begin
                    call node041();
                end
            end
        end
        else begin
            call node027();
        end
    end
end

procedure freq_lvl12
begin
    call node048();
end

procedure node055
begin
    gsay_message(NAME, 553, NEUTRAL_REACTION);
end

procedure node054
begin
    Reply(550);
    giq_option(1, NAME, 551, node055, NEUTRAL_REACTION);
    giq_option(1, NAME, 552, node999, NEUTRAL_REACTION);
end

procedure node053
begin
    gsay_message(NAME, 518, NEUTRAL_REACTION);
end

procedure node052
begin
    set_global_var(GVAR_LEVEL_12_RADIO_CALL, 1);
    if (local_var(1) == 0) then begin
        Reply(mstr(512) + dude_name + mstr(513));
    end
    else begin
        Reply(514);
    end
    if (local_var(1) == 0) then begin
        giq_option(1, NAME, 515, node999, NEUTRAL_REACTION);
    end
    if (local_var(1) > 0) then begin
        giq_option(4, NAME, 516, node053, NEUTRAL_REACTION);
    end
    if (local_var(1) > 0) then begin
        giq_option(-3, NAME, 517, node053, NEUTRAL_REACTION);
    end
end

procedure node051
begin
    Reply(509);
    giq_option(1, NAME, 510, node052, NEUTRAL_REACTION);
    giq_option(1, NAME, 511, node997, NEUTRAL_REACTION);
end

procedure node050
begin
    set_global_var(GVAR_LEVEL_12_RADIO_CALL, 1);
    Reply(504);
    giq_option(4, NAME, 506, node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 508, node999, NEUTRAL_REACTION);
end

procedure node049
begin
    if (get_pc_stat(PCSTAT_level) >= 12) then begin
        call node050();
    end
    else begin
        Reply(503);
        giq_option(4, NAME, 505, node999, NEUTRAL_REACTION);
        giq_option(-3, NAME, 507, node999, NEUTRAL_REACTION);
    end
end

procedure node048
begin
    display_msg("replying");
    Reply(500);
    giq_option(4, NAME, 501, node049, NEUTRAL_REACTION);
    giq_option(-3, NAME, 502, node049, NEUTRAL_REACTION);
end

procedure node047
begin
    set_global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS, 0);
    set_global_var(GVAR_ATTACK_OUTPOST, 9);
    set_global_var(GVAR_KHANS_ENTRY, 5);
    gsay_message(NAME, 459, BAD_REACTION);
end

procedure node046
begin
    Reply(457);
    giq_option(-3, NAME, 461, node999, NEUTRAL_REACTION);
end

procedure node045
begin
    set_global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS, 0);
    set_global_var(GVAR_ATTACK_OUTPOST, 4);
    if (global_var(GVAR_KHANS_FIND_BRIEFCASE) < 2) then begin
        call node046();
    end
    else begin
        Reply(458);
        giq_option(-3, NAME, 461, node999, NEUTRAL_REACTION);
    end
end

procedure node044
begin
    set_global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS, 0);
    set_global_var(GVAR_ATTACK_OUTPOST, 3);
    Reply(456);
    giq_option(-3, NAME, 460, node999, NEUTRAL_REACTION);
end

procedure node043
begin
    Reply(450);
    if (global_var(GVAR_KHANS_ARMOR_CARAVAN) >= 1) then begin
        giq_option(-3, NAME, 451, node044, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_KHANS_FOOD_CARAVAN) >= 1) then begin
        giq_option(-3, NAME, 452, node045, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 453, node047, BAD_REACTION);
    giq_option(-3, NAME, 454, node999, BAD_REACTION);
end

procedure node042
begin
    gsay_message(NAME, 255, BAD_REACTION);
end

procedure node041
begin
    Reply(400);
    giq_option(-3, NAME, 401, node002, NEUTRAL_REACTION);
    giq_option(-3, NAME, 402, node999, NEUTRAL_REACTION);
end

procedure node040
begin
    Reply(233);
    giq_option(-3, NAME, 234, node999, NEUTRAL_REACTION);
end

procedure node039
begin
    Reply(400);
    giq_option(-3, NAME, 401, node040, NEUTRAL_REACTION);
    giq_option(-3, NAME, 402, node999, NEUTRAL_REACTION);
end

procedure node038
begin
    set_global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS, game_time + (24 * (60 * (60 * 10))));
    gsay_message(NAME, 414, BAD_REACTION);
end

procedure node037
begin
    Reply(416);
    giq_option(-3, NAME, 419, node999, NEUTRAL_REACTION);
end

procedure node036
begin
    set_global_var(GVAR_ATTACK_OUTPOST, 4);
    if (global_var(GVAR_KHANS_FIND_BRIEFCASE) < 2) then begin
        call node037();
    end
    else begin
        Reply(417);
        giq_option(-3, NAME, 419, node999, NEUTRAL_REACTION);
    end
end

procedure node035
begin
    set_global_var(GVAR_ATTACK_OUTPOST, 3);
    Reply(415);
    giq_option(-3, NAME, 418, node999, NEUTRAL_REACTION);
end

procedure node034
begin
    Reply(410);
    if (global_var(GVAR_KHANS_ARMOR_CARAVAN) >= 1) then begin
        giq_option(-3, NAME, 412, node035, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_KHANS_FOOD_CARAVAN) >= 1) then begin
        giq_option(-3, NAME, 413, node036, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 411, node038, NEUTRAL_REACTION);
end

procedure node033
begin
    Reply(408);
    giq_option(-3, NAME, 409, node034, NEUTRAL_REACTION);
end

procedure node032
begin
    set_local_var(0, 1);
    Reply(404);
    giq_option(-3, NAME, mstr(406) + dude_name + mstr(407), node033, NEUTRAL_REACTION);
end

procedure node031
begin
    Reply(403);
    giq_option(-3, NAME, 405, node032, NEUTRAL_REACTION);
end

procedure node030
begin
    if ((dude_perception >= 7) or (has_trait(TRAIT_PERK, dude_obj, PERK_bonus_awareness) > 0)) then begin
        call node031();
    end
    else begin
        call node032();
    end
end

procedure node029
begin
    Reply(400);
    giq_option(-3, NAME, 401, node030, NEUTRAL_REACTION);
    giq_option(-3, NAME, 402, node999, NEUTRAL_REACTION);
end

procedure node028
begin
    set_global_var(GVAR_ATTACK_OUTPOST, 6);
    set_global_var(GVAR_KHANS_NCR_RAID_TIME, game_time + (60 * (60 * 10)));
    Reply(302);
    giq_option(4, NAME, mstr(303) + dude_name + mstr(304), node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 306, node999, NEUTRAL_REACTION);
end

procedure node027
begin
    Reply(300);
    giq_option(4, NAME, 301, node028, NEUTRAL_REACTION);
    giq_option(-3, NAME, 305, node028, NEUTRAL_REACTION);
end

procedure node026
begin
    Reply(233);
    giq_option(4, NAME, 234, node999, NEUTRAL_REACTION);
end

procedure node025
begin
    Reply(200);
    giq_option(4, NAME, 201, node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 202, node999, NEUTRAL_REACTION);
end

procedure node024
begin
    set_global_var(GVAR_KHANS_NCR_RAID_TIME, game_time + (3 * (24 * (60 * (60 * 10)))));
    set_global_var(GVAR_KHANS_SPOOF_ATTACK, 2);
    Reply(259);
    giq_option(4, NAME, mstr(231) + dude_name + mstr(232), node999, NEUTRAL_REACTION);
end

procedure node023
begin
    set_global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS, 0);
    set_global_var(GVAR_ATTACK_OUTPOST, 5);
    Reply(222);
    giq_option(4, NAME, 227, node024, NEUTRAL_REACTION);
end

procedure node022
begin
    Reply(257);
    giq_option(4, NAME, mstr(225) + dude_name + mstr(226), node999, NEUTRAL_REACTION);
end

procedure node021
begin
    set_global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS, 0);
    set_global_var(GVAR_ATTACK_OUTPOST, 4);
    if (global_var(GVAR_KHANS_FIND_BRIEFCASE) < 2) then begin
        call node022();
    end
    else begin
        Reply(258);
        giq_option(4, NAME, mstr(225) + dude_name + mstr(226), node999, NEUTRAL_REACTION);
    end
end

procedure node020
begin
    set_global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS, 0);
    set_global_var(GVAR_ATTACK_OUTPOST, 3);
    Reply(256);
    giq_option(4, NAME, mstr(260) + dude_name + mstr(261), node999, NEUTRAL_REACTION);
end

procedure node019
begin
    Reply(250);
    if (global_var(GVAR_KHANS_ARMOR_CARAVAN) >= 1) then begin
        giq_option(4, NAME, 251, node020, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_KHANS_FOOD_CARAVAN) >= 1) then begin
        giq_option(4, NAME, 252, node021, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_KHANS_SPOOF_ATTACK) >= 1) then begin
        giq_option(4, NAME, 253, node023, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 254, node999, NEUTRAL_REACTION);
end

procedure node018
begin
    Reply(200);
    giq_option(4, NAME, 201, node019, NEUTRAL_REACTION);
    giq_option(4, NAME, 202, node999, NEUTRAL_REACTION);
end

procedure node017
begin
    set_global_var(GVAR_ATTACK_OUTPOST, 9);
    set_global_var(GVAR_KHANS_ENTRY, 5);
    if (has_skill(dude_obj, SKILL_CONVERSANT) < 95) then begin
        gsay_message(NAME, 229, BAD_REACTION);
    end
    else begin
        Reply(229);
        giq_option(4, NAME, 2320, node999, BAD_REACTION);
    end
end

procedure node016
begin
    set_global_var(GVAR_KAHGAN_ULTIMATUM_24_HOURS, game_time + (24 * (60 * (60 * 10))));
    gsay_message(NAME, 228, BAD_REACTION);
end

procedure node015
begin
    Reply(218);
    giq_option(4, NAME, 223, node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 224, node017, NEUTRAL_REACTION);
end

procedure node014
begin
    set_global_var(GVAR_KHANS_NCR_RAID_TIME, game_time + (3 * (24 * (60 * (60 * 10)))));
    set_global_var(GVAR_KHANS_SPOOF_ATTACK, 2);
    Reply(230);
    giq_option(4, NAME, mstr(231) + dude_name + mstr(232), node999, NEUTRAL_REACTION);
end

procedure node013
begin
    set_global_var(GVAR_ATTACK_OUTPOST, 5);
    Reply(222);
    giq_option(4, NAME, 227, node014, NEUTRAL_REACTION);
end

procedure node012
begin
    Reply(220);
    giq_option(4, NAME, mstr(225) + dude_name + mstr(226), node999, NEUTRAL_REACTION);
end

procedure node011
begin
    set_global_var(GVAR_ATTACK_OUTPOST, 4);
    if (global_var(GVAR_KHANS_FIND_BRIEFCASE) < 2) then begin
        call node012();
    end
    else begin
        Reply(221);
        giq_option(4, NAME, mstr(225) + dude_name + mstr(226), node999, NEUTRAL_REACTION);
    end
end

procedure node010
begin
    set_global_var(GVAR_ATTACK_OUTPOST, 3);
    Reply(219);
    giq_option(4, NAME, mstr(225) + dude_name + mstr(226), node999, NEUTRAL_REACTION);
end

procedure node009
begin
    Reply(2131);
    if (global_var(GVAR_KHANS_ARMOR_CARAVAN) >= 1) then begin
        giq_option(4, NAME, 215, node010, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_KHANS_FOOD_CARAVAN) >= 1) then begin
        giq_option(4, NAME, 216, node011, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_KHANS_SPOOF_ATTACK) >= 1) then begin
        giq_option(4, NAME, 217, node013, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 214, node015, NEUTRAL_REACTION);
end

procedure node008
begin
    set_local_var(0, 1);
    Reply(209);
    giq_option(4, NAME, mstr(213) + global_var(GVAR_BAKERSFIELD_NCR_FORCE) + mstr(2130), node009, NEUTRAL_REACTION);
end

procedure node007
begin
    Reply(211);
    giq_option(4, NAME, 212, node008, NEUTRAL_REACTION);
end

procedure node006
begin
    if (is_success(do_check(dude_obj, 1, -1))) then begin
        call node007();
    end
    else begin
        Reply(210);
        giq_option(4, NAME, 212, node008, NEUTRAL_REACTION);
    end
end

procedure node005
begin
    Reply(204);
    giq_option(4, NAME, 207, node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 208, node008, NEUTRAL_REACTION);
end

procedure node004
begin
    if ((dude_perception >= 7) or (has_trait(TRAIT_PERK, dude_obj, PERK_bonus_awareness) > 0)) then begin
        call node005();
    end
    else begin
        Reply(203);
        giq_option(4, NAME, mstr(205) + dude_name + mstr(206), node008, NEUTRAL_REACTION);
    end
end

procedure node003
begin
    display_msg("replying");
    Reply(200);
    giq_option(4, NAME, 201, node004, NEUTRAL_REACTION);
    giq_option(1, NAME, 202, node999, NEUTRAL_REACTION);
end

procedure node002
begin
    gsay_message(NAME, 255, NEUTRAL_REACTION);
end

procedure node001
begin
    Reply(200);
    giq_option(4, NAME, 201, node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 202, node999, NEUTRAL_REACTION);
end

procedure node997
begin
    set_local_var(1, local_var(1) + 1);
end

procedure node999
begin
end
