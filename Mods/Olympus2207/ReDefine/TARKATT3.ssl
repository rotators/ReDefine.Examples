variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001x;
procedure Node002x;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure Node055;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(40, 70));
        set_local_var(5, random(50, 80));
        set_local_var(6, random(10, 30));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 1);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TARTAR_WOMEN);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0) and (local_var(7) != 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(29, 76), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(200, 700), 2);
    end
    if ((local_var(7) == 0) and (tile_distance(tile_num(self_obj), dude_tile) <= 2) and (elevation(self_obj) == 0)) then begin
        if (game_ui_is_disabled) then begin
            game_ui_enable;
        end
        anim(dude_obj, 1000, 0);
        dialogue_system_enter;
    end
    if ((local_var(10) == 1) and (elevation(self_obj) == 0)) then begin
        move_to(self_obj, 1, 1);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_ARROYO) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    end
    if ((global_var(GVAR_PLAYER_MARRIED) == 2) and (local_var(7) == 1)) then begin
        float_msg(self_obj, mstr(random(1030, 1033)), FLOAT_MSG_NORMAL);
    end
    else begin
        if ((global_var(GVAR_PLAYER_MARRIED) == 3) and (local_var(9) == 1)) then begin
            if (random(0, 100) <= 50) then begin
                float_msg(self_obj, mstr(dude_name + mstr(random(1034, 1036))), FLOAT_MSG_NORMAL);
            end
            else begin
                float_msg(self_obj, mstr(random(1037, 1039)), FLOAT_MSG_NORMAL);
            end
        end
        else begin
            start_gdialog(82, self_obj, -1, -1, -1);
            gsay_start;
            if (local_var(7) == 0) then begin
                call Node001x();
            end
            else begin
                if (local_var(8) == 1) then begin
                    call Node010();
                end
                else begin
                    if (global_var(GVAR_ENDGAME_MOVIE_NCR) > 1) then begin
                        call Node023();
                    end
                    else begin
                        if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 120) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 121) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 122) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 123) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 124) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 125) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 126) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 127) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 128) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 129) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 391) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 394)) then begin
                            call Node012();
                        end
                        else begin
                            call Node001();
                        end
                    end
                end
            end
            gsay_end;
            end_dialogue;
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        if ((47 == 50) or (47 == 59)) then begin
            set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) - 3);
        end
        else begin
            set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (map_first_run) then begin
        game_ui_disable;
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_obj_run_to_obj(self_obj, dude_obj, -1);
        reg_anim_func(3, 0);
        add_timer_event(self_obj, 500, 3);
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if (tile_distance(tile_num(self_obj), local_var(3)) > random(15, 20)) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), local_var(3)), random(random(15, 20) / 2, random(15, 20))), 0);
        end
        else begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(random(15, 20) / 4, random(15, 20) / 2)), 0);
        end
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if ((fixed_param == 3) and game_ui_is_disabled) then begin
        game_ui_enable;
    end
end

procedure Node001x
begin
    set_local_var(7, 1);
    Reply(mstr(5) + dude_name + mstr(6));
    giq_option(1, NAME, 7, Node002x, NEUTRAL_REACTION);
    giq_option(1, NAME, 8, Node999, NEUTRAL_REACTION);
end

procedure Node002x
begin
    Reply(9);
    giq_option(1, NAME, 8, Node999, NEUTRAL_REACTION);
end

procedure Node001
begin
    Reply(10);
    giq_option(1, NAME, 11, Node002, NEUTRAL_REACTION);
    if (global_var(GVAR_ENEMY_KLAMATH) < 50) then begin
        giq_option(1, NAME, 12, Node002, NEUTRAL_REACTION);
    end
end

procedure Node002
begin
    Reply(20);
    giq_option(1, NAME, 21, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 22, Node004, NEUTRAL_REACTION);
    giq_option(1, NAME, 23, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 24, Node003, NEUTRAL_REACTION);
end

procedure Node003
begin
    if (global_var(GVAR_ENEMY_KLAMATH) < 50) then begin
        Reply(30);
        giq_option(1, NAME, 32, Node006, NEUTRAL_REACTION);
    end
    else begin
        Reply(31);
        giq_option(1, NAME, 33, Node006, NEUTRAL_REACTION);
    end
end

procedure Node004
begin
    Reply(40);
    if (global_var(GVAR_ENEMY_KLAMATH) < 50) then begin
        giq_option(1, NAME, 41, Node003, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 42, Node003, NEUTRAL_REACTION);
    end
end

procedure Node005
begin
    Reply(50);
    if (global_var(GVAR_ENEMY_KLAMATH) < 50) then begin
        giq_option(1, NAME, 51, Node003, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 52, Node003, NEUTRAL_REACTION);
    end
end

procedure Node006
begin
    Reply(60);
    giq_option(1, NAME, 61, Node007, NEUTRAL_REACTION);
end

procedure Node007
begin
    set_local_var(8, 1);
    Reply(70);
    giq_option(1, NAME, 71, Node010, NEUTRAL_REACTION);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        Reply(100);
    end
    else begin
        Reply(101);
    end
    if (global_var(GVAR_ENEMY_KLAMATH) >= 50) then begin
        giq_option(1, NAME, 102, Node027, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 103, Node030, NEUTRAL_REACTION);
    if ((global_var(GVAR_TORR_HARMED) bwand 1) != 0) then begin
        giq_option(1, NAME, 104, Node035, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 105, Node036, NEUTRAL_REACTION);
    giq_option(1, NAME, 106, Node055, NEUTRAL_REACTION);
    if (not((global_var(GVAR_TORR_HARMED) bwand 1) != 0)) then begin
        giq_option(1, NAME, 107, Node011, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 108, Node011, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(110);
    giq_option(1, NAME, 111, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    set_local_var(8, 1);
    Reply(120);
    if (global_var(GVAR_ENEMY_KLAMATH) < 50) then begin
        giq_option(1, NAME, 121, Node013, NEUTRAL_REACTION);
        giq_option(1, NAME, 122, Node013, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 123, Node018, NEUTRAL_REACTION);
    if (global_var(GVAR_ENEMY_KLAMATH) >= 50) then begin
        giq_option(1, NAME, 124, Node013, NEUTRAL_REACTION);
        giq_option(1, NAME, 125, Node022, NEUTRAL_REACTION);
    end
end

procedure Node013
begin
    Reply(130);
    giq_option(1, NAME, 131, Node014, NEUTRAL_REACTION);
    giq_option(1, NAME, 132, Node021, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(140);
    giq_option(1, NAME, 141, Node015, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(150);
    giq_option(1, NAME, 151, Node016, NEUTRAL_REACTION);
    giq_option(1, NAME, 152, Node016, NEUTRAL_REACTION);
    giq_option(1, NAME, 153, Node016, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(160);
    giq_option(1, NAME, 161, Node017, NEUTRAL_REACTION);
    giq_option(1, NAME, 162, Node017, NEUTRAL_REACTION);
    giq_option(1, NAME, 163, Node003, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(170);
    giq_option(1, NAME, 171, Node003, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(180);
    giq_option(1, NAME, 181, Node019, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(190);
    giq_option(1, NAME, 191, Node020, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(200);
    giq_option(1, NAME, 201, Node007, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(210);
    giq_option(1, NAME, 211, Node014, NEUTRAL_REACTION);
    giq_option(1, NAME, 212, Node014, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(220);
    giq_option(1, NAME, 221, Node018, NEUTRAL_REACTION);
end

procedure Node023
begin
    set_local_var(8, 1);
    Reply(230);
    giq_option(1, NAME, 231, Node024, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(240);
    giq_option(1, NAME, 241, Node025, NEUTRAL_REACTION);
    giq_option(1, NAME, 242, Node025, NEUTRAL_REACTION);
    giq_option(1, NAME, 243, Node025, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(250);
    giq_option(1, NAME, 251, Node026, NEUTRAL_REACTION);
end

procedure Node026
begin
    set_local_var(10, 1);
    Reply(260);
    giq_option(1, NAME, 261, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(270);
    giq_option(1, NAME, 271, Node028, NEUTRAL_REACTION);
    giq_option(1, NAME, 272, Node029, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(280);
    giq_option(1, NAME, 281, Node010, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(290);
    giq_option(1, NAME, 291, Node010, NEUTRAL_REACTION);
end

procedure Node030
begin
    if ((game_time_in_seconds - local_var(11)) < (3600 * 24 * 7)) then begin
        set_local_var(11, game_time_in_seconds);
        Reply(300);
        giq_option(1, NAME, 304, Node010, NEUTRAL_REACTION);
        giq_option(1, NAME, 305, Node010, NEUTRAL_REACTION);
    end
    else begin
        set_local_var(11, game_time_in_seconds);
        if (local_var(12) == 0) then begin
            set_local_var(12, local_var(12) + 1);
            Reply(301);
            giq_option(1, NAME, 306, Node031, NEUTRAL_REACTION);
            giq_option(1, NAME, 307, Node032, NEUTRAL_REACTION);
        end
        else begin
            if (local_var(12) == 1) then begin
                set_local_var(12, local_var(12) + 1);
                Reply(302);
                giq_option(1, NAME, 308, Node031, NEUTRAL_REACTION);
                giq_option(1, NAME, 309, Node032, NEUTRAL_REACTION);
            end
            else begin
                if (local_var(12) == 3) then begin
                    set_local_var(12, local_var(12) + 1);
                    Reply(303);
                    giq_option(1, NAME, 3010, Node032, NEUTRAL_REACTION);
                    giq_option(1, NAME, 3011, Node031, NEUTRAL_REACTION);
                end
            end
        end
    end
end

procedure Node031
begin
    Reply(310);
    giq_option(1, NAME, 311, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 312, Node999, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(320);
    giq_option(1, NAME, 321, Node033, NEUTRAL_REACTION);
    giq_option(1, NAME, 322, Node034, NEUTRAL_REACTION);
    giq_option(1, NAME, 323, Node034, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(330);
    giq_option(1, NAME, 331, Node010, NEUTRAL_REACTION);
end

procedure Node034
begin
    Reply(340);
    giq_option(1, NAME, 341, Node010, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(350);
    giq_option(1, NAME, 351, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 352, Node010, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(360);
    giq_option(1, NAME, 361, Node037, NEUTRAL_REACTION);
    if (global_var(GVAR_8_BALL_TRASH_SECRET) == 2) then begin
        giq_option(1, NAME, 362, Node038, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_VAULT_MONSTER_COUNT) >= 2) then begin
        giq_option(1, NAME, 363, Node039, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_NCR_CATTLE_TIME_MIN) == 1) then begin
        giq_option(1, NAME, 364, Node044, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_NEW_RENO_MCGEE_ATTACKED) >= 3) then begin
        giq_option(1, NAME, 365, Node047, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_NCR_V15_DARION_DEAL) >= 2) then begin
        giq_option(1, NAME, 366, Node048, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_NEW_RENO_JET_SOURCE) > 0) then begin
        giq_option(1, NAME, 367, Node050, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 368, Node010, NEUTRAL_REACTION);
end

procedure Node037
begin
    Reply(370);
    giq_option(1, NAME, 371, Node036, NEUTRAL_REACTION);
    giq_option(1, NAME, 372, Node010, NEUTRAL_REACTION);
end

procedure Node038
begin
    Reply(380);
    giq_option(1, NAME, 381, Node041, NEUTRAL_REACTION);
    giq_option(1, NAME, 382, Node010, NEUTRAL_REACTION);
end

procedure Node039
begin
    Reply(390);
    giq_option(1, NAME, 391, Node040, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(400);
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 2) then begin
        giq_option(1, NAME, 401, Node041, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 3) then begin
        giq_option(1, NAME, 402, Node042, NEUTRAL_REACTION);
        giq_option(1, NAME, 403, Node042, NEUTRAL_REACTION);
    end
end

procedure Node041
begin
    Reply(410);
    giq_option(1, NAME, 411, Node037, NEUTRAL_REACTION);
end

procedure Node042
begin
    Reply(420);
    giq_option(1, NAME, 421, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 422, Node037, NEUTRAL_REACTION);
end

procedure Node043
begin
    Reply(430);
    giq_option(1, NAME, 431, Node037, NEUTRAL_REACTION);
    giq_option(1, NAME, 432, Node010, NEUTRAL_REACTION);
end

procedure Node044
begin
    Reply(440);
    giq_option(1, NAME, 441, Node045, NEUTRAL_REACTION);
end

procedure Node045
begin
    Reply(450);
    giq_option(1, NAME, 451, Node046, NEUTRAL_REACTION);
    giq_option(1, NAME, 452, Node046, NEUTRAL_REACTION);
end

procedure Node046
begin
    Reply(460);
    giq_option(1, NAME, 461, Node036, NEUTRAL_REACTION);
    giq_option(1, NAME, 462, Node010, NEUTRAL_REACTION);
end

procedure Node047
begin
    Reply(470);
    giq_option(1, NAME, 471, Node037, NEUTRAL_REACTION);
    giq_option(1, NAME, 472, Node010, NEUTRAL_REACTION);
end

procedure Node048
begin
    Reply(480);
    giq_option(1, NAME, 481, Node049, NEUTRAL_REACTION);
end

procedure Node049
begin
    if (dude_skill(SKILL_SPEECH) > 199) then begin
        Reply(490);
        giq_option(1, NAME, 492, Node037, NEUTRAL_REACTION);
    end
    else begin
        Reply(491);
        giq_option(1, NAME, 493, Node036, NEUTRAL_REACTION);
        giq_option(1, NAME, 494, Node010, NEUTRAL_REACTION);
    end
end

procedure Node050
begin
    Reply(500);
    giq_option(1, NAME, 501, Node051, NEUTRAL_REACTION);
end

procedure Node051
begin
    Reply(510);
    giq_option(1, NAME, 511, Node052, NEUTRAL_REACTION);
    giq_option(1, NAME, 512, Node054, NEUTRAL_REACTION);
end

procedure Node052
begin
    set_local_var(9, 1);
    Reply(520);
    giq_option(1, NAME, 521, Node053, NEUTRAL_REACTION);
    giq_option(1, NAME, 522, Node999, NEUTRAL_REACTION);
end

procedure Node053
begin
    set_local_var(9, 1);
    Reply(530);
    giq_option(1, NAME, 531, Node999, NEUTRAL_REACTION);
end

procedure Node054
begin
    set_local_var(9, 1);
    Reply(540);
    giq_option(1, NAME, 541, Node053, NEUTRAL_REACTION);
    giq_option(1, NAME, 542, Node999, NEUTRAL_REACTION);
end

procedure Node055
begin
    Reply(550);
    giq_option(1, NAME, 551, Node010, NEUTRAL_REACTION);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end
