variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node013b;
procedure Node014;
procedure Node999;
procedure Node998;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(70, 80));
        set_local_var(5, random(30, 40));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 38);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_OLYMPUS_ENGINEER);
        if (random(0, 100) <= 50) then begin
            add_obj_to_inven(self_obj, create_object(145, 1, 2));
            add_mult_objs_to_inven(self_obj, create_object(28, 1, 2), random(1, 3));
        end
        else begin
            if (random(0, 100) <= 50) then begin
                add_obj_to_inven(self_obj, create_object(141, 1, 2));
                add_mult_objs_to_inven(self_obj, create_object(25, 1, 2), random(2, 5));
            end
            else begin
                add_obj_to_inven(self_obj, create_object(134, 1, 2));
                add_mult_objs_to_inven(self_obj, create_object(15, 1, 2), random(4, 9));
            end
        end
        if (random(0, 100) <= 50) then begin
            add_obj_to_inven(self_obj, create_object(229, 1, 2));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(231, 1, 2));
        end
        if (random(0, 100) <= 35) then begin
            add_obj_to_inven(self_obj, create_object(61, 1, 2));
        end
        if (random(0, 100) <= 35) then begin
            add_obj_to_inven(self_obj, create_object(67, 1, 2));
        end
        if (random(0, 100) <= 50) then begin
            add_obj_to_inven(self_obj, create_object(228, 1, 2));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(226, 1, 2));
        end
        if (random(0, 100) <= 21) then begin
            add_obj_to_inven(self_obj, create_object(225, 1, 2));
        end
        if (random(0, 100) <= 17) then begin
            add_obj_to_inven(self_obj, create_object(403, 1, 2));
        end
        if (random(0, 100) <= 26) then begin
            add_obj_to_inven(self_obj, create_object(408, 1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object(223, 1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object(69, 1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object(82, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(228, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(410, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(431, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(110, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(323, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(73, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(235, 1, 2));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, 1000, 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, 1000, 2);
    end
    if (tile_distance(tile_num(self_obj), dude_tile) <= 4) then begin
        if ((global_var(GVAR_ENDGAME_MOVIE_SAN_FRAN_PUNKS) == 0) and (local_var(8) == 0)) then begin
            dialogue_system_enter;
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_VAULT_13) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    end
    if (local_var(9) == 1) then begin
        float_msg(self_obj, mstr(random(5, 7)), FLOAT_MSG_NORMAL);
    end
    else begin
        set_local_var(8, 1);
        start_gdialog(521, self_obj, -1, -1, -1);
        gsay_start;
        if (global_var(GVAR_ENDGAME_MOVIE_SAN_FRAN_PUNKS) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        set_global_var(GVAR_TOWN_REP_VAULT_13, global_var(GVAR_TOWN_REP_VAULT_13) - 3);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    set_local_var(7, 1);
    Reply(10);
    if (global_var(GVAR_VAULT_LYNETTE_STATUS) == 1) then begin
        giq_option(1, NAME, 11, Node003, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 12, Node002, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(20);
    giq_option(1, NAME, 21, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(30);
    giq_option(1, NAME, 31, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 32, Node004, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(40);
    giq_option(1, NAME, 41, Node012, NEUTRAL_REACTION);
    giq_option(1, NAME, 42, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 43, Node005, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(50);
    giq_option(1, NAME, 51, Node007, NEUTRAL_REACTION);
    giq_option(1, NAME, 52, Node009, NEUTRAL_REACTION);
    giq_option(1, NAME, 53, Node006, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(60);
    giq_option(1, NAME, 61, Node007, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(62);
    giq_option(1, NAME, 63, Node008, NEUTRAL_REACTION);
end

procedure Node008
begin
    critter_heal(self_obj, -100);
    Reply(81);
    giq_option(1, NAME, 83, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(90);
    giq_option(1, NAME, 91, Node998, NEUTRAL_REACTION);
end

procedure Node010
begin
    if (global_var(GVAR_ENCLAVE_REACTOR) == 0) then begin
        Reply(100);
        giq_option(1, NAME, 102, Node999, NEUTRAL_REACTION);
    end
    else begin
        Reply(101);
        giq_option(1, NAME, 103, Node014, NEUTRAL_REACTION);
    end
end

procedure Node011
begin
    Reply(110);
    giq_option(1, NAME, 111, Node013, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(120);
    giq_option(1, NAME, 121, Node013, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(130);
    giq_option(1, NAME, 135, Node013b, NEUTRAL_REACTION);
end

procedure Node013b
begin
    if (global_var(GVAR_ENDGAME_MOVIE_SAN_FRAN_PUNKS) == 0) then begin
        set_global_var(GVAR_ENDGAME_MOVIE_SAN_FRAN_PUNKS, 1);
        add_obj_to_inven(dude_obj, create_object(346, 1, 2));
    end
    Reply(134);
    giq_option(1, NAME, 131, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 132, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 133, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    if (global_var(GVAR_ENDGAME_MOVIE_SAN_FRAN_PUNKS) != 2) then begin
        set_global_var(GVAR_ENDGAME_MOVIE_SAN_FRAN_PUNKS, 2);
        give_exp_points(floor(250) + (dude_iq * floor(104)) + (dude_luck * floor(41)) + (floor(16) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(250) + (dude_iq * floor(104)) + (dude_luck * floor(41)) + (floor(16) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
    end
    set_global_var(GVAR_ENCLAVE_REACTOR, 0);
    set_local_var(9, 1);
    Reply(140);
    giq_option(1, NAME, 141, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
    already_talk := 0;
    fadeOut(500);
    move_to(dude_obj, 18076, elevation(self_obj));
    anim(dude_obj, 1000, 4);
    set_local_var(8, 0);
    fadeIn(700);
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end
