variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable max_distance;
variable animation_is_called;
variable distance_to_walk;
variable stuff_container;
variable spec_weapon;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        if (obj_pid(self_obj) == 16777419) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 203);
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GENERIC_RAT);
            add_obj_to_inven(self_obj, create_object(518, 1, 2));
            wield_obj(obj_carrying_pid_obj(self_obj, 518));
        end
        max_distance := random(4, 8);
    end
    set_local_var(2, 1);
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(10, 20), 1);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (local_var(2) == 1) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(6);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(random(1, 2));
end

procedure pickup_p_proc
begin
    script_overrides;
end

procedure push_p_proc
begin
    script_overrides;
    set_local_var(2, 1);
end

procedure talk_p_proc
begin
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
    end
    if (not(tile_contains_obj_pid(2, 2, 250))) then begin
        stuff_container := create_object(250, 2, 2);
    end
    else begin
        stuff_container := tile_contains_pid_obj(2, 2, 250);
    end
    move_obj_inven_to_obj(self_obj, stuff_container);
    set_global_var(GVAR_NCR_GENERIC_STATE, global_var(GVAR_NCR_GENERIC_STATE) + 1);
    if (global_var(GVAR_NCR_GENERIC_STATE) >= 15) then begin
        if (global_var(GVAR_8_BALL_TRASH_SECRET) == 2) then begin
            display_mstr(12);
        end
        else begin
            display_mstr(10);
        end
        play_sfx("LEVELUP");
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        script_overrides;
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    max_distance := random(4, 8);
    if (not(map_first_run)) then begin
        set_local_var(3, 13073);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (not(combat_is_initialized)) then begin
            if (tile_distance(tile_num(self_obj), local_var(3)) < max_distance) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(floor(max_distance / 2), max_distance)), 0);
            end
            else begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), local_var(3)), random(floor(max_distance / 2), max_distance)), 0);
            end
        end
        animation_is_called := 0;
    end
end
