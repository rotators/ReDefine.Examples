variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable trading_container;
variable trading_container2;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node999;
procedure Node998;
procedure NodeBarter;
procedure Fight;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(75, 85));
        set_local_var(5, random(55, 65));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 7);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_RAIDER_BERSERK);
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object(438, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_mult_objs_to_inven(self_obj, create_object(238, 1, 2), random(1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_mult_objs_to_inven(self_obj, create_object(213, 1, 2), random(1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(233, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(420, 1, 2));
        end
        if (random(0, 100) <= 9) then begin
            add_obj_to_inven(self_obj, create_object(236, 1, 2));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object(218, 1, 2));
        end
        if (random(0, 100) <= 6) then begin
            add_obj_to_inven(self_obj, create_object(440, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(244, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(428, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(422, 1, 2));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object(423, 1, 2));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object(426, 1, 2));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object(433, 1, 2));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object(421, 1, 2));
        end
        if (random(0, 100) <= 40) then begin
            add_obj_to_inven(self_obj, create_object(164, 1, 2));
            add_mult_objs_to_inven(self_obj, create_object(2, 1, 2), random(21, 38));
        end
        else begin
            if (random(0, 100) <= 40) then begin
                add_obj_to_inven(self_obj, create_object(150, 1, 2));
            end
            else begin
                add_obj_to_inven(self_obj, create_object(159, 1, 2));
            end
            add_mult_objs_to_inven(self_obj, create_object(22, 1, 2), random(2, 4));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object(112, 1, 2));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(109, 1, 2));
        end
        if (random(0, 100) <= 33) then begin
            add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(5, 20));
        end
        if (random(0, 100) <= 25) then begin
            add_mult_objs_to_inven(self_obj, create_object(411, 1, 2), random(3, 7));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(233, 1, 2));
        end
        if (random(0, 100) <= 9) then begin
            add_obj_to_inven(self_obj, create_object(243, 1, 2));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object(237, 1, 2));
        end
        if (random(0, 100) <= 7) then begin
            add_obj_to_inven(self_obj, create_object(234, 1, 2));
        end
        if (random(0, 100) <= 6) then begin
            add_obj_to_inven(self_obj, create_object(232, 1, 2));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if (tile_distance(tile_num(self_obj), dude_tile) <= 10) then begin
        if ((local_var(8) == 0) and (obj_can_see_obj(self_obj, dude_obj) == 1) and not((obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) != 3) and (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) != 3))) then begin
            float_msg(self_obj, mstr(5), FLOAT_MSG_NORMAL);
            metarule3(METARULE3_TILE_SET_CENTER, tile_num(self_obj), elevation(self_obj), 0);
            set_local_var(8, 1);
            add_timer_event(self_obj, random(90, 140), 3);
        end
        if ((local_var(8) == 2) and (obj_can_see_obj(self_obj, dude_obj) == 1) and not((obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) != 3) and (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) != 3)) and not(combat_is_initialized)) then begin
            float_msg(self_obj, mstr(6), FLOAT_MSG_RED);
            attack_setup(self_obj, dude_obj);
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_MODOC) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    end
    start_gdialog(160, self_obj, -1, -1, -1);
    gsay_start;
    if (global_var(GVAR_BH_HENCH_KILLED) == 1) then begin
        call Node036();
    end
    else begin
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_TORR_HARMED, global_var(GVAR_TORR_HARMED) bwor 32768);
    if (global_var(GVAR_VAULT_SERVANT) == 1) then begin
        set_global_var(GVAR_VAULT_SERVANT, 0);
    end
    if (((global_var(GVAR_TORR_HARMED) bwand 65536) != 0) and ((global_var(GVAR_TORR_HARMED) bwand 131072) != 0) and ((global_var(GVAR_TORR_HARMED) bwand 32768) != 0) and ((global_var(GVAR_TORR_HARMED) bwand 16384) != 0) and (global_var(GVAR_KARMA_SJ_BOSS) == 0)) then begin
        set_global_var(GVAR_KARMA_SJ_BOSS, 1);
        set_global_var(GVAR_TOWN_REP_MODOC, 25);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        if ((52 == 50) or (52 == 59)) then begin
            set_global_var(GVAR_TOWN_REP_MODOC, global_var(GVAR_TOWN_REP_MODOC) - 3);
        end
        else begin
            set_global_var(GVAR_TOWN_REP_MODOC, global_var(GVAR_TOWN_REP_MODOC) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (tile_num(self_obj) != local_var(3)) then begin
        move_to(self_obj, local_var(3), elevation(self_obj));
        anim(self_obj, 1000, 3);
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
        set_local_var(8, 2);
    end
end

procedure Node001
begin
    set_local_var(7, 1);
    already_talk := 1;
    Reply(10);
    giq_option(1, NAME, 11, Node002, NEUTRAL_REACTION);
    giq_option(1, NAME, 12, Node002, NEUTRAL_REACTION);
    giq_option(1, NAME, 13, Node002, NEUTRAL_REACTION);
    giq_option(1, NAME, 14, Node002, NEUTRAL_REACTION);
    giq_option(1, NAME, 15, Node002, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(20);
    giq_option(1, NAME, 21, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 22, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 23, Node004, NEUTRAL_REACTION);
    giq_option(1, NAME, 24, Node006, NEUTRAL_REACTION);
end

procedure Node003
begin
    set_local_var(8, 2);
    Reply(30);
    giq_option(1, NAME, 31, Node998, NEUTRAL_REACTION);
end

procedure Node004
begin
    set_local_var(8, 2);
    Reply(40);
    giq_option(1, NAME, 41, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 42, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    set_local_var(8, 2);
    Reply(50);
    giq_option(1, NAME, 51, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 52, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    set_local_var(8, 2);
    Reply(60);
    giq_option(1, NAME, 61, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 62, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        Reply(1002);
    end
    else begin
        Reply(1001);
    end
    giq_option(1, NAME, 101, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 102, Node013, NEUTRAL_REACTION);
    if ((global_var(GVAR_VAULT_SERVANT) == 1) or (global_var(GVAR_VAULT_SERVANT) == 2)) then begin
        giq_option(1, NAME, 103, Node025, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_MUTATE) == 1) and (global_var(GVAR_VAULT_SERVANT) < 3) and (local_var(9) == 0)) then begin
        giq_option(1, NAME, 104, Node032, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 105, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(110);
    giq_option(1, NAME, 111, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 112, Node012, NEUTRAL_REACTION);
    giq_option(1, NAME, 113, Node003, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(120);
    giq_option(1, NAME, 121, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 122, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 123, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(130);
    giq_option(1, NAME, 131, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 132, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 133, Node014, NEUTRAL_REACTION);
    if (global_var(GVAR_VAULT_SERVANT) == 0) then begin
        giq_option(1, NAME, 134, Node019, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 135, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 136, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(140);
    giq_option(1, NAME, 141, Node015, NEUTRAL_REACTION);
    giq_option(1, NAME, 142, Node016, NEUTRAL_REACTION);
    giq_option(1, NAME, 143, Node010, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(150);
    giq_option(1, NAME, 151, Node017, NEUTRAL_REACTION);
    giq_option(1, NAME, 152, Node016, NEUTRAL_REACTION);
    giq_option(1, NAME, 153, Node010, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(160);
    giq_option(1, NAME, 161, Node017, NEUTRAL_REACTION);
    giq_option(1, NAME, 162, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(170);
    giq_option(1, NAME, 171, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 172, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 173, Node020, NEUTRAL_REACTION);
    giq_option(1, NAME, 174, Node014, NEUTRAL_REACTION);
    giq_option(1, NAME, 175, Node010, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(180);
    giq_option(1, NAME, 181, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 182, Node014, NEUTRAL_REACTION);
    giq_option(1, NAME, 183, Node010, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(190);
    giq_option(1, NAME, 191, Node021, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(200);
    giq_option(1, NAME, 201, Node010, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(210);
    giq_option(1, NAME, 211, Node022, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(220);
    giq_option(1, NAME, 221, Node024, NEUTRAL_REACTION);
    giq_option(1, NAME, 222, Node023, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(230);
    giq_option(1, NAME, 231, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    if (global_var(GVAR_VAULT_SERVANT) == 0) then begin
        set_global_var(GVAR_VAULT_SERVANT, 1);
    end
    Reply(240);
    giq_option(1, NAME, 241, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(250);
    if (((global_var(GVAR_TORR_HARMED) bwand 16777216) != 0) or (global_var(GVAR_VAULT_SERVANT) == 2)) then begin
        giq_option(1, NAME, 251, Node027, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 252, Node026, NEUTRAL_REACTION);
    if (global_var(GVAR_BH_MALE_NAMES_USED) == 1) then begin
        giq_option(1, NAME, 253, Node030, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 254, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(260);
    giq_option(1, NAME, 261, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(270);
    if (global_var(GVAR_BH_FEMALE_NAMES_USED) == 1) then begin
        giq_option(1, NAME, 271, Node029, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 272, Node028, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(280);
    giq_option(1, NAME, 281, Node999, NEUTRAL_REACTION);
end

procedure Node029
begin
    if (local_var(9) == 1) then begin
        if (global_var(GVAR_VAULT_SERVANT) == 2) then begin
            set_global_var(GVAR_VAULT_SERVANT, 3);
            give_exp_points(floor(863 / 5) + (dude_iq * floor(863 / 12)) + (dude_luck * floor(863 / 30)) + (floor(863 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
            display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(863 / 5) + (dude_iq * floor(863 / 12)) + (dude_luck * floor(863 / 30)) + (floor(863 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
        end
        add_obj_to_inven(dude_obj, create_object(240, 1, 2));
        Reply(2901);
    end
    else begin
        set_local_var(9, 1);
        if (global_var(GVAR_VAULT_SERVANT) == 2) then begin
            set_global_var(GVAR_VAULT_SERVANT, 3);
            give_exp_points(floor(863 / 5) + (dude_iq * floor(863 / 12)) + (dude_luck * floor(863 / 30)) + (floor(863 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
            display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(863 / 5) + (dude_iq * floor(863 / 12)) + (dude_luck * floor(863 / 30)) + (floor(863 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
        end
        add_obj_to_inven(dude_obj, create_object(240, 1, 2));
        add_obj_to_inven(dude_obj, create_object(341, 1, 2));
        Reply(2902);
    end
    giq_option(1, NAME, 291, Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(300);
    giq_option(1, NAME, 301, Node999, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(310);
    giq_option(1, NAME, 311, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 312, Node014, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(320);
    if (dude_skill(SKILL_SPEECH) >= 55) then begin
        giq_option(1, NAME, 321, Node033, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_VAULT_SERVANT) == 1) then begin
        giq_option(1, NAME, 322, Node034, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_VAULT_SERVANT) == 0) then begin
        giq_option(1, NAME, 323, Node035, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 324, Node999, NEUTRAL_REACTION);
end

procedure Node033
begin
    set_local_var(9, 1);
    add_obj_to_inven(dude_obj, create_object(341, 1, 2));
    Reply(330);
    giq_option(1, NAME, 331, Node999, NEUTRAL_REACTION);
end

procedure Node034
begin
    if (global_var(GVAR_VAULT_SERVANT) == 0) then begin
        set_global_var(GVAR_VAULT_SERVANT, 1);
    end
    Reply(340);
    giq_option(1, NAME, 341, Node999, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(350);
    giq_option(1, NAME, 351, Node021, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(360);
    giq_option(1, NAME, 361, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 362, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

procedure Fight
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, random(29, 32));
    set_local_var(2, 1);
end
