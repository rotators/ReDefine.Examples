variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node036a;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure Node055;
procedure Node056;
procedure Node057;
procedure Node058;
procedure Node059;
procedure Node060;
procedure Node061;
procedure Node062;
procedure Node063;
procedure Node064;
procedure Node065;
procedure Node066;
procedure Node067;
procedure Node068;
procedure Node069;
procedure Node070;
procedure Node071;
procedure Node072;
procedure Node073;
procedure Node074;
procedure NodeDie;
procedure NodeStandUp;
procedure Node999;
procedure Node998;
procedure Node998a;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(70, 80));
        set_local_var(5, random(40, 50));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 8);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_WOMAN_WEAK);
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object(165, 1, 2));
            add_mult_objs_to_inven(self_obj, create_object(2, 1, 2), random(11, 28));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(172, 1, 2));
            add_mult_objs_to_inven(self_obj, create_object(7, 1, 2), random(11, 19));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object(109, 1, 2));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(110, 1, 2));
        end
        if (random(0, 100) <= 20) then begin
            add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(5, 20));
        end
        if (random(0, 100) <= 15) then begin
            add_mult_objs_to_inven(self_obj, create_object(238, 1, 2), random(2, 5));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(236, 1, 2));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object(104, 1, 2));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object(227, 1, 2));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object(239, 1, 2));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object(232, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(242, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(422, 1, 2));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object(423, 1, 2));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object(426, 1, 2));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object(433, 1, 2));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object(421, 1, 2));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, 5, 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, 1000, 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_VAULT_CITY) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (local_var(8) == 1) then begin
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(dude_tile, tile_num(self_obj)), random(3, 5)), 1);
    end
    else begin
        if (not(anim_busy(self_obj))) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
        end
        start_gdialog(196, self_obj, -1, -1, -1);
        gsay_start;
        if ((local_var(9) == 1) and (global_var(GVAR_SIERRA_BASE_POWER) < 2)) then begin
            call Node068();
        end
        else begin
            if (local_var(7) == 0) then begin
                call Node001();
            end
            else begin
                call Node010();
            end
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        if ((50 == 50) or (50 == 59)) then begin
            set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) - 3);
        end
        else begin
            set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) - 6);
        end
    end
    set_global_var(GVAR_MODOC_TOOL_FLAG, global_var(GVAR_MODOC_TOOL_FLAG) bwor 32);
    if (global_var(GVAR_SIERRA_BASE_POWER) == 1) then begin
        set_global_var(GVAR_SIERRA_BASE_POWER, 2);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (tile_num(self_obj) != local_var(3)) then begin
        move_to(self_obj, local_var(3), elevation(self_obj));
    end
    anim(self_obj, 1000, 2);
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if ((local_var(8) == 1) and (tile_distance(tile_num(self_obj), dude_tile) < 3) and (anim_busy(self_obj) == 0)) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(dude_tile, tile_num(self_obj)), random(3, 5)), 1);
        end
        else begin
            if ((local_var(8) == 1) and (tile_distance(local_var(3), dude_tile) > 5) and (tile_distance(local_var(3), tile_num(self_obj)) > 5) and (anim_busy(self_obj) == 0)) then begin
                animate_move_obj_to_tile(self_obj, local_var(3), 0);
            end
        end
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 37, -1);
        reg_anim_func(3, 0);
        fadeIn(600);
    end
end

procedure Node001
begin
    already_talk := 1;
    set_local_var(7, 1);
    Reply(10);
    giq_option(1, NAME, 11, Node002, NEUTRAL_REACTION);
    giq_option(1, NAME, 12, Node012, NEUTRAL_REACTION);
    giq_option(1, NAME, 13, Node014, NEUTRAL_REACTION);
    giq_option(1, NAME, 14, Node015, NEUTRAL_REACTION);
    giq_option(1, NAME, 15, Node016, NEUTRAL_REACTION);
    giq_option(1, NAME, 16, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(20);
    giq_option(1, NAME, 21, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 22, Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 23, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 24, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 25, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(30);
    giq_option(1, NAME, 31, Node004, NEUTRAL_REACTION);
    giq_option(1, NAME, 32, Node007, NEUTRAL_REACTION);
    giq_option(1, NAME, 33, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 34, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 35, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(40);
    giq_option(1, NAME, 41, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 42, Node017, NEUTRAL_REACTION);
    giq_option(1, NAME, 43, Node007, NEUTRAL_REACTION);
    giq_option(1, NAME, 44, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 45, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(50);
    giq_option(1, NAME, 51, Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 52, Node019, NEUTRAL_REACTION);
    giq_option(1, NAME, 53, Node020, NEUTRAL_REACTION);
    giq_option(1, NAME, 54, Node018, NEUTRAL_REACTION);
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 3) then begin
        giq_option(1, NAME, 55, Node009, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 56, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(60);
    giq_option(1, NAME, 61, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 62, Node007, NEUTRAL_REACTION);
    giq_option(1, NAME, 63, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 64, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 65, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(70);
    giq_option(1, NAME, 71, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 72, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 73, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 74, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 75, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(80);
    giq_option(1, NAME, 81, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 82, Node023, NEUTRAL_REACTION);
    giq_option(1, NAME, 83, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 84, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(90);
    giq_option(1, NAME, 91, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 92, Node021, NEUTRAL_REACTION);
    giq_option(1, NAME, 93, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 94, Node022, NEUTRAL_REACTION);
    giq_option(1, NAME, 95, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        Reply(1001);
    end
    else begin
        Reply(1002);
    end
    if (not(global_var(GVAR_HOLODISK_MB_LEVEL_1) == 3)) then begin
        giq_option(1, NAME, 101, Node005, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 102, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 103, Node013, NEUTRAL_REACTION);
    if (not(global_var(GVAR_HOLODISK_MB_LEVEL_1) == 3)) then begin
        giq_option(1, NAME, 104, Node003, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_SIERRA_BASE_POWER) == 1) and obj_carrying_pid_obj(dude_obj, 342)) then begin
        giq_option(1, NAME, 105, Node038, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 106, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(110);
    giq_option(1, NAME, 111, Node024, NEUTRAL_REACTION);
    giq_option(1, NAME, 112, Node025, NEUTRAL_REACTION);
    giq_option(1, NAME, 113, Node026, NEUTRAL_REACTION);
    giq_option(1, NAME, 114, Node027, NEUTRAL_REACTION);
    giq_option(1, NAME, 115, Node028, NEUTRAL_REACTION);
    giq_option(1, NAME, 116, Node029, NEUTRAL_REACTION);
    giq_option(1, NAME, 117, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 118, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(120);
    giq_option(1, NAME, 121, Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 122, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 123, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 124, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 125, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    if (global_var(GVAR_SIERRA_BASE_POWER) < 2) then begin
        Reply(1301);
    end
    else begin
        Reply(1302);
    end
    if (global_var(GVAR_SIERRA_BASE_POWER) < 2) then begin
        giq_option(1, NAME, 131, Node008, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_SIERRA_BASE_POWER) == 0) then begin
        giq_option(1, NAME, 132, Node030, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 133, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 134, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(140);
    giq_option(1, NAME, 141, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 142, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 143, Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 144, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 145, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(150);
    giq_option(1, NAME, 151, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 152, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 153, Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 154, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 155, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(160);
    giq_option(1, NAME, 161, Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 162, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 163, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 164, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(170);
    giq_option(1, NAME, 171, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 172, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 173, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 174, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(180);
    giq_option(1, NAME, 181, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 182, Node019, NEUTRAL_REACTION);
    giq_option(1, NAME, 183, Node020, NEUTRAL_REACTION);
    giq_option(1, NAME, 184, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 185, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(190);
    giq_option(1, NAME, 191, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 192, Node020, NEUTRAL_REACTION);
    giq_option(1, NAME, 193, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 194, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 195, Node999, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(200);
    giq_option(1, NAME, 201, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 202, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 203, Node019, NEUTRAL_REACTION);
    giq_option(1, NAME, 204, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 205, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 206, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(210);
    giq_option(1, NAME, 211, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 212, Node998a, NEUTRAL_REACTION);
    giq_option(1, NAME, 213, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 214, Node070, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(220);
    giq_option(1, NAME, 221, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 222, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 223, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 224, Node070, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(230);
    giq_option(1, NAME, 231, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 232, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 233, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(240);
    giq_option(1, NAME, 241, Node025, NEUTRAL_REACTION);
    giq_option(1, NAME, 242, Node026, NEUTRAL_REACTION);
    giq_option(1, NAME, 243, Node027, NEUTRAL_REACTION);
    giq_option(1, NAME, 244, Node028, NEUTRAL_REACTION);
    giq_option(1, NAME, 245, Node029, NEUTRAL_REACTION);
    giq_option(1, NAME, 246, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 247, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(250);
    giq_option(1, NAME, 251, Node024, NEUTRAL_REACTION);
    giq_option(1, NAME, 252, Node026, NEUTRAL_REACTION);
    giq_option(1, NAME, 253, Node027, NEUTRAL_REACTION);
    giq_option(1, NAME, 254, Node028, NEUTRAL_REACTION);
    giq_option(1, NAME, 255, Node029, NEUTRAL_REACTION);
    giq_option(1, NAME, 256, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 257, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(260);
    giq_option(1, NAME, 261, Node024, NEUTRAL_REACTION);
    giq_option(1, NAME, 262, Node025, NEUTRAL_REACTION);
    giq_option(1, NAME, 263, Node027, NEUTRAL_REACTION);
    giq_option(1, NAME, 264, Node028, NEUTRAL_REACTION);
    giq_option(1, NAME, 265, Node029, NEUTRAL_REACTION);
    giq_option(1, NAME, 266, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 267, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(270);
    giq_option(1, NAME, 271, Node024, NEUTRAL_REACTION);
    giq_option(1, NAME, 272, Node025, NEUTRAL_REACTION);
    giq_option(1, NAME, 273, Node026, NEUTRAL_REACTION);
    giq_option(1, NAME, 274, Node028, NEUTRAL_REACTION);
    giq_option(1, NAME, 275, Node029, NEUTRAL_REACTION);
    giq_option(1, NAME, 276, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 277, Node999, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(280);
    giq_option(1, NAME, 281, Node024, NEUTRAL_REACTION);
    giq_option(1, NAME, 282, Node025, NEUTRAL_REACTION);
    giq_option(1, NAME, 283, Node026, NEUTRAL_REACTION);
    giq_option(1, NAME, 284, Node027, NEUTRAL_REACTION);
    giq_option(1, NAME, 285, Node029, NEUTRAL_REACTION);
    giq_option(1, NAME, 286, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 287, Node999, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(290);
    giq_option(1, NAME, 291, Node024, NEUTRAL_REACTION);
    giq_option(1, NAME, 292, Node025, NEUTRAL_REACTION);
    giq_option(1, NAME, 293, Node026, NEUTRAL_REACTION);
    giq_option(1, NAME, 294, Node027, NEUTRAL_REACTION);
    giq_option(1, NAME, 295, Node028, NEUTRAL_REACTION);
    giq_option(1, NAME, 296, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 297, Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(300);
    if ((dude_gender == 1) and (dude_charisma < 10)) then begin
        giq_option(1, NAME, 301, Node033, NEUTRAL_REACTION);
    end
    if ((dude_gender == 1) and (dude_charisma == 10)) then begin
        giq_option(1, NAME, 302, Node034, NEUTRAL_REACTION);
    end
    if ((dude_gender == 0) and (dude_charisma < 10)) then begin
        giq_option(1, NAME, 303, Node031, NEUTRAL_REACTION);
    end
    if ((dude_gender == 0) and (dude_charisma == 10)) then begin
        giq_option(1, NAME, 304, Node032, NEUTRAL_REACTION);
    end
end

procedure Node031
begin
    Reply(310);
    giq_option(1, NAME, 311, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 312, Node999, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(320);
    giq_option(1, NAME, 321, Node999, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(330);
    giq_option(1, NAME, 331, Node035, NEUTRAL_REACTION);
    giq_option(1, NAME, 332, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 333, Node999, NEUTRAL_REACTION);
end

procedure Node034
begin
    set_local_var(9, 1);
    Reply(340);
    giq_option(1, NAME, 341, Node035, NEUTRAL_REACTION);
    giq_option(1, NAME, 342, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 343, Node999, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(350);
    if (global_var(GVAR_NEW_RENO_WRIGHT_FLAGS) == 3) then begin
        giq_option(1, NAME, 351, Node036, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 352, Node037, NEUTRAL_REACTION);
    end
end

procedure Node036
begin
    if (global_var(GVAR_SIERRA_BASE_POWER) < 2) then begin
        set_global_var(GVAR_SIERRA_BASE_POWER, 2);
        give_exp_points(floor(1035 / 5) + (dude_iq * floor(1035 / 12)) + (dude_luck * floor(1035 / 30)) + (floor(1035 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(1035 / 5) + (dude_iq * floor(1035 / 12)) + (dude_luck * floor(1035 / 30)) + (floor(1035 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
        add_obj_to_inven(dude_obj, create_object(185, 1, 2));
    end
    Reply(360);
    giq_option(1, NAME, 361, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 362, Node999, NEUTRAL_REACTION);
end

procedure Node036a
begin
    if (global_var(GVAR_SIERRA_BASE_POWER) == 0) then begin
        set_global_var(GVAR_SIERRA_BASE_POWER, 1);
    end
    call Node010();
end

procedure Node037
begin
    Reply(370);
    giq_option(1, NAME, 371, Node036a, NEUTRAL_REACTION);
    giq_option(1, NAME, 372, Node999, NEUTRAL_REACTION);
end

procedure Node038
begin
    Reply(380);
    giq_option(1, NAME, 381, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 382, Node999, NEUTRAL_REACTION);
end

procedure Node039
begin
    Reply(390);
    giq_option(1, NAME, 391, Node041, NEUTRAL_REACTION);
    giq_option(1, NAME, 392, Node040, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(400);
    giq_option(1, NAME, 401, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 402, Node999, NEUTRAL_REACTION);
end

procedure Node041
begin
    Reply(410);
    giq_option(1, NAME, 411, Node044, NEUTRAL_REACTION);
    giq_option(1, NAME, 412, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 413, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 414, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 415, Node042, NEUTRAL_REACTION);
end

procedure Node042
begin
    Reply(420);
    giq_option(1, NAME, 421, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 422, Node999, NEUTRAL_REACTION);
end

procedure Node043
begin
    Reply(430);
    giq_option(1, NAME, 431, Node041, NEUTRAL_REACTION);
    giq_option(1, NAME, 432, Node042, NEUTRAL_REACTION);
end

procedure Node044
begin
    Reply(440);
    giq_option(1, NAME, 441, Node047, NEUTRAL_REACTION);
    giq_option(1, NAME, 442, Node045, NEUTRAL_REACTION);
    giq_option(1, NAME, 443, Node047, NEUTRAL_REACTION);
    giq_option(1, NAME, 444, Node047, NEUTRAL_REACTION);
    giq_option(1, NAME, 445, Node045, NEUTRAL_REACTION);
    giq_option(1, NAME, 446, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 447, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 448, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 449, Node042, NEUTRAL_REACTION);
end

procedure Node045
begin
    Reply(450);
    giq_option(1, NAME, 451, Node047, NEUTRAL_REACTION);
    giq_option(1, NAME, 452, Node046, NEUTRAL_REACTION);
    giq_option(1, NAME, 453, Node047, NEUTRAL_REACTION);
    giq_option(1, NAME, 454, Node047, NEUTRAL_REACTION);
    giq_option(1, NAME, 455, Node046, NEUTRAL_REACTION);
    giq_option(1, NAME, 456, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 457, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 458, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 459, Node042, NEUTRAL_REACTION);
end

procedure Node046
begin
    Reply(460);
    giq_option(1, NAME, 461, Node047, NEUTRAL_REACTION);
    giq_option(1, NAME, 462, Node045, NEUTRAL_REACTION);
    giq_option(1, NAME, 463, Node047, NEUTRAL_REACTION);
    giq_option(1, NAME, 464, Node047, NEUTRAL_REACTION);
    giq_option(1, NAME, 465, Node045, NEUTRAL_REACTION);
    giq_option(1, NAME, 466, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 467, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 468, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 469, Node042, NEUTRAL_REACTION);
end

procedure Node047
begin
    Reply(470);
    giq_option(1, NAME, 471, Node048, NEUTRAL_REACTION);
    giq_option(1, NAME, 472, Node048, NEUTRAL_REACTION);
    giq_option(1, NAME, 473, Node048, NEUTRAL_REACTION);
    giq_option(1, NAME, 474, Node048, NEUTRAL_REACTION);
    giq_option(1, NAME, 475, Node048, NEUTRAL_REACTION);
    giq_option(1, NAME, 476, Node050, NEUTRAL_REACTION);
    giq_option(1, NAME, 477, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 478, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 479, Node042, NEUTRAL_REACTION);
end

procedure Node048
begin
    Reply(480);
    giq_option(1, NAME, 481, Node049, NEUTRAL_REACTION);
    giq_option(1, NAME, 482, Node049, NEUTRAL_REACTION);
    giq_option(1, NAME, 483, Node049, NEUTRAL_REACTION);
    giq_option(1, NAME, 484, Node049, NEUTRAL_REACTION);
    giq_option(1, NAME, 485, Node049, NEUTRAL_REACTION);
    giq_option(1, NAME, 486, Node050, NEUTRAL_REACTION);
    giq_option(1, NAME, 487, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 488, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 489, Node042, NEUTRAL_REACTION);
end

procedure Node049
begin
    Reply(490);
    giq_option(1, NAME, 491, Node048, NEUTRAL_REACTION);
    giq_option(1, NAME, 492, Node048, NEUTRAL_REACTION);
    giq_option(1, NAME, 493, Node048, NEUTRAL_REACTION);
    giq_option(1, NAME, 494, Node048, NEUTRAL_REACTION);
    giq_option(1, NAME, 495, Node048, NEUTRAL_REACTION);
    giq_option(1, NAME, 496, Node050, NEUTRAL_REACTION);
    giq_option(1, NAME, 497, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 498, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 499, Node042, NEUTRAL_REACTION);
end

procedure Node050
begin
    Reply(500);
    giq_option(1, NAME, 501, Node051, NEUTRAL_REACTION);
    giq_option(1, NAME, 502, Node053, NEUTRAL_REACTION);
    giq_option(1, NAME, 503, Node051, NEUTRAL_REACTION);
    giq_option(1, NAME, 504, Node051, NEUTRAL_REACTION);
    giq_option(1, NAME, 505, Node053, NEUTRAL_REACTION);
    giq_option(1, NAME, 506, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 507, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 508, Node042, NEUTRAL_REACTION);
end

procedure Node051
begin
    Reply(510);
    giq_option(1, NAME, 511, Node052, NEUTRAL_REACTION);
    giq_option(1, NAME, 512, Node053, NEUTRAL_REACTION);
    giq_option(1, NAME, 513, Node052, NEUTRAL_REACTION);
    giq_option(1, NAME, 514, Node052, NEUTRAL_REACTION);
    giq_option(1, NAME, 515, Node053, NEUTRAL_REACTION);
    giq_option(1, NAME, 516, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 517, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 518, Node042, NEUTRAL_REACTION);
end

procedure Node052
begin
    Reply(520);
    giq_option(1, NAME, 521, Node051, NEUTRAL_REACTION);
    giq_option(1, NAME, 522, Node053, NEUTRAL_REACTION);
    giq_option(1, NAME, 523, Node051, NEUTRAL_REACTION);
    giq_option(1, NAME, 524, Node051, NEUTRAL_REACTION);
    giq_option(1, NAME, 525, Node053, NEUTRAL_REACTION);
    giq_option(1, NAME, 526, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 527, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 528, Node042, NEUTRAL_REACTION);
end

procedure Node053
begin
    Reply(530);
    giq_option(1, NAME, 531, Node054, NEUTRAL_REACTION);
    giq_option(1, NAME, 532, Node054, NEUTRAL_REACTION);
    giq_option(1, NAME, 533, Node054, NEUTRAL_REACTION);
    giq_option(1, NAME, 534, Node054, NEUTRAL_REACTION);
    giq_option(1, NAME, 535, Node054, NEUTRAL_REACTION);
    giq_option(1, NAME, 536, Node056, NEUTRAL_REACTION);
    giq_option(1, NAME, 537, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 538, Node042, NEUTRAL_REACTION);
end

procedure Node054
begin
    Reply(540);
    giq_option(1, NAME, 541, Node055, NEUTRAL_REACTION);
    giq_option(1, NAME, 542, Node055, NEUTRAL_REACTION);
    giq_option(1, NAME, 543, Node055, NEUTRAL_REACTION);
    giq_option(1, NAME, 544, Node055, NEUTRAL_REACTION);
    giq_option(1, NAME, 545, Node055, NEUTRAL_REACTION);
    giq_option(1, NAME, 546, Node056, NEUTRAL_REACTION);
    giq_option(1, NAME, 547, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 548, Node042, NEUTRAL_REACTION);
end

procedure Node055
begin
    Reply(550);
    giq_option(1, NAME, 551, Node054, NEUTRAL_REACTION);
    giq_option(1, NAME, 552, Node054, NEUTRAL_REACTION);
    giq_option(1, NAME, 553, Node054, NEUTRAL_REACTION);
    giq_option(1, NAME, 554, Node054, NEUTRAL_REACTION);
    giq_option(1, NAME, 555, Node054, NEUTRAL_REACTION);
    giq_option(1, NAME, 556, Node056, NEUTRAL_REACTION);
    giq_option(1, NAME, 557, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 558, Node042, NEUTRAL_REACTION);
end

procedure Node056
begin
    Reply(560);
    giq_option(1, NAME, 561, Node059, NEUTRAL_REACTION);
    giq_option(1, NAME, 562, Node057, NEUTRAL_REACTION);
    giq_option(1, NAME, 563, Node059, NEUTRAL_REACTION);
    giq_option(1, NAME, 564, Node057, NEUTRAL_REACTION);
    giq_option(1, NAME, 565, Node057, NEUTRAL_REACTION);
    giq_option(1, NAME, 566, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 567, Node042, NEUTRAL_REACTION);
end

procedure Node057
begin
    Reply(570);
    giq_option(1, NAME, 571, Node059, NEUTRAL_REACTION);
    giq_option(1, NAME, 572, Node058, NEUTRAL_REACTION);
    giq_option(1, NAME, 573, Node059, NEUTRAL_REACTION);
    giq_option(1, NAME, 574, Node058, NEUTRAL_REACTION);
    giq_option(1, NAME, 575, Node058, NEUTRAL_REACTION);
    giq_option(1, NAME, 576, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 577, Node042, NEUTRAL_REACTION);
end

procedure Node058
begin
    Reply(580);
    giq_option(1, NAME, 581, Node059, NEUTRAL_REACTION);
    giq_option(1, NAME, 582, Node057, NEUTRAL_REACTION);
    giq_option(1, NAME, 583, Node059, NEUTRAL_REACTION);
    giq_option(1, NAME, 584, Node057, NEUTRAL_REACTION);
    giq_option(1, NAME, 585, Node057, NEUTRAL_REACTION);
    giq_option(1, NAME, 586, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 587, Node042, NEUTRAL_REACTION);
end

procedure Node059
begin
    Reply(590);
    giq_option(1, NAME, 591, Node060, NEUTRAL_REACTION);
    giq_option(1, NAME, 592, Node060, NEUTRAL_REACTION);
    giq_option(1, NAME, 593, Node060, NEUTRAL_REACTION);
    giq_option(1, NAME, 594, Node060, NEUTRAL_REACTION);
    giq_option(1, NAME, 595, Node060, NEUTRAL_REACTION);
    giq_option(1, NAME, 596, Node062, NEUTRAL_REACTION);
    giq_option(1, NAME, 597, Node042, NEUTRAL_REACTION);
end

procedure Node060
begin
    Reply(600);
    giq_option(1, NAME, 601, Node061, NEUTRAL_REACTION);
    giq_option(1, NAME, 602, Node061, NEUTRAL_REACTION);
    giq_option(1, NAME, 603, Node061, NEUTRAL_REACTION);
    giq_option(1, NAME, 604, Node061, NEUTRAL_REACTION);
    giq_option(1, NAME, 605, Node061, NEUTRAL_REACTION);
    giq_option(1, NAME, 606, Node062, NEUTRAL_REACTION);
    giq_option(1, NAME, 607, Node042, NEUTRAL_REACTION);
end

procedure Node061
begin
    Reply(610);
    giq_option(1, NAME, 611, Node060, NEUTRAL_REACTION);
    giq_option(1, NAME, 612, Node060, NEUTRAL_REACTION);
    giq_option(1, NAME, 613, Node060, NEUTRAL_REACTION);
    giq_option(1, NAME, 614, Node060, NEUTRAL_REACTION);
    giq_option(1, NAME, 615, Node060, NEUTRAL_REACTION);
    giq_option(1, NAME, 616, Node062, NEUTRAL_REACTION);
    giq_option(1, NAME, 617, Node042, NEUTRAL_REACTION);
end

procedure Node062
begin
    Reply(620);
    giq_option(1, NAME, 621, Node063, NEUTRAL_REACTION);
    giq_option(1, NAME, 622, Node065, NEUTRAL_REACTION);
    giq_option(1, NAME, 623, Node063, NEUTRAL_REACTION);
    giq_option(1, NAME, 624, Node063, NEUTRAL_REACTION);
    giq_option(1, NAME, 625, Node065, NEUTRAL_REACTION);
    giq_option(1, NAME, 626, Node067, NEUTRAL_REACTION);
end

procedure Node063
begin
    Reply(630);
    giq_option(1, NAME, 631, Node064, NEUTRAL_REACTION);
    giq_option(1, NAME, 632, Node065, NEUTRAL_REACTION);
    giq_option(1, NAME, 633, Node064, NEUTRAL_REACTION);
    giq_option(1, NAME, 634, Node064, NEUTRAL_REACTION);
    giq_option(1, NAME, 635, Node065, NEUTRAL_REACTION);
    giq_option(1, NAME, 636, Node067, NEUTRAL_REACTION);
end

procedure Node064
begin
    Reply(640);
    giq_option(1, NAME, 641, Node062, NEUTRAL_REACTION);
    giq_option(1, NAME, 642, Node065, NEUTRAL_REACTION);
    giq_option(1, NAME, 643, Node062, NEUTRAL_REACTION);
    giq_option(1, NAME, 644, Node062, NEUTRAL_REACTION);
    giq_option(1, NAME, 645, Node065, NEUTRAL_REACTION);
    giq_option(1, NAME, 646, Node067, NEUTRAL_REACTION);
end

procedure Node065
begin
    Reply(650);
    giq_option(1, NAME, 651, Node066, NEUTRAL_REACTION);
end

procedure Node066
begin
    if (global_var(GVAR_SIERRA_BASE_POWER) < 2) then begin
        set_global_var(GVAR_SIERRA_BASE_POWER, 2);
        give_exp_points(floor(1035 / 5) + (dude_iq * floor(1035 / 12)) + (dude_luck * floor(1035 / 30)) + (floor(1035 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(1035 / 5) + (dude_iq * floor(1035 / 12)) + (dude_luck * floor(1035 / 30)) + (floor(1035 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
        add_obj_to_inven(dude_obj, create_object(185, 1, 2));
        if (obj_carrying_pid_obj(dude_obj, 342)) then begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 342));
        end
    end
    Reply(660);
    giq_option(1, NAME, 661, Node999, NEUTRAL_REACTION);
end

procedure Node067
begin
    Reply(670);
    giq_option(1, NAME, 671, NodeDie, NEUTRAL_REACTION);
end

procedure Node068
begin
    Reply(680);
    giq_option(1, NAME, 681, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 682, Node069, NEUTRAL_REACTION);
    giq_option(1, NAME, 683, Node999, NEUTRAL_REACTION);
end

procedure Node069
begin
    fadeOut(800);
    fadeIn(800);
    Reply(690);
    giq_option(1, NAME, 691, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 692, Node999, NEUTRAL_REACTION);
end

procedure Node070
begin
    set_local_var(8, 1);
    Reply(700);
    if (global_var(GVAR_PLAYER_REPUTATION) < -250) then begin
        giq_option(1, NAME, 701, Node071, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_PLAYER_REPUTATION) < -150) then begin
        giq_option(1, NAME, 702, Node072, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 703, Node073, NEUTRAL_REACTION);
    giq_option(1, NAME, 704, Node999, NEUTRAL_REACTION);
end

procedure Node071
begin
    set_global_var(GVAR_REDDING_JET_LEVEL, 1);
    Reply(710);
    giq_option(1, NAME, 711, NodeStandUp, NEUTRAL_REACTION);
end

procedure Node072
begin
    set_global_var(GVAR_REDDING_JET_LEVEL, 1);
    Reply(720);
    giq_option(1, NAME, 721, NodeStandUp, NEUTRAL_REACTION);
end

procedure Node073
begin
    Reply(730);
    if (global_var(GVAR_PLAYER_REPUTATION) < -250) then begin
        giq_option(1, NAME, 731, Node071, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_PLAYER_REPUTATION) < -150) then begin
        giq_option(1, NAME, 732, Node072, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 733, Node074, NEUTRAL_REACTION);
end

procedure Node074
begin
    Reply(740);
    giq_option(1, NAME, 741, NodeStandUp, NEUTRAL_REACTION);
end

procedure NodeDie
begin
    set_global_var(GVAR_MODOC_TOOL_FLAG, global_var(GVAR_MODOC_TOOL_FLAG) bwor 32);
    if (global_var(GVAR_SIERRA_BASE_POWER) == 1) then begin
        set_global_var(GVAR_SIERRA_BASE_POWER, 2);
    end
    critter_heal(self_obj, -100);
    display_mstr(742);
end

procedure NodeStandUp
begin
    already_talk := 0;
    add_timer_event(self_obj, 6, 3);
    fadeOut(600);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure Node998a
begin
    already_talk := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 37);
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end
