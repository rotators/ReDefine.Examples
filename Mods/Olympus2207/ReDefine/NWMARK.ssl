variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure Node055;
procedure Node056;
procedure Node057;
procedure Node058;
procedure Node059;
procedure Node060;
procedure Node061;
procedure Node062;
procedure Node063;
procedure Node064;
procedure Node065;
procedure Node066;
procedure Node067;
procedure Node068;
procedure Node069;
procedure Node070;
procedure Node071;
procedure Node072;
procedure Node073;
procedure Node074;
procedure Node075;
procedure Node076;
procedure Node077;
procedure Node078;
procedure Node079;
procedure Node080;
procedure Node081;
procedure Node082;
procedure Node083;
procedure Node084;
procedure Node085;
procedure Node086;
procedure Node087;
procedure Node088;
procedure Node089;
procedure Node090;
procedure Node091;
procedure Node092;
procedure Node093;
procedure Node094;
procedure Node095;
procedure Node096;
procedure Node097;
procedure Node098;
procedure Node099;
procedure Node100;
procedure Node101;
procedure Node102;
procedure Node103;
procedure Node104;
procedure Node105;
procedure Node106;
procedure Node107;
procedure Node108;
procedure Node109;
procedure Node999;
procedure Node998;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(60, 70));
        set_local_var(5, random(30, 40));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 8);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_MAN_BERSERK);
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object(172, 1, 2));
            add_mult_objs_to_inven(self_obj, create_object(7, 1, 2), random(12, 24));
            wield_obj(obj_carrying_pid_obj(self_obj, 172));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(136, 1, 2));
            add_mult_objs_to_inven(self_obj, create_object(20, 1, 2), random(12, 24));
            wield_obj(obj_carrying_pid_obj(self_obj, 136));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object(62, 1, 2));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(109, 1, 2));
        end
        if (random(0, 100) <= 33) then begin
            add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(1, 20));
        end
        if (random(0, 100) <= 25) then begin
            add_mult_objs_to_inven(self_obj, create_object(220, 1, 2), random(1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(132, 1, 2));
        end
        if (random(0, 100) <= 9) then begin
            add_obj_to_inven(self_obj, create_object(228, 1, 2));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object(224, 1, 2));
        end
        if (random(0, 100) <= 7) then begin
            add_obj_to_inven(self_obj, create_object(243, 1, 2));
        end
        if (random(0, 100) <= 6) then begin
            add_obj_to_inven(self_obj, create_object(422, 1, 2));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, 1000, 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, 1000, 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_VAULT_CITY) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    end
    start_gdialog(187, self_obj, -1, -1, -1);
    gsay_start;
    if (local_var(7) == 0) then begin
        call Node001();
    end
    else begin
        call Node010();
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) - 3);
    end
    if (global_var(GVAR_QUEST_VAULT_VILLAGE) == 1) then begin
        set_global_var(GVAR_QUEST_VAULT_VILLAGE, 0);
    end
    if (global_var(GVAR_GRUTHAR_DSTATUS) == 0) then begin
        add_obj_to_inven(self_obj, create_object(299, 1, 2));
    end
    set_global_var(GVAR_TORR_HARMED, global_var(GVAR_TORR_HARMED) bwor 67108864);
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    Reply(10);
    giq_option(1, NAME, 11, Node002, NEUTRAL_REACTION);
    giq_option(1, NAME, 12, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 13, Node004, NEUTRAL_REACTION);
    giq_option(1, NAME, 14, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    if (global_var(GVAR_TOWN_REP_VAULT_CITY) < 10) then begin
        if (global_var(GVAR_CARAVAN_GUARDS) == 0) then begin
            set_global_var(GVAR_CARAVAN_GUARDS, 1);
            play_sfx("LEVELUP");
        end
    end
    Reply(20);
    giq_option(1, NAME, 21, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 22, Node005, NEUTRAL_REACTION);
end

procedure Node003
begin
    set_local_var(7, 1);
    if (global_var(GVAR_TOWN_REP_VAULT_CITY) < 10) then begin
        if (global_var(GVAR_CARAVAN_GUARDS) == 0) then begin
            set_global_var(GVAR_CARAVAN_GUARDS, 1);
            play_sfx("LEVELUP");
        end
    end
    Reply(30);
    giq_option(1, NAME, 31, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 32, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(40);
    giq_option(1, NAME, 41, Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 42, Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 43, Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 44, Node007, NEUTRAL_REACTION);
end

procedure Node005
begin
    set_local_var(7, 1);
    if (global_var(GVAR_TOWN_REP_VAULT_CITY) < 10) then begin
        if (global_var(GVAR_CARAVAN_GUARDS) == 0) then begin
            set_global_var(GVAR_CARAVAN_GUARDS, 1);
            play_sfx("LEVELUP");
        end
    end
    Reply(50);
    giq_option(1, NAME, 51, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 52, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(60);
    giq_option(1, NAME, 61, Node007, NEUTRAL_REACTION);
    giq_option(1, NAME, 62, Node007, NEUTRAL_REACTION);
end

procedure Node007
begin
    set_local_var(7, 1);
    if (global_var(GVAR_TOWN_REP_VAULT_CITY) < 10) then begin
        if (global_var(GVAR_CARAVAN_GUARDS) == 0) then begin
            set_global_var(GVAR_CARAVAN_GUARDS, 1);
            play_sfx("LEVELUP");
        end
    end
    Reply(70);
    giq_option(1, NAME, 71, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(100);
    if ((global_var(GVAR_QUEST_VAULT_VILLAGE) == 0) and (global_var(GVAR_TOWN_REP_VAULT_CITY) >= 10)) then begin
        giq_option(1, NAME, 101, Node013, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_TOWN_REP_VAULT_CITY) < 10) then begin
        giq_option(1, NAME, 102, Node012, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_QUEST_VAULT_VILLAGE) == 0) and (global_var(GVAR_TOWN_REP_VAULT_CITY) >= 10)) then begin
        giq_option(1, NAME, 103, Node011, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_QUEST_VAULT_VILLAGE) == 1) then begin
        giq_option(1, NAME, 104, Node018, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_QUEST_VAULT_VILLAGE) == 1) and (global_var(GVAR_NCR_SCMERK_PERSONAL_ENEMY) == 1) and (global_var(GVAR_NCR_SCMERK_STATUS) == 1)) then begin
        giq_option(1, NAME, 105, Node024, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_TOWN_REP_VAULT_CITY) >= 12) then begin
        giq_option(1, NAME, 106, Node031, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_VAULT_MONSTER_COUNT) == 1) then begin
        giq_option(1, NAME, 107, Node062, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_VAULT_MONSTER_COUNT) == 2) then begin
        giq_option(1, NAME, 108, Node103, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_SIERRA_BASE_CONTAMINATION_TIMER) == 1) then begin
        giq_option(1, NAME, 112, Node108, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_GRUTHAR_DSTATUS) == 0) and (global_var(GVAR_V13_V15_DALIA_STATE) == 1) and (local_var(9) == 0)) then begin
        giq_option(1, NAME, 314, Node102, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 109, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(110);
    giq_option(1, NAME, 111, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 25);
    Reply(120);
    giq_option(1, NAME, 121, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(130);
    giq_option(1, NAME, 131, Node015, NEUTRAL_REACTION);
    giq_option(1, NAME, 132, Node014, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(140);
    giq_option(1, NAME, 141, Node016, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(150);
    giq_option(1, NAME, 151, Node016, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(160);
    giq_option(1, NAME, 161, Node017, NEUTRAL_REACTION);
    giq_option(1, NAME, 162, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 163, Node019, NEUTRAL_REACTION);
    giq_option(1, NAME, 164, Node020, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(170);
    giq_option(1, NAME, 171, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 172, Node019, NEUTRAL_REACTION);
    giq_option(1, NAME, 173, Node020, NEUTRAL_REACTION);
end

procedure Node018
begin
    if (global_var(GVAR_QUEST_VAULT_VILLAGE) == 0) then begin
        set_global_var(GVAR_QUEST_VAULT_VILLAGE, 1);
    end
    Reply(180);
    giq_option(1, NAME, 181, Node021, NEUTRAL_REACTION);
    giq_option(1, NAME, 182, Node022, NEUTRAL_REACTION);
    giq_option(1, NAME, 183, Node023, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(190);
    giq_option(1, NAME, 191, Node018, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(200);
    giq_option(1, NAME, 201, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 202, Node019, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(210);
    giq_option(1, NAME, 211, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 212, Node999, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(220);
    giq_option(1, NAME, 221, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 222, Node999, NEUTRAL_REACTION);
    if (dude_gender == 1) then begin
        giq_option(1, NAME, 223, Node026, NEUTRAL_REACTION);
    end
end

procedure Node023
begin
    Reply(230);
    giq_option(1, NAME, 231, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 232, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    if (global_var(GVAR_QUEST_VAULT_VILLAGE) == 1) then begin
        set_global_var(GVAR_QUEST_VAULT_VILLAGE, 2);
        add_obj_to_inven(dude_obj, create_object(443, 1, 2));
        give_exp_points(floor(276) + (dude_iq * floor(115)) + (dude_luck * floor(46)) + (floor(18) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(276) + (dude_iq * floor(115)) + (dude_luck * floor(46)) + (floor(18) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
    end
    Reply(240);
    giq_option(1, NAME, 241, Node025, NEUTRAL_REACTION);
    giq_option(1, NAME, 242, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(250);
    giq_option(1, NAME, 251, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(260);
    giq_option(1, NAME, 261, Node027, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(270);
    giq_option(1, NAME, 271, Node028, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(280);
    giq_option(1, NAME, 281, Node029, NEUTRAL_REACTION);
end

procedure Node029
begin
    set_global_var(GVAR_HOLODISK_MB_LEVEL_3, 1);
    Reply(290);
    giq_option(1, NAME, 291, Node030, NEUTRAL_REACTION);
    giq_option(1, NAME, 292, Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(300);
    giq_option(1, NAME, 301, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 302, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 303, Node999, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(310);
    giq_option(1, NAME, 311, Node032, NEUTRAL_REACTION);
    giq_option(1, NAME, 312, Node037, NEUTRAL_REACTION);
    giq_option(1, NAME, 313, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 315, Node999, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(320);
    giq_option(1, NAME, 321, Node033, NEUTRAL_REACTION);
    giq_option(1, NAME, 322, Node035, NEUTRAL_REACTION);
    giq_option(1, NAME, 323, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 324, Node999, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(330);
    giq_option(1, NAME, 331, Node034, NEUTRAL_REACTION);
    giq_option(1, NAME, 332, Node035, NEUTRAL_REACTION);
    giq_option(1, NAME, 333, Node999, NEUTRAL_REACTION);
end

procedure Node034
begin
    Reply(340);
    giq_option(1, NAME, 341, Node035, NEUTRAL_REACTION);
    giq_option(1, NAME, 342, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 343, Node999, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(350);
    giq_option(1, NAME, 351, Node036, NEUTRAL_REACTION);
    giq_option(1, NAME, 352, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 353, Node999, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(360);
    giq_option(1, NAME, 361, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 362, Node999, NEUTRAL_REACTION);
end

procedure Node037
begin
    Reply(370);
    giq_option(1, NAME, 371, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 372, Node999, NEUTRAL_REACTION);
end

procedure Node038
begin
    Reply(380);
    giq_option(1, NAME, 381, Node041, NEUTRAL_REACTION);
    giq_option(1, NAME, 382, Node042, NEUTRAL_REACTION);
    giq_option(1, NAME, 383, Node044, NEUTRAL_REACTION);
    giq_option(1, NAME, 384, Node047, NEUTRAL_REACTION);
    giq_option(1, NAME, 385, Node048, NEUTRAL_REACTION);
    giq_option(1, NAME, 386, Node049, NEUTRAL_REACTION);
    giq_option(1, NAME, 387, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 388, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 389, Node999, NEUTRAL_REACTION);
end

procedure Node039
begin
    Reply(390);
    giq_option(1, NAME, 391, Node050, NEUTRAL_REACTION);
    giq_option(1, NAME, 392, Node053, NEUTRAL_REACTION);
    giq_option(1, NAME, 393, Node054, NEUTRAL_REACTION);
    giq_option(1, NAME, 394, Node055, NEUTRAL_REACTION);
    giq_option(1, NAME, 395, Node055, NEUTRAL_REACTION);
    giq_option(1, NAME, 396, Node040, NEUTRAL_REACTION);
    giq_option(1, NAME, 397, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 398, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 399, Node999, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(400);
    giq_option(1, NAME, 401, Node056, NEUTRAL_REACTION);
    giq_option(1, NAME, 402, Node057, NEUTRAL_REACTION);
    giq_option(1, NAME, 403, Node058, NEUTRAL_REACTION);
    giq_option(1, NAME, 404, Node059, NEUTRAL_REACTION);
    if (70 < ((dude_charisma * 10) + (dude_skill(SKILL_SPEECH) / 5))) then begin
        giq_option(1, NAME, 405, Node060, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 406, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 407, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 408, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 409, Node999, NEUTRAL_REACTION);
end

procedure Node041
begin
    Reply(410);
    giq_option(1, NAME, 411, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 412, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 413, Node999, NEUTRAL_REACTION);
end

procedure Node042
begin
    Reply(420);
    if (dude_skill(SKILL_SPEECH) >= 95) then begin
        giq_option(1, NAME, 421, Node043, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 422, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 423, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 424, Node999, NEUTRAL_REACTION);
end

procedure Node043
begin
    Reply(430);
    giq_option(1, NAME, 431, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 432, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 433, Node999, NEUTRAL_REACTION);
end

procedure Node044
begin
    Reply(440);
    giq_option(1, NAME, 441, Node045, NEUTRAL_REACTION);
    giq_option(1, NAME, 442, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 443, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 444, Node999, NEUTRAL_REACTION);
end

procedure Node045
begin
    Reply(450);
    giq_option(1, NAME, 451, Node046, NEUTRAL_REACTION);
    giq_option(1, NAME, 452, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 453, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 454, Node999, NEUTRAL_REACTION);
end

procedure Node046
begin
    Reply(460);
    giq_option(1, NAME, 461, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 462, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 463, Node999, NEUTRAL_REACTION);
end

procedure Node047
begin
    Reply(470);
    giq_option(1, NAME, 471, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 472, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 473, Node999, NEUTRAL_REACTION);
end

procedure Node048
begin
    Reply(480);
    giq_option(1, NAME, 481, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 482, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 483, Node999, NEUTRAL_REACTION);
end

procedure Node049
begin
    Reply(490);
    giq_option(1, NAME, 491, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 492, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 493, Node999, NEUTRAL_REACTION);
end

procedure Node050
begin
    Reply(500);
    if ((global_var(GVAR_ENEMY_VAULT_VILLAGE) == 2) and (global_var(GVAR_ENEMY_SMILEY) == 1)) then begin
        giq_option(1, NAME, 501, Node051, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 502, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 503, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 504, Node999, NEUTRAL_REACTION);
end

procedure Node051
begin
    Reply(510);
    giq_option(1, NAME, 511, Node052, NEUTRAL_REACTION);
end

procedure Node052
begin
    item_caps_adjust(dude_obj, 100);
    Reply(520);
    giq_option(1, NAME, 501, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 502, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 503, Node999, NEUTRAL_REACTION);
end

procedure Node053
begin
    Reply(530);
    giq_option(1, NAME, 531, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 532, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 533, Node999, NEUTRAL_REACTION);
end

procedure Node054
begin
    Reply(540);
    giq_option(1, NAME, 541, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 542, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 543, Node999, NEUTRAL_REACTION);
end

procedure Node055
begin
    Reply(550);
    giq_option(1, NAME, 551, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 552, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 553, Node999, NEUTRAL_REACTION);
end

procedure Node056
begin
    Reply(560);
    giq_option(1, NAME, 561, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 562, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 563, Node999, NEUTRAL_REACTION);
end

procedure Node057
begin
    Reply(570);
    giq_option(1, NAME, 571, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 572, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 573, Node999, NEUTRAL_REACTION);
end

procedure Node058
begin
    if (global_var(GVAR_SIERRA_BASE_CONTAMINATION_TIMER) < 2) then begin
        Reply(5801);
        giq_option(1, NAME, 581, Node038, NEUTRAL_REACTION);
        giq_option(1, NAME, 582, Node031, NEUTRAL_REACTION);
        giq_option(1, NAME, 583, Node999, NEUTRAL_REACTION);
    end
    else begin
        Reply(5802);
        giq_option(1, NAME, 584, Node038, NEUTRAL_REACTION);
        giq_option(1, NAME, 585, Node031, NEUTRAL_REACTION);
        giq_option(1, NAME, 586, Node999, NEUTRAL_REACTION);
    end
end

procedure Node059
begin
    Reply(590);
    giq_option(1, NAME, 591, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 592, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 593, Node999, NEUTRAL_REACTION);
end

procedure Node060
begin
    Reply(600);
    giq_option(1, NAME, 601, Node061, NEUTRAL_REACTION);
    giq_option(1, NAME, 602, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 603, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 604, Node999, NEUTRAL_REACTION);
end

procedure Node061
begin
    Reply(610);
    giq_option(1, NAME, 611, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 612, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 613, Node999, NEUTRAL_REACTION);
end

procedure Node062
begin
    Reply(620);
    if (local_var(8) == 0) then begin
        giq_option(1, NAME, 621, Node063, NEUTRAL_REACTION);
    end
    if ((local_var(8) == 0) and (global_var(GVAR_NCR_SCMERK_SEED_STATUS) == 1) and (global_var(GVAR_NCR_LENNY_MET) == 1)) then begin
        giq_option(1, NAME, 622, Node073, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 623, Node072, NEUTRAL_REACTION);
    if ((global_var(GVAR_MODOC_TOOL_FLAG) bwand 16) != 0) then begin
        if ((global_var(GVAR_NCR_ELRON_ADJUST) == 1) and (global_var(GVAR_NCR_FAKE_VAULT13_HOLODISK) == 1) and (global_var(GVAR_MILITARY_BASE_FLAGS) == 1) and (global_var(GVAR_WRIGHT_FAMILY_COUNTER) == 1) and (global_var(GVAR_NCR_MIRA_STATE) == 1)) then begin
            giq_option(1, NAME, 624, Node097, NEUTRAL_REACTION);
        end
    end
    else begin
        if ((global_var(GVAR_NCR_FAKE_VAULT13_MAP) == 1) and (global_var(GVAR_NCR_ELRON_ADJUST) == 1) and (global_var(GVAR_NCR_FAKE_VAULT13_HOLODISK) == 1) and (global_var(GVAR_MILITARY_BASE_FLAGS) == 1) and (global_var(GVAR_WRIGHT_FAMILY_COUNTER) == 1) and (global_var(GVAR_NCR_MIRA_STATE) == 1)) then begin
            giq_option(1, NAME, 624, Node097, NEUTRAL_REACTION);
        end
    end
    if ((global_var(GVAR_NCR_ROPE_KNOWN) == 2) and (global_var(GVAR_TORR_BRAHMIN_KILLED) != 1)) then begin
        giq_option(1, NAME, 625, Node098, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 626, Node999, NEUTRAL_REACTION);
end

procedure Node063
begin
    if (local_var(8) == 0) then begin
        set_local_var(8, 1);
    end
    if (global_var(GVAR_QUEST_VAULT_VILLAGE) < 2) then begin
        Reply(6301);
        giq_option(1, NAME, 631, Node064, NEUTRAL_REACTION);
        giq_option(1, NAME, 632, Node064, NEUTRAL_REACTION);
        giq_option(1, NAME, 633, Node065, NEUTRAL_REACTION);
    end
    else begin
        Reply(6302);
        giq_option(1, NAME, 635, Node066, NEUTRAL_REACTION);
    end
end

procedure Node064
begin
    Reply(640);
    giq_option(1, NAME, 641, Node066, NEUTRAL_REACTION);
end

procedure Node065
begin
    Reply(650);
    giq_option(1, NAME, 651, Node066, NEUTRAL_REACTION);
end

procedure Node066
begin
    Reply(660);
    if (global_var(GVAR_NEW_RENO_WARNING_TIMER) == 1) then begin
        giq_option(1, NAME, 661, Node067, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_NEW_RENO_WARNING_TIMER) == 0) then begin
        giq_option(1, NAME, 662, Node071, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_NEW_RENO_WARNING_TIMER) == 1) then begin
        giq_option(1, NAME, 663, Node071, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_NEW_RENO_WARNING_TIMER) == 0) then begin
        giq_option(1, NAME, 664, Node067, NEUTRAL_REACTION);
    end
end

procedure Node067
begin
    Reply(670);
    giq_option(1, NAME, 671, Node068, NEUTRAL_REACTION);
    giq_option(1, NAME, 672, Node068, NEUTRAL_REACTION);
    giq_option(1, NAME, 673, Node068, NEUTRAL_REACTION);
    giq_option(1, NAME, 674, Node068, NEUTRAL_REACTION);
end

procedure Node068
begin
    Reply(680);
    giq_option(1, NAME, 681, Node069, NEUTRAL_REACTION);
end

procedure Node069
begin
    Reply(690);
    giq_option(1, NAME, 691, Node070, NEUTRAL_REACTION);
end

procedure Node070
begin
    set_global_var(GVAR_NCR_ROPE_KNOWN, 1);
    Reply(700);
    giq_option(1, NAME, 701, Node999, NEUTRAL_REACTION);
end

procedure Node071
begin
    Reply(710);
    giq_option(1, NAME, 711, Node069, NEUTRAL_REACTION);
end

procedure Node072
begin
    Reply(720);
    giq_option(1, NAME, 721, Node999, NEUTRAL_REACTION);
end

procedure Node073
begin
    Reply(730);
    if (global_var(GVAR_DUMAR_STATUS) == 1) then begin
        giq_option(1, NAME, 731, Node074, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_NCR_LENNY_MET) == 1) then begin
        giq_option(1, NAME, 732, Node095, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 626, Node999, NEUTRAL_REACTION);
end

procedure Node074
begin
    Reply(740);
    giq_option(1, NAME, 741, Node075, NEUTRAL_REACTION);
end

procedure Node075
begin
    Reply(750);
    giq_option(1, NAME, 751, Node076, NEUTRAL_REACTION);
    giq_option(1, NAME, 752, Node094, NEUTRAL_REACTION);
    giq_option(1, NAME, 753, Node094, NEUTRAL_REACTION);
end

procedure Node076
begin
    Reply(760);
    giq_option(1, NAME, 761, Node077, NEUTRAL_REACTION);
end

procedure Node077
begin
    if (global_var(GVAR_TOWN_REP_VAULT_CITY) >= 25) then begin
        Reply(7701);
        giq_option(1, NAME, 771, Node078, NEUTRAL_REACTION);
        giq_option(1, NAME, 772, Node086, NEUTRAL_REACTION);
        giq_option(1, NAME, 773, Node093, NEUTRAL_REACTION);
    end
    else begin
        Reply(7702);
        giq_option(1, NAME, 774, Node092, NEUTRAL_REACTION);
        giq_option(1, NAME, 775, Node088, NEUTRAL_REACTION);
        giq_option(1, NAME, 776, Node088, NEUTRAL_REACTION);
    end
end

procedure Node078
begin
    Reply(780);
    giq_option(1, NAME, 781, Node079, NEUTRAL_REACTION);
    giq_option(1, NAME, 782, Node079, NEUTRAL_REACTION);
    giq_option(1, NAME, 783, Node086, NEUTRAL_REACTION);
    giq_option(1, NAME, 784, Node087, NEUTRAL_REACTION);
end

procedure Node079
begin
    set_global_var(GVAR_HOLODISK_MB_LEVEL_1, 3);
    set_global_var(GVAR_KARMA_NWO_BOSS, 1);
    Reply(790);
    giq_option(1, NAME, 791, Node080, NEUTRAL_REACTION);
end

procedure Node080
begin
    Reply(800);
    giq_option(1, NAME, 801, Node081, NEUTRAL_REACTION);
    giq_option(1, NAME, 802, Node082, NEUTRAL_REACTION);
    giq_option(1, NAME, 803, Node083, NEUTRAL_REACTION);
    giq_option(1, NAME, 804, Node084, NEUTRAL_REACTION);
end

procedure Node081
begin
    Reply(810);
    giq_option(1, NAME, 811, Node080, NEUTRAL_REACTION);
    giq_option(1, NAME, 812, Node084, NEUTRAL_REACTION);
end

procedure Node082
begin
    Reply(820);
    giq_option(1, NAME, 821, Node080, NEUTRAL_REACTION);
    giq_option(1, NAME, 822, Node084, NEUTRAL_REACTION);
end

procedure Node083
begin
    Reply(830);
    giq_option(1, NAME, 831, Node080, NEUTRAL_REACTION);
    giq_option(1, NAME, 832, Node084, NEUTRAL_REACTION);
end

procedure Node084
begin
    Reply(840);
    giq_option(1, NAME, 841, Node085, NEUTRAL_REACTION);
end

procedure Node085
begin
    Reply(850);
    giq_option(1, NAME, 851, Node999, NEUTRAL_REACTION);
end

procedure Node086
begin
    Reply(860);
    giq_option(1, NAME, 861, Node079, NEUTRAL_REACTION);
    giq_option(1, NAME, 862, Node087, NEUTRAL_REACTION);
end

procedure Node087
begin
    Reply(870);
    giq_option(1, NAME, 871, Node088, NEUTRAL_REACTION);
    giq_option(1, NAME, 872, Node088, NEUTRAL_REACTION);
end

procedure Node088
begin
    Reply(880);
    giq_option(1, NAME, 881, Node089, NEUTRAL_REACTION);
end

procedure Node089
begin
    Reply(890);
    giq_option(1, NAME, 891, Node090, NEUTRAL_REACTION);
end

procedure Node090
begin
    Reply(900);
    giq_option(1, NAME, 901, Node091, NEUTRAL_REACTION);
end

procedure Node091
begin
    if (global_var(GVAR_TORR_BRAHMIN_KILLED) == 0) then begin
        set_global_var(GVAR_TORR_BRAHMIN_KILLED, 1);
    end
    if (obj_carrying_pid_obj(dude_obj, 393)) then begin
        set_sfall_global(19, 1);
        play_sfx("LEVELUP");
        display_msg(message_str(SCRIPT_ITNTBOOK, 112));
    end
    Reply(910);
    giq_option(1, NAME, 911, Node999, NEUTRAL_REACTION);
end

procedure Node092
begin
    Reply(920);
    giq_option(1, NAME, 921, Node088, NEUTRAL_REACTION);
end

procedure Node093
begin
    Reply(930);
    giq_option(1, NAME, 931, Node078, NEUTRAL_REACTION);
    giq_option(1, NAME, 932, Node087, NEUTRAL_REACTION);
end

procedure Node094
begin
    Reply(940);
    giq_option(1, NAME, 941, Node076, NEUTRAL_REACTION);
end

procedure Node095
begin
    Reply(950);
    giq_option(1, NAME, 951, Node096, NEUTRAL_REACTION);
end

procedure Node096
begin
    Reply(960);
    giq_option(1, NAME, 961, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 962, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 963, Node999, NEUTRAL_REACTION);
end

procedure Node097
begin
    Reply(970);
    giq_option(1, NAME, 971, Node099, NEUTRAL_REACTION);
end

procedure Node098
begin
    Reply(980);
    giq_option(1, NAME, 981, Node074, NEUTRAL_REACTION);
    giq_option(1, NAME, 982, Node100, NEUTRAL_REACTION);
    if (global_var(GVAR_HOLODISK_MB_LEVEL_2) == 1) then begin
        giq_option(1, NAME, 983, Node101, NEUTRAL_REACTION);
    end
end

procedure Node099
begin
    set_global_var(GVAR_HOLODISK_MB_LEVEL_1, 2);
    display_msg(message_str(SCRIPT_STTEXT, 812));
    item_caps_adjust(dude_obj, 500);
    add_obj_to_inven(dude_obj, create_object(299, 1, 2));
    set_global_var(GVAR_VAULT_MONSTER_COUNT, 2);
    give_exp_points(floor(345) + (dude_iq * floor(143)) + (dude_luck * floor(57)) + (floor(23) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
    display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(345) + (dude_iq * floor(143)) + (dude_luck * floor(57)) + (floor(23) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
    Reply(990);
    giq_option(1, NAME, 991, Node999, NEUTRAL_REACTION);
end

procedure Node100
begin
    Reply(1000);
    giq_option(1, NAME, 1001, Node088, NEUTRAL_REACTION);
end

procedure Node101
begin
    set_global_var(GVAR_HOLODISK_MB_LEVEL_1, 1);
    display_msg(message_str(SCRIPT_STTEXT, 812));
    item_caps_adjust(dude_obj, 500);
    add_obj_to_inven(dude_obj, create_object(299, 1, 2));
    set_global_var(GVAR_VAULT_MONSTER_COUNT, 2);
    give_exp_points(floor(345) + (dude_iq * floor(143)) + (dude_luck * floor(57)) + (floor(23) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
    display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(345) + (dude_iq * floor(143)) + (dude_luck * floor(57)) + (floor(23) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
    Reply(1010);
    giq_option(1, NAME, 1011, Node999, NEUTRAL_REACTION);
end

procedure Node102
begin
    set_local_var(9, 1);
    Reply(1020);
    giq_option(1, NAME, 1021, Node031, NEUTRAL_REACTION);
end

procedure Node103
begin
    Reply(1030);
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 1) then begin
        giq_option(1, NAME, 1031, Node104, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 2) then begin
        giq_option(1, NAME, 1032, Node105, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 3) then begin
        giq_option(1, NAME, 1033, Node106, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 1034, Node107, NEUTRAL_REACTION);
    giq_option(1, NAME, 1035, Node999, NEUTRAL_REACTION);
end

procedure Node104
begin
    Reply(1040);
    giq_option(1, NAME, 1041, Node107, NEUTRAL_REACTION);
    giq_option(1, NAME, 1042, Node999, NEUTRAL_REACTION);
end

procedure Node105
begin
    Reply(1050);
    giq_option(1, NAME, 1051, Node107, NEUTRAL_REACTION);
    giq_option(1, NAME, 1052, Node999, NEUTRAL_REACTION);
end

procedure Node106
begin
    Reply(1060);
    giq_option(1, NAME, 1061, Node107, NEUTRAL_REACTION);
    giq_option(1, NAME, 1062, Node999, NEUTRAL_REACTION);
end

procedure Node107
begin
    Reply(1070);
    giq_option(1, NAME, 1071, Node999, NEUTRAL_REACTION);
end

procedure Node108
begin
    if (global_var(GVAR_BH_RANK_KILLED) == 1) then begin
        set_global_var(GVAR_BH_RANK_KILLED, 3);
        if (global_var(GVAR_SIERRA_BASE_CONTAMINATION_TIMER) == 1) then begin
            set_global_var(GVAR_SIERRA_BASE_CONTAMINATION_TIMER, 2);
            give_exp_points(floor(40) + (dude_iq * floor(16)) + (dude_luck * floor(6)) + (floor(2) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
            display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(40) + (dude_iq * floor(16)) + (dude_luck * floor(6)) + (floor(2) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
        end
        Reply(1083);
        giq_option(1, NAME, 1084, Node999, NEUTRAL_REACTION);
    end
    else begin
        Reply(1080);
        if (global_var(GVAR_BH_RANK_KILLED) == 2) then begin
            giq_option(1, NAME, 1081, Node109, NEUTRAL_REACTION);
        end
        giq_option(1, NAME, 1082, Node999, NEUTRAL_REACTION);
    end
end

procedure Node109
begin
    set_global_var(GVAR_BH_RANK_KILLED, 3);
    if (global_var(GVAR_SIERRA_BASE_CONTAMINATION_TIMER) == 1) then begin
        set_global_var(GVAR_SIERRA_BASE_CONTAMINATION_TIMER, 2);
        give_exp_points(floor(40) + (dude_iq * floor(16)) + (dude_luck * floor(6)) + (floor(2) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(40) + (dude_iq * floor(16)) + (dude_luck * floor(6)) + (floor(2) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
        set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) + 8);
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 10);
    end
    Reply(1090);
    giq_option(1, NAME, 1091, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end
