variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node010;
procedure Node011;
procedure Node012;
procedure NodePartyIn;
procedure NodeInParty;
procedure NodeDistance;
procedure NodeSD;
procedure NodeMD;
procedure NodeLD;
procedure NodePartyOut;
procedure NodeOutParty;
procedure NodeTalk;
procedure NodeHowToSpeak;
procedure NodeHTS0;
procedure NodeHTS1;
procedure NodeHTS2;
procedure NodeHTS3;
procedure NodeAmmo;
procedure Node999;
procedure Node998;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(90, 95));
        set_local_var(5, random(10, 20));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 300);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_ROBOTRON);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, 1000, 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, 1000, 2);
    end
    if (global_var(GVAR_NCR_CATTLE_DRIVE) == 1) then begin
        if (local_var(10) == 0) then begin
            if ((tile_distance(dude_tile, tile_num(self_obj)) > 3) and (tile_distance(dude_tile, tile_num(self_obj)) <= 7)) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), random(2, 4)), 0);
            end
            else begin
                if (tile_distance(dude_tile, tile_num(self_obj)) > 7) then begin
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), random(2, 4)), 1);
                end
            end
        end
        if (local_var(10) == 1) then begin
            if ((tile_distance(dude_tile, tile_num(self_obj)) > 6) and (tile_distance(dude_tile, tile_num(self_obj)) <= 10)) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), random(3, 5)), 0);
            end
            else begin
                if (tile_distance(dude_tile, tile_num(self_obj)) > 10) then begin
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), random(3, 5)), 1);
                end
            end
        end
        if (local_var(10) == 2) then begin
            if ((tile_distance(dude_tile, tile_num(self_obj)) > 10) and (tile_distance(dude_tile, tile_num(self_obj)) <= 16)) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), random(4, 6)), 0);
            end
            else begin
                if (tile_distance(dude_tile, tile_num(self_obj)) > 16) then begin
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), random(4, 6)), 1);
                end
            end
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (local_var(2) == 1) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
end

procedure push_p_proc
begin
    if (global_var(GVAR_NCR_CATTLE_DRIVE) != 1) then begin
        script_overrides;
    end
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    end
    if (local_var(9) < 3) then begin
        if (local_var(7) == 0) then begin
            start_gdialog(328, self_obj, -1, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
        else begin
            display_mstr(14);
        end
    end
    else begin
        start_gdialog(328, self_obj, -1, -1, -1);
        gsay_start;
        if (global_var(GVAR_NCR_CATTLE_DRIVE) == 1) then begin
            call NodeInParty();
        end
        if (global_var(GVAR_NCR_CATTLE_DRIVE) == 2) then begin
            call NodeOutParty();
        end
        if (global_var(GVAR_NCR_CATTLE_DRIVE) == 0) then begin
            call Node010();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (global_var(GVAR_NCR_CATTLE_DRIVE) == 1) then begin
        set_global_var(GVAR_NCR_CATTLE_DRIVE, 0);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure use_obj_on_p_proc
begin
    script_overrides;
    if ((obj_pid(obj_being_used_with) == 23) and (local_var(9) < 3)) then begin
        rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 23));
        set_local_var(9, local_var(9) + 1);
        if (local_var(9) < 3) then begin
            display_mstr(15);
        end
        else begin
            display_mstr(16);
        end
    end
    else begin
        display_msg(message_str(SCRIPT_STTEXT, random(60, 69)));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    Reply(10);
    if (dude_is_stupid) then begin
        giq_option(1, NAME, 11, Node002, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 12, Node002, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 13, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(20);
    if (dude_is_stupid) then begin
        giq_option(1, NAME, mstr(21) + dude_name + mstr(22), Node003, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, mstr(23) + dude_name + mstr(24), Node003, NEUTRAL_REACTION);
    end
end

procedure Node003
begin
    set_local_var(7, 1);
    Reply(mstr(30) + dude_name + mstr(31));
    if (dude_is_stupid) then begin
        giq_option(1, NAME, 32, Node999, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 33, Node999, NEUTRAL_REACTION);
    end
end

procedure Node010
begin
    already_talk := 1;
    Reply(100);
    if (dude_is_stupid) then begin
        giq_option(1, NAME, 101, Node011, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 102, Node011, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 103, Node012, NEUTRAL_REACTION);
    giq_option(1, NAME, 104, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(110);
    giq_option(1, NAME, 111, NodePartyIn, NEUTRAL_REACTION);
    giq_option(1, NAME, 112, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(120);
    giq_option(1, NAME, 121, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 122, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 123, Node999, NEUTRAL_REACTION);
end

procedure NodePartyIn
begin
    set_global_var(GVAR_NCR_CATTLE_DRIVE, 1);
    party_add(self_obj);
    set_local_var(10, 1);
    if (local_var(8) == 0) then begin
        Reply(500);
    end
    if (local_var(8) == 1) then begin
        Reply(501);
    end
    if (local_var(8) == 2) then begin
        Reply(502);
    end
    if (local_var(8) == 3) then begin
        Reply(503);
    end
    giq_option(1, NAME, 504, NodeInParty, NEUTRAL_REACTION);
end

procedure NodeInParty
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        if (local_var(8) == 0) then begin
            Reply(510);
        end
        if (local_var(8) == 1) then begin
            Reply(511);
        end
        if (local_var(8) == 2) then begin
            Reply(512);
        end
        if (local_var(8) == 3) then begin
            Reply(513);
        end
    end
    else begin
        if (local_var(8) == 0) then begin
            Reply(514);
        end
        if (local_var(8) == 1) then begin
            Reply(515);
        end
        if (local_var(8) == 2) then begin
            Reply(516);
        end
        if (local_var(8) == 3) then begin
            Reply(517);
        end
    end
    giq_option(1, NAME, 518, NodeDistance, NEUTRAL_REACTION);
    giq_option(1, NAME, 519, NodePartyOut, NEUTRAL_REACTION);
    giq_option(1, NAME, 520, NodeTalk, NEUTRAL_REACTION);
    if (obj_carrying_pid_obj(dude_obj, 28)) then begin
        giq_option(1, NAME, 522, NodeAmmo, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 521, Node999, NEUTRAL_REACTION);
end

procedure NodeDistance
begin
    if (local_var(8) == 0) then begin
        Reply(530);
    end
    if (local_var(8) == 1) then begin
        Reply(531);
    end
    if (local_var(8) == 2) then begin
        Reply(532);
    end
    if (local_var(8) == 3) then begin
        Reply(533);
    end
    giq_option(1, NAME, 534, NodeSD, NEUTRAL_REACTION);
    giq_option(1, NAME, 535, NodeMD, NEUTRAL_REACTION);
    giq_option(1, NAME, 536, NodeLD, NEUTRAL_REACTION);
    giq_option(1, NAME, 537, NodeInParty, NEUTRAL_REACTION);
end

procedure NodeSD
begin
    set_local_var(10, 0);
    if (local_var(8) == 0) then begin
        Reply(540);
    end
    if (local_var(8) == 1) then begin
        Reply(541);
    end
    if (local_var(8) == 2) then begin
        Reply(542);
    end
    if (local_var(8) == 3) then begin
        Reply(543);
    end
    giq_option(1, NAME, 544, NodeInParty, NEUTRAL_REACTION);
    giq_option(1, NAME, 545, Node999, NEUTRAL_REACTION);
end

procedure NodeMD
begin
    set_local_var(10, 1);
    if (local_var(8) == 0) then begin
        Reply(550);
    end
    if (local_var(8) == 1) then begin
        Reply(551);
    end
    if (local_var(8) == 2) then begin
        Reply(552);
    end
    if (local_var(8) == 3) then begin
        Reply(553);
    end
    giq_option(1, NAME, 554, NodeInParty, NEUTRAL_REACTION);
    giq_option(1, NAME, 555, Node999, NEUTRAL_REACTION);
end

procedure NodeLD
begin
    set_local_var(10, 2);
    if (local_var(8) == 0) then begin
        Reply(560);
    end
    if (local_var(8) == 1) then begin
        Reply(561);
    end
    if (local_var(8) == 2) then begin
        Reply(562);
    end
    if (local_var(8) == 3) then begin
        Reply(563);
    end
    giq_option(1, NAME, 564, NodeInParty, NEUTRAL_REACTION);
    giq_option(1, NAME, 565, Node999, NEUTRAL_REACTION);
end

procedure NodePartyOut
begin
    party_remove(self_obj);
    set_global_var(GVAR_NCR_CATTLE_DRIVE, 2);
    if (local_var(8) == 0) then begin
        Reply(570);
    end
    if (local_var(8) == 1) then begin
        Reply(571);
    end
    if (local_var(8) == 2) then begin
        Reply(572);
    end
    if (local_var(8) == 3) then begin
        Reply(573);
    end
    giq_option(1, NAME, 574, NodePartyIn, NEUTRAL_REACTION);
    giq_option(1, NAME, 575, Node999, NEUTRAL_REACTION);
end

procedure NodeOutParty
begin
    if (local_var(8) == 0) then begin
        Reply(580);
    end
    if (local_var(8) == 1) then begin
        Reply(581);
    end
    if (local_var(8) == 2) then begin
        Reply(582);
    end
    if (local_var(8) == 3) then begin
        Reply(583);
    end
    giq_option(1, NAME, 584, NodePartyIn, NEUTRAL_REACTION);
    giq_option(1, NAME, 585, Node999, NEUTRAL_REACTION);
end

procedure NodeTalk
begin
    if (local_var(8) == 0) then begin
        Reply(590);
    end
    if (local_var(8) == 1) then begin
        Reply(591);
    end
    if (local_var(8) == 2) then begin
        Reply(592);
    end
    if (local_var(8) == 3) then begin
        Reply(593);
    end
    giq_option(1, NAME, 594, NodeHowToSpeak, NEUTRAL_REACTION);
    giq_option(1, NAME, 595, NodeInParty, NEUTRAL_REACTION);
    giq_option(1, NAME, 596, Node999, NEUTRAL_REACTION);
end

procedure NodeHowToSpeak
begin
    Reply(600);
    giq_option(1, NAME, 601, NodeHTS0, NEUTRAL_REACTION);
    giq_option(1, NAME, 602, NodeHTS1, NEUTRAL_REACTION);
    giq_option(1, NAME, 603, NodeHTS2, NEUTRAL_REACTION);
    giq_option(1, NAME, 604, NodeHTS3, NEUTRAL_REACTION);
end

procedure NodeHTS0
begin
    set_local_var(8, 0);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PARTY_ROBOTRON_BERSERK);
    call NodeInParty();
end

procedure NodeHTS1
begin
    set_local_var(8, 1);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PARTY_ROBOTRONJAPAN_AGGRESSIVE);
    call NodeInParty();
end

procedure NodeHTS2
begin
    set_local_var(8, 2);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PARTY_ROBOTRONBUDDY_AGGRESSIVE);
    call NodeInParty();
end

procedure NodeHTS3
begin
    set_local_var(8, 3);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PARTY_ROBOTRONUK_AGGRESSIVE);
    call NodeInParty();
end

procedure NodeAmmo
begin
    add_obj_to_inven(self_obj, create_object(28, 1, 2));
    rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 28));
    if (local_var(8) == 0) then begin
        Reply(610);
    end
    if (local_var(8) == 1) then begin
        Reply(611);
    end
    if (local_var(8) == 2) then begin
        Reply(612);
    end
    if (local_var(8) == 3) then begin
        Reply(613);
    end
    giq_option(1, NAME, 614, NodeInParty, NEUTRAL_REACTION);
    giq_option(1, NAME, 615, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
end
