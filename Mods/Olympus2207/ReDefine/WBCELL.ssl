variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;

procedure start;
procedure description_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;


procedure start
begin
end

procedure description_p_proc
begin
    script_overrides;
    if ((map_var(0) == 1) or (map_var(1) == 1) or (local_var(4) == 1)) then begin
        display_mstr(4);
    end
    else begin
        display_mstr(2);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if ((map_var(0) == 1) or (map_var(1) == 1) or (local_var(4) == 1)) then begin
        display_mstr(3);
    end
    else begin
        display_mstr(1);
    end
end

procedure damage_p_proc
begin
    if ((map_var(0) == 1) or (map_var(1) == 1) or (local_var(4) == 1)) then begin
    end
    else begin
        if (fixed_param >= 20) then begin
            set_local_var(4, 1);
            display_mstr(13);
            give_exp_points(floor(30 / 5) + (dude_iq * floor(30 / 12)) + (dude_luck * floor(30 / 30)) + (floor(30 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
            display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(30 / 5) + (dude_iq * floor(30 / 12)) + (dude_luck * floor(30 / 30)) + (floor(30 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
        end
    end
end

procedure use_p_proc
begin
    if ((map_var(0) == 1) or (map_var(1) == 1) or (local_var(4) == 1)) then begin
    end
    else begin
        script_overrides;
        critter_dmg(dude_obj, random(6, 9), DMG_electrical);
        display_mstr(random(5, 6));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    if ((map_var(0) == 1) or (map_var(1) == 1) or (local_var(4) == 1)) then begin
    end
    else begin
        script_overrides;
        if (action_being_used == 12) then begin
            if (dude_skill(SKILL_SCIENCE) >= 65) then begin
                display_mstr(random(8, 9));
            end
            else begin
                display_mstr(7);
            end
        end
        else begin
            if ((action_being_used == 13) or (action_being_used == 11) or (action_being_used == 9)) then begin
                if (dude_skill(action_being_used) >= 95) then begin
                    set_local_var(4, 1);
                    display_mstr(12);
                    give_exp_points(floor(100 / 5) + (dude_iq * floor(100 / 12)) + (dude_luck * floor(100 / 30)) + (floor(100 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
                    display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(100 / 5) + (dude_iq * floor(100 / 12)) + (dude_luck * floor(100 / 30)) + (floor(100 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
                end
                else begin
                    if (dude_skill(action_being_used) >= 78) then begin
                        set_local_var(4, 1);
                        critter_dmg(dude_obj, random(23, 25), DMG_electrical);
                        display_mstr(11);
                        give_exp_points(floor(50 / 5) + (dude_iq * floor(50 / 12)) + (dude_luck * floor(50 / 30)) + (floor(50 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
                        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(50 / 5) + (dude_iq * floor(50 / 12)) + (dude_luck * floor(50 / 30)) + (floor(50 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
                    end
                    else begin
                        critter_dmg(dude_obj, random(13, 15), DMG_electrical);
                        display_mstr(10);
                    end
                end
            end
        end
    end
end

procedure map_enter_p_proc
begin
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
end
