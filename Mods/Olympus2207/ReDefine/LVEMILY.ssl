variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable trading_container;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure NodeDeath;
procedure Node038;
procedure NodeExodus;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure NodeGoToFilter;
procedure Node046;
procedure NodeGoBack;
procedure Node047;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(60, 70));
        set_local_var(5, random(40, 50));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 11);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_LADY_BERSERK);
        if (random(0, 100) <= 75) then begin
            add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(1, 40));
        end
        if (random(0, 100) <= 45) then begin
            add_obj_to_inven(self_obj, create_object(415, 1, 2));
        end
        if (random(0, 100) <= 40) then begin
            add_obj_to_inven(self_obj, create_object(419, 1, 2));
        end
        if (random(0, 100) <= 30) then begin
            add_obj_to_inven(self_obj, create_object(434, 1, 2));
        end
        if (random(0, 100) <= 20) then begin
            add_obj_to_inven(self_obj, create_object(145, 1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object(223, 1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object(103, 1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object(67, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(226, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(410, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(433, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(423, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(323, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(239, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(443, 1, 2));
        end
        add_obj_to_inven(self_obj, create_object(235, 1, 2));
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, 1000, 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, 1000, 2);
    end
    if ((CUR_MAP_LVROOMS) and (tile_num(self_obj) != local_var(3)) and (anim_busy(self_obj) == 0) and not(combat_is_initialized)) then begin
        animate_move_obj_to_tile(self_obj, local_var(3), 0);
    end
    if ((tile_num(self_obj) == local_var(3)) and ((obj_get_rot(self_obj) == 0) or (obj_get_rot(self_obj) == 1) or (obj_get_rot(self_obj) == 2))) then begin
        anim(self_obj, 1000, 3);
    end
    if ((global_var(GVAR_NEW_RENO_MCGEE_SEED) == 4) and (tile_num(self_obj) != 16326)) then begin
        set_global_var(GVAR_MODOC_TOOL_FLAG, global_var(GVAR_MODOC_TOOL_FLAG) bwor 16777216);
        move_to(self_obj, 16326, 0);
        critter_heal(self_obj, -100);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_GECKO) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    end
    start_gdialog(229, self_obj, 4, 6, -1);
    gsay_start;
    if (global_var(GVAR_NEW_RENO_MCGEE_SEED) == 3) then begin
        call Node046();
    end
    else begin
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_MODOC_TOOL_FLAG, global_var(GVAR_MODOC_TOOL_FLAG) bwor 16777216);
    if (global_var(GVAR_SIERRA_PASSWORD) == 1) then begin
        set_global_var(GVAR_SIERRA_PASSWORD, 2);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        if ((51 == 50) or (51 == 59)) then begin
            set_global_var(GVAR_TOWN_REP_GECKO, global_var(GVAR_TOWN_REP_GECKO) - 3);
        end
        else begin
            set_global_var(GVAR_TOWN_REP_GECKO, global_var(GVAR_TOWN_REP_GECKO) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (not(is_loading_game) == 1) then begin
        if ((CUR_MAP_LVROOMS) and (elevation(self_obj) != 0)) then begin
            if (global_var(GVAR_NEW_RENO_MCGEE_SEED) == 0) then begin
                move_to(self_obj, 18522, 0);
                fadeIn(600);
            end
        end
        if ((CUR_MAP_LVFILTER) and (elevation(self_obj) != 0)) then begin
            if (global_var(GVAR_NEW_RENO_MCGEE_SEED) == 3) then begin
                move_to(self_obj, local_var(3), 0);
                fadeIn(600);
                add_timer_event(self_obj, 8, 9);
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
        game_ui_enable;
        set_global_var(GVAR_MODOC_TOOL_FLAG, global_var(GVAR_MODOC_TOOL_FLAG) bwor 16777216);
        animate_move_obj_to_tile(self_obj, 16326, 0);
        fadeOut(2500);
        set_global_var(GVAR_NEW_RENO_MCGEE_SEED, 2);
        move_to(self_obj, 16326, 0);
        critter_heal(self_obj, -100);
        fadeIn(700);
    end
    if (fixed_param == 5) then begin
        animate_move_obj_to_tile(self_obj, 18522, 0);
        fadeOut(2500);
        move_to(self_obj, tile_num(self_obj), 2);
        fadeIn(700);
        game_ui_enable;
        set_global_var(GVAR_NEW_RENO_MCGEE_SEED, 1);
    end
    if (fixed_param == 7) then begin
        animate_move_obj_to_tile(self_obj, 18522, 0);
        fadeOut(1000);
        move_to(self_obj, tile_num(self_obj), 2);
        game_ui_enable;
        load_map("lvfilter", 1);
    end
    if (fixed_param == 8) then begin
        fadeOut(1000);
        move_to(self_obj, tile_num(self_obj), 2);
        game_ui_enable;
        load_map("lvrooms", 1);
    end
    if (fixed_param == 9) then begin
        game_ui_enable;
        anim(dude_obj, 1000, 2);
        dialogue_system_enter;
    end
end

procedure Node001
begin
    set_local_var(7, 1);
    already_talk := 1;
    Reply(10);
    giq_option(1, NAME, 11, Node002, BAD_REACTION);
    giq_option(1, NAME, 12, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 13, Node004, GOOD_REACTION);
    giq_option(1, NAME, 14, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 15, Node006, BAD_REACTION);
end

procedure Node002
begin
    Reply(20);
    giq_option(1, NAME, 21, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 22, Node007, BAD_REACTION);
    giq_option(1, NAME, 23, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(30);
    giq_option(1, NAME, 31, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 32, Node007, BAD_REACTION);
    giq_option(1, NAME, 33, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(40);
    giq_option(1, NAME, 41, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 42, Node007, BAD_REACTION);
    giq_option(1, NAME, 43, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(50);
    giq_option(1, NAME, 51, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 52, Node007, BAD_REACTION);
    giq_option(1, NAME, 53, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(60);
    giq_option(1, NAME, 61, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 62, Node007, BAD_REACTION);
end

procedure Node007
begin
    set_local_var(8, 1);
    Reply(70);
    giq_option(1, NAME, 71, Node998, NEUTRAL_REACTION);
    giq_option(1, NAME, 72, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(80);
    giq_option(1, NAME, 81, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 82, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        if (local_var(8) == 1) then begin
            Reply(1003);
        end
        else begin
            Reply(1002);
        end
    end
    else begin
        Reply(1001);
    end
    if (local_var(8) == 1) then begin
        giq_option(1, NAME, 103, Node013, NEUTRAL_REACTION);
    end
    else begin
        if (global_var(GVAR_GECKO_SKEETER_PART) == 1) then begin
            giq_option(1, NAME, 101, Node012, NEUTRAL_REACTION);
        end
        if (global_var(GVAR_SIERRA_BASE_ENEMY) == 1) then begin
            giq_option(1, NAME, 102, Node011, NEUTRAL_REACTION);
        end
        giq_option(1, NAME, 104, Node017, NEUTRAL_REACTION);
        if ((global_var(GVAR_SIERRA_PASSWORD) == 1) and (global_var(GVAR_NCR_GENERIC_STATE) >= 15) and (global_var(GVAR_8_BALL_TRASH_SECRET) == 2)) then begin
            giq_option(1, NAME, 105, Node025, GOOD_REACTION);
        end
        if ((global_var(GVAR_NEW_RENO_WRIGHT_FLAGS) == 2) or (dude_skill(SKILL_SPEECH) >= 90) and (global_var(GVAR_GECKO_ANKH) == 1)) then begin
            giq_option(1, NAME, 106, Node031, GOOD_REACTION);
        end
        if (global_var(GVAR_DEN_SMITTY_PART) == 1) then begin
            giq_option(1, NAME, 107, Node040, NEUTRAL_REACTION);
        end
        if (global_var(GVAR_GECKO_ANKH) == 1) then begin
            giq_option(1, NAME, 108, Node047, NEUTRAL_REACTION);
        end
    end
    giq_option(1, NAME, 109, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    set_global_var(GVAR_NEW_RENO_MCGEE_KNOWN, 1);
    Reply(110);
    giq_option(1, NAME, 111, Node010, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(120);
    giq_option(1, NAME, 121, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 122, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(130);
    giq_option(1, NAME, 131, Node014, GOOD_REACTION);
    giq_option(1, NAME, 132, Node015, BAD_REACTION);
    giq_option(1, NAME, 133, Node015, BAD_REACTION);
    giq_option(1, NAME, 134, Node016, BAD_REACTION);
    giq_option(1, NAME, 135, Node016, BAD_REACTION);
end

procedure Node014
begin
    set_local_var(8, 0);
    Reply(140);
    giq_option(1, NAME, 141, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 142, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(150);
    giq_option(1, NAME, 151, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 152, Node016, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(160);
    giq_option(1, NAME, 161, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 162, Node998, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(170);
    giq_option(1, NAME, 171, Node026, GOOD_REACTION);
    giq_option(1, NAME, 172, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 173, Node028, NEUTRAL_REACTION);
    giq_option(1, NAME, 174, Node029, NEUTRAL_REACTION);
end

procedure Node018
begin
    if (global_var(GVAR_SIERRA_PASSWORD) == 1) then begin
        Reply(1801);
    end
    else begin
        if (global_var(GVAR_SIERRA_PASSWORD) == 2) then begin
            Reply(1802);
        end
        else begin
            Reply(1803);
        end
    end
    if (global_var(GVAR_SIERRA_PASSWORD) == 0) then begin
        giq_option(1, NAME, 181, Node017, NEUTRAL_REACTION);
        giq_option(1, NAME, 182, Node020, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 183, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 184, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 185, Node019, BAD_REACTION);
end

procedure Node019
begin
    set_local_var(8, 1);
    Reply(190);
    giq_option(1, NAME, 191, Node999, NEUTRAL_REACTION);
end

procedure Node020
begin
    if (global_var(GVAR_SIERRA_PASSWORD) == 0) then begin
        set_global_var(GVAR_SIERRA_PASSWORD, 1);
    end
    Reply(200);
    giq_option(1, NAME, 201, Node021, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(210);
    if (not(global_var(GVAR_NEW_RENO_WRIGHT_FLAGS) == 1)) then begin
        if (dude_gender == 0) then begin
            giq_option(1, NAME, 211, Node999, NEUTRAL_REACTION);
        end
        else begin
            giq_option(1, NAME, 212, Node022, NEUTRAL_REACTION);
        end
    end
    else begin
        if (dude_gender == 1) then begin
            giq_option(1, NAME, 213, Node023, NEUTRAL_REACTION);
        end
        else begin
            giq_option(1, NAME, 214, Node024, NEUTRAL_REACTION);
        end
    end
end

procedure Node022
begin
    item_caps_adjust(dude_obj, 100);
    Reply(220);
    giq_option(1, NAME, 221, Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    item_caps_adjust(dude_obj, 100);
    add_obj_to_inven(dude_obj, create_object(87, 1, 2));
    Reply(230);
    giq_option(1, NAME, 231, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    add_obj_to_inven(dude_obj, create_object(87, 1, 2));
    Reply(240);
    giq_option(1, NAME, 241, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    if (global_var(GVAR_SIERRA_PASSWORD) != 2) then begin
        set_global_var(GVAR_SIERRA_PASSWORD, 2);
        give_exp_points(floor(1553 / 5) + (dude_iq * floor(1553 / 12)) + (dude_luck * floor(1553 / 30)) + (floor(1553 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(1553 / 5) + (dude_iq * floor(1553 / 12)) + (dude_luck * floor(1553 / 30)) + (floor(1553 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
        add_obj_to_inven(dude_obj, create_object(304, 1, 2));
    end
    Reply(250);
    giq_option(1, NAME, 251, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(260);
    giq_option(1, NAME, 261, Node027, GOOD_REACTION);
end

procedure Node027
begin
    Reply(270);
    giq_option(1, NAME, 271, Node017, NEUTRAL_REACTION);
    giq_option(1, NAME, 272, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 273, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 274, Node019, BAD_REACTION);
end

procedure Node028
begin
    Reply(280);
    giq_option(1, NAME, 281, Node017, NEUTRAL_REACTION);
    giq_option(1, NAME, 282, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 283, Node019, BAD_REACTION);
    giq_option(1, NAME, 284, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 285, Node043, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(290);
    giq_option(1, NAME, 291, Node030, NEUTRAL_REACTION);
    giq_option(1, NAME, 292, Node036, GOOD_REACTION);
end

procedure Node030
begin
    Reply(300);
    giq_option(1, NAME, 301, Node017, NEUTRAL_REACTION);
    giq_option(1, NAME, 302, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 303, Node019, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(310);
    giq_option(1, NAME, 311, Node032, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(320);
    giq_option(1, NAME, 321, Node033, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(330);
    giq_option(1, NAME, 331, Node999, NEUTRAL_REACTION);
    if (dude_skill(SKILL_SPEECH) >= 95) then begin
        giq_option(1, NAME, 332, Node034, BAD_REACTION);
    end
end

procedure Node034
begin
    Reply(340);
    giq_option(1, NAME, 341, Node035, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(350);
    giq_option(1, NAME, 351, Node037, BAD_REACTION);
    giq_option(1, NAME, 352, Node038, BAD_REACTION);
    giq_option(1, NAME, 353, Node010, GOOD_REACTION);
end

procedure Node036
begin
    Reply(360);
    giq_option(1, NAME, 361, Node039, NEUTRAL_REACTION);
end

procedure Node037
begin
    Reply(370);
    giq_option(1, NAME, 371, NodeDeath, NEUTRAL_REACTION);
end

procedure NodeDeath
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 20);
    display_msg(message_str(SCRIPT_STTEXT, 813));
    game_ui_disable;
    add_timer_event(self_obj, 8, 3);
end

procedure Node038
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 10);
    Reply(380);
    giq_option(1, NAME, 381, NodeExodus, NEUTRAL_REACTION);
end

procedure NodeExodus
begin
    game_ui_disable;
    display_msg(message_str(SCRIPT_STTEXT, 813));
    add_timer_event(self_obj, 8, 5);
end

procedure Node039
begin
    Reply(390);
    giq_option(1, NAME, 391, Node010, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(400);
    giq_option(1, NAME, 401, Node019, NEUTRAL_REACTION);
    giq_option(1, NAME, 402, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 403, Node041, NEUTRAL_REACTION);
end

procedure Node041
begin
    Reply(410);
    giq_option(1, NAME, 411, Node010, NEUTRAL_REACTION);
    if (dude_skill(SKILL_SPEECH) >= 80) then begin
        giq_option(1, NAME, 412, Node042, NEUTRAL_REACTION);
    end
end

procedure Node042
begin
    set_global_var(GVAR_GECKO_COOLANT, 1);
    Reply(420);
    giq_option(1, NAME, 421, Node999, NEUTRAL_REACTION);
end

procedure Node043
begin
    Reply(430);
    giq_option(1, NAME, 431, Node010, NEUTRAL_REACTION);
end

procedure Node044
begin
    set_global_var(GVAR_GECKO_ANKH, 3);
    Reply(440);
    giq_option(1, NAME, 441, Node010, NEUTRAL_REACTION);
end

procedure Node045
begin
    set_global_var(GVAR_NEW_RENO_MCGEE_SEED, 3);
    Reply(450);
    giq_option(1, NAME, 451, NodeGoToFilter, NEUTRAL_REACTION);
end

procedure NodeGoToFilter
begin
    game_ui_disable;
    add_timer_event(self_obj, 8, 7);
end

procedure Node046
begin
    Reply(460);
    giq_option(1, NAME, 461, Node998, NEUTRAL_REACTION);
    giq_option(1, NAME, 462, NodeGoBack, NEUTRAL_REACTION);
end

procedure NodeGoBack
begin
    set_global_var(GVAR_NEW_RENO_MCGEE_SEED, 0);
    game_ui_disable;
    add_timer_event(self_obj, 8, 8);
end

procedure Node047
begin
    Reply(470);
    giq_option(1, NAME, 471, Node044, BAD_REACTION);
    if ((global_var(global_var(GVAR_8_BALL_TRASH_SECRET) == 3) != 1) and (global_var(global_var(GVAR_8_BALL_TRASH_SECRET) == 3) != 3)) then begin
        giq_option(1, NAME, 472, Node045, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 473, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 474, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_map_var(0, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end
