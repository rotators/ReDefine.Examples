variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable max_distance;
variable animation_is_called;
variable distance_to_walk;
variable time_to_sleep;
variable time_to_repose;
variable work_tile_chois;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(30, 50));
        set_local_var(5, random(20, 70));
        set_local_var(6, random(-10, 10));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 7);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_RAIDER_BERSERK);
        max_distance := random(15, 20);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(1, 200), 1);
    end
    if ((game_time_hour == time_to_repose) and (local_var(7) == 0)) then begin
        set_local_var(7, 1);
        set_local_var(8, 0);
        if ((game_time_hour % 100) < 50) then begin
            time_to_sleep := game_time_hour + random(7, 10);
        end
        else begin
            if (floor(game_time_hour / 100) < 23) then begin
                time_to_sleep := ((floor(game_time_hour / 100) + 1) * 100) + random(7, 10);
            end
            else begin
                time_to_sleep := random(7, 10);
            end
        end
    end
    if ((game_time_hour == time_to_sleep) and (local_var(8) == 0)) then begin
        set_local_var(7, 0);
        set_local_var(8, 1);
        if ((game_time_hour % 100) < 50) then begin
            time_to_repose := game_time_hour + random(1, 5);
        end
        else begin
            if (floor(game_time_hour / 100) < 23) then begin
                time_to_repose := ((floor(game_time_hour / 100) + 1) * 100) + random(1, 5);
            end
            else begin
                time_to_repose := random(1, 5);
            end
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_MODOC) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_SJZPATRL, random(6, 9)));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_SJZPATRL, random(1, 5)));
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
    script_overrides;
    float_msg(self_obj, message_str(SCRIPT_SJZPATRL, random(1040, 1049)), FLOAT_MSG_RED);
    set_local_var(6, local_var(6) - random(5, 10));
end

procedure talk_p_proc
begin
    if ((art_anim(obj_art_fid(self_obj)) == 48) or (art_anim(obj_art_fid(self_obj)) == 49)) then begin
        float_msg(self_obj, message_str(SCRIPT_SJZPATRL, random(1030, 1039)), FLOAT_MSG_NORMAL);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) > 0) then begin
            dude_objective_reputation := (global_var(GVAR_TOWN_REP_MODOC) * 30) + global_var(GVAR_PLAYER_REPUTATION) - (20 * global_var(GVAR_CHILDKILLER_REPUTATION));
        end
        else begin
            dude_objective_reputation := (global_var(GVAR_TOWN_REP_MODOC) * 30) + global_var(GVAR_PLAYER_REPUTATION) - (20 * global_var(GVAR_CHILDKILLER_REPUTATION));
        end
        if ((dude_objective_reputation + local_var(6)) >= 300) then begin
            self_subjective_reaction := 1;
        end
        else begin
            if (((dude_objective_reputation + local_var(6)) >= -300) and ((dude_objective_reputation + local_var(6)) < 300)) then begin
                self_subjective_reaction := 0;
            end
            else begin
                self_subjective_reaction := -1;
            end
        end
        if (not(anim_busy(self_obj))) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
        end
        if (self_subjective_reaction == 1) then begin
            float_msg(self_obj, message_str(SCRIPT_SJZPATRL, random(1000, 1009)), FLOAT_MSG_GREEN);
        end
        if (self_subjective_reaction == 0) then begin
            float_msg(self_obj, message_str(SCRIPT_SJZPATRL, random(1010, 1019)), FLOAT_MSG_NORMAL);
            set_local_var(6, local_var(6) - random(0, 5));
        end
        if (self_subjective_reaction == -1) then begin
            float_msg(self_obj, message_str(SCRIPT_SJZPATRL, random(1020, 1029)), FLOAT_MSG_RED);
            set_local_var(2, 1);
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        if ((52 == 50) or (52 == 59)) then begin
            set_global_var(GVAR_TOWN_REP_MODOC, global_var(GVAR_TOWN_REP_MODOC) - 3);
        end
        else begin
            set_global_var(GVAR_TOWN_REP_MODOC, global_var(GVAR_TOWN_REP_MODOC) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (map_first_run) then begin
        if (random(1, 2) == 1) then begin
            if (random(0, 100) <= 33) then begin
                add_obj_to_inven(self_obj, create_object(151, 1, 2));
                add_mult_objs_to_inven(self_obj, create_object(9, 1, 2), random(14, 26));
                wield_obj(obj_carrying_pid_obj(self_obj, 151));
            end
            else begin
                add_obj_to_inven(self_obj, create_object(152, 1, 2));
                add_mult_objs_to_inven(self_obj, create_object(2, 1, 2), random(16, 29));
                wield_obj(obj_carrying_pid_obj(self_obj, 152));
            end
            if (random(0, 100) <= 33) then begin
                add_obj_to_inven(self_obj, create_object(215, 1, 2));
            end
            else begin
                add_obj_to_inven(self_obj, create_object(109, 1, 2));
            end
            if (random(0, 100) <= 33) then begin
                add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(10, 40));
            end
            if (random(0, 100) <= 25) then begin
                add_mult_objs_to_inven(self_obj, create_object(220, 1, 2), random(1, 3));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object(66, 1, 2));
            end
            if (random(0, 100) <= 9) then begin
                add_obj_to_inven(self_obj, create_object(431, 1, 2));
            end
            if (random(0, 100) <= 8) then begin
                add_obj_to_inven(self_obj, create_object(427, 1, 2));
            end
            if (random(0, 100) <= 7) then begin
                add_obj_to_inven(self_obj, create_object(226, 1, 2));
            end
            if (random(0, 100) <= 6) then begin
                add_obj_to_inven(self_obj, create_object(229, 1, 2));
            end
        end
        else begin
            if (random(1, 2) == 1) then begin
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object(169, 1, 2));
                    add_mult_objs_to_inven(self_obj, create_object(5, 1, 2), random(21, 38));
                    wield_obj(obj_carrying_pid_obj(self_obj, 169));
                end
                else begin
                    add_obj_to_inven(self_obj, create_object(177, 1, 2));
                    add_mult_objs_to_inven(self_obj, create_object(14, 1, 2), random(10, 18));
                    wield_obj(obj_carrying_pid_obj(self_obj, 177));
                end
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object(221, 1, 2));
                end
                else begin
                    add_obj_to_inven(self_obj, create_object(106, 1, 2));
                end
                if (random(0, 100) <= 33) then begin
                    add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(10, 40));
                end
                if (random(0, 100) <= 25) then begin
                    add_mult_objs_to_inven(self_obj, create_object(63, 1, 2), random(2, 4));
                end
                if (random(0, 100) <= 10) then begin
                    add_obj_to_inven(self_obj, create_object(64, 1, 2));
                end
                if (random(0, 100) <= 9) then begin
                    add_obj_to_inven(self_obj, create_object(431, 1, 2));
                end
                if (random(0, 100) <= 8) then begin
                    add_obj_to_inven(self_obj, create_object(236, 1, 2));
                end
                if (random(0, 100) <= 7) then begin
                    add_obj_to_inven(self_obj, create_object(229, 1, 2));
                end
                if (random(0, 100) <= 6) then begin
                    add_obj_to_inven(self_obj, create_object(230, 1, 2));
                end
            end
            else begin
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object(162, 1, 2));
                    add_mult_objs_to_inven(self_obj, create_object(2, 1, 2), random(21, 38));
                    wield_obj(obj_carrying_pid_obj(self_obj, 162));
                end
                else begin
                    add_obj_to_inven(self_obj, create_object(180, 1, 2));
                    add_mult_objs_to_inven(self_obj, create_object(14, 1, 2), random(10, 18));
                    wield_obj(obj_carrying_pid_obj(self_obj, 180));
                end
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object(229, 1, 2));
                end
                else begin
                    add_obj_to_inven(self_obj, create_object(65, 1, 2));
                end
                if (random(0, 100) <= 33) then begin
                    add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(10, 40));
                end
                if (random(0, 100) <= 25) then begin
                    add_mult_objs_to_inven(self_obj, create_object(63, 1, 2), random(2, 4));
                end
                if (random(0, 100) <= 10) then begin
                    add_obj_to_inven(self_obj, create_object(233, 1, 2));
                end
                if (random(0, 100) <= 9) then begin
                    add_obj_to_inven(self_obj, create_object(434, 1, 2));
                end
                if (random(0, 100) <= 8) then begin
                    add_obj_to_inven(self_obj, create_object(236, 1, 2));
                end
                if (random(0, 100) <= 7) then begin
                    add_obj_to_inven(self_obj, create_object(222, 1, 2));
                end
                if (random(0, 100) <= 6) then begin
                    add_obj_to_inven(self_obj, create_object(230, 1, 2));
                end
            end
        end
    end
    set_local_var(7, 1);
    max_distance := random(15, 20);
    if ((game_time_hour % 100) < 50) then begin
        time_to_sleep := game_time_hour + random(7, 10);
    end
    else begin
        if (floor(game_time_hour / 100) < 23) then begin
            time_to_sleep := ((floor(game_time_hour / 100) + 1) * 100) + random(7, 10);
        end
        else begin
            time_to_sleep := random(7, 10);
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if (local_var(7) == 1) then begin
            if ((art_anim(obj_art_fid(self_obj)) == 48) or (art_anim(obj_art_fid(self_obj)) == 49)) then begin
                critter_injure(self_obj, 2 bwor 8388608);
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                if (art_anim(obj_art_fid(self_obj)) == 48) then begin
                    reg_anim_animate(self_obj, 37, -1);
                end
                else begin
                    reg_anim_animate(self_obj, 36, -1);
                end
                reg_anim_func(3, 0);
            end
            else begin
                if (tile_distance(tile_num(self_obj), local_var(3)) < max_distance) then begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(5, 12)), -1);
                    reg_anim_func(3, 0);
                end
                else begin
                    if (tile_num(self_obj) != tile_num_in_direction(local_var(3), random(0, 5), random(2, 10))) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), tile_num_in_direction(local_var(3), random(0, 5), random(2, 10))) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), tile_num_in_direction(local_var(3), random(0, 5), random(2, 10))), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(local_var(3), random(0, 5), random(2, 10)), -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
            end
        end
        else begin
            if (tile_num(self_obj) != local_var(3)) then begin
                if (tile_distance(tile_num(self_obj), local_var(3)) >= 35) then begin
                    if (tile_num(self_obj) != tile_num_in_direction(local_var(3), random(0, 5), random(2, 6))) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), tile_num_in_direction(local_var(3), random(0, 5), random(2, 6))) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), tile_num_in_direction(local_var(3), random(0, 5), random(2, 6))), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(local_var(3), random(0, 5), random(2, 6)), -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                else begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    reg_anim_obj_move_to_tile(self_obj, local_var(3), -1);
                    if (random(1, 2) == 1) then begin
                        reg_anim_animate_reverse(self_obj, 36, -1);
                        reg_anim_animate(self_obj, 49, -1);
                    end
                    else begin
                        reg_anim_animate_reverse(self_obj, 37, -1);
                        reg_anim_animate(self_obj, 48, -1);
                    end
                    reg_anim_func(3, 0);
                    critter_injure(self_obj, 2);
                end
            end
            else begin
                if ((art_anim(obj_art_fid(self_obj)) != 48) and (art_anim(obj_art_fid(self_obj)) != 49)) then begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    if (random(1, 2) == 1) then begin
                        reg_anim_animate_reverse(self_obj, 36, -1);
                        reg_anim_animate(self_obj, 49, -1);
                    end
                    else begin
                        reg_anim_animate_reverse(self_obj, 37, -1);
                        reg_anim_animate(self_obj, 48, -1);
                    end
                    reg_anim_func(3, 0);
                    critter_injure(self_obj, 2);
                end
            end
        end
        animation_is_called := 0;
        if (random(0, 100) <= 25) then begin
            float_msg(self_obj, message_str(SCRIPT_SJZPATRL, random(10, 13)), FLOAT_MSG_NORMAL);
        end
    end
end
