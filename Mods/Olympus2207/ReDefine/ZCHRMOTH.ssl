variable animation_is_called;
variable max_distance;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure destroy_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;


procedure start
begin
    if (local_var(4) == 0) then begin
        set_local_var(6, tile_num(self_obj));
        set_local_var(4, 1);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 201);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GENERIC_CHIMERA);
        add_obj_to_inven(self_obj, create_object(514, 1, 2));
        add_obj_to_inven(self_obj, create_object(515, 1, 2));
        wield_obj(obj_carrying_pid_obj(self_obj, 515));
        max_distance := random(15, 20);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(10, 30), 1);
    end
    if (local_var(7) == 1) then begin
        if ((tile_distance(dude_tile, tile_num(self_obj)) > 3) and (tile_distance(dude_tile, tile_num(self_obj)) <= 7)) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), random(2, 4)), 0);
        end
        else begin
            if (tile_distance(dude_tile, tile_num(self_obj)) > 7) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), random(2, 4)), 1);
            end
        end
    end
    if (((game_time_in_seconds - local_var(8)) >= (3600 * 24 * 8)) and (global_var(GVAR_CATTLE_DRIVE_CARAVAN) == 1)) then begin
        set_global_var(GVAR_CATTLE_DRIVE_CARAVAN, 0);
        set_local_var(7, 0);
    end
    if ((not(global_var(GVAR_CATTLE_DRIVE_CARAVAN)) == 1) and (local_var(7) == 1)) then begin
        set_local_var(7, 2);
    end
    if ((obj_can_see_obj(self_obj, dude_obj) == 1) and (local_var(7) == 0) and not(combat_is_initialized)) then begin
        set_local_var(5, 1);
    end
    if (local_var(5) == 1) then begin
        set_local_var(5, 0);
        attack_setup(self_obj, dude_obj);
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure pickup_p_proc
begin
    script_overrides;
end

procedure push_p_proc
begin
    if (local_var(7) != 1) then begin
        script_overrides;
        attack_setup(self_obj, dude_obj);
    end
end

procedure destroy_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (global_var(GVAR_CATTLE_DRIVE_CARAVAN) == 1) then begin
        set_global_var(GVAR_CATTLE_DRIVE_CARAVAN, 0);
    end
    LVar0 := obj_carrying_pid_obj(self_obj, 514);
    LVar1 := obj_carrying_pid_obj(self_obj, 515);
    if (LVar0) then begin
        rm_obj_from_inven(self_obj, LVar0);
        destroy_object(LVar0);
    end
    if (LVar1) then begin
        rm_obj_from_inven(self_obj, LVar1);
        destroy_object(LVar1);
    end
end

procedure use_obj_on_p_proc
begin
    if ((obj_pid(obj_being_used_with) == 343) and (local_var(7) == 0)) then begin
        script_overrides;
        rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 343));
        party_add(self_obj);
        set_local_var(7, 1);
        set_global_var(GVAR_CATTLE_DRIVE_CARAVAN, 1);
        set_local_var(8, game_time_in_seconds);
        play_sfx("Bsti11AO");
        terminate_combat;
        display_msg(message_str(SCRIPT_STTEXT, 866));
    end
    else begin
        if (local_var(7) != 1) then begin
            script_overrides;
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure use_skill_on_p_proc
begin
    script_overrides;
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 1);
    end
end

procedure map_enter_p_proc
begin
    max_distance := random(6, 8);
    if (CUR_MAP_OLENGNR) then begin
        set_map_var(0, self_obj);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (not(combat_is_initialized) and (local_var(7) == 0)) then begin
            if (tile_distance(tile_num(self_obj), local_var(6)) < 8) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(floor(max_distance / 2), max_distance)), 0);
            end
            else begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), local_var(6)), random(floor(max_distance / 2), max_distance)), 0);
            end
        end
        animation_is_called := 0;
    end
end
