variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable starting_attack;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 15);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_RAIDER_BERSERK);
        if (random(0, 2) == 1) then begin
            art_change_fid_num(self_obj, 16777258);
        end
        else begin
            if (random(0, 1) == 1) then begin
                art_change_fid_num(self_obj, 16777244);
            end
        end
        if (random(0, 2) == 1) then begin
            art_change_fid_num(self_obj, 16777312);
        end
        if (random(0, 1) == 0) then begin
            if (random(0, 100) <= 40) then begin
                add_obj_to_inven(self_obj, create_object(167, 1, 2));
                add_mult_objs_to_inven(self_obj, create_object(2, 1, 2), random(21, 38));
            end
            else begin
                if (random(0, 100) <= 40) then begin
                    add_obj_to_inven(self_obj, create_object(137, 1, 2));
                end
                else begin
                    add_obj_to_inven(self_obj, create_object(136, 1, 2));
                end
                add_mult_objs_to_inven(self_obj, create_object(21, 1, 2), random(2, 4));
            end
            if (random(0, 100) <= 33) then begin
                add_obj_to_inven(self_obj, create_object(109, 1, 2));
            end
            else begin
                add_obj_to_inven(self_obj, create_object(110, 1, 2));
            end
            if (random(0, 100) <= 33) then begin
                add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(5, 20));
            end
            if (random(0, 100) <= 25) then begin
                add_mult_objs_to_inven(self_obj, create_object(238, 1, 2), random(2, 5));
            end
            if (random(0, 100) <= 15) then begin
                add_obj_to_inven(self_obj, create_object(225, 1, 2));
            end
            if (random(0, 100) <= 15) then begin
                add_obj_to_inven(self_obj, create_object(227, 1, 2));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object(236, 1, 2));
            end
            if (random(0, 100) <= 9) then begin
                add_obj_to_inven(self_obj, create_object(39, 1, 2));
            end
            if (random(0, 100) <= 8) then begin
                add_obj_to_inven(self_obj, create_object(227, 1, 2));
            end
            if (random(0, 100) <= 7) then begin
                add_obj_to_inven(self_obj, create_object(239, 1, 2));
            end
            if (random(0, 100) <= 6) then begin
                add_obj_to_inven(self_obj, create_object(232, 1, 2));
            end
        end
        else begin
            if (random(0, 100) <= 33) then begin
                add_obj_to_inven(self_obj, create_object(151, 1, 2));
                add_mult_objs_to_inven(self_obj, create_object(9, 1, 2), random(14, 26));
                wield_obj(obj_carrying_pid_obj(self_obj, 151));
            end
            else begin
                add_obj_to_inven(self_obj, create_object(152, 1, 2));
                add_mult_objs_to_inven(self_obj, create_object(2, 1, 2), random(16, 29));
                wield_obj(obj_carrying_pid_obj(self_obj, 152));
            end
            if (random(0, 100) <= 33) then begin
                add_obj_to_inven(self_obj, create_object(215, 1, 2));
            end
            else begin
                add_obj_to_inven(self_obj, create_object(109, 1, 2));
            end
            if (random(0, 100) <= 33) then begin
                add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(10, 40));
            end
            if (random(0, 100) <= 25) then begin
                add_mult_objs_to_inven(self_obj, create_object(220, 1, 2), random(1, 3));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object(66, 1, 2));
            end
            if (random(0, 100) <= 9) then begin
                add_obj_to_inven(self_obj, create_object(431, 1, 2));
            end
            if (random(0, 100) <= 8) then begin
                add_obj_to_inven(self_obj, create_object(427, 1, 2));
            end
            if (random(0, 100) <= 7) then begin
                add_obj_to_inven(self_obj, create_object(226, 1, 2));
            end
            if (random(0, 100) <= 6) then begin
                add_obj_to_inven(self_obj, create_object(229, 1, 2));
            end
        end
    end
end

procedure critter_p_proc
begin
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 5);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (not(is_loading_game) == 1) then begin
        if (global_var(GVAR_ENEMY_DUNTON) != 0) then begin
            move_to(self_obj, tile_num_in_direction(tile_num_in_direction(dude_tile, random(0, 2), random(7, 8)), random(0, 5), random(1, 2)), 0);
            anim(self_obj, 1000, 4);
            add_timer_event(self_obj, random(12, 18), 1);
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        attack_setup(self_obj, dude_obj);
    end
end
