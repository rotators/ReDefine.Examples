variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable sat_critter;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node025;
procedure Node026;
procedure Node026a;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node010;
procedure Node043a;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure NodeQE1;
procedure Node999;
procedure Node998;
procedure Node998Mat;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(70, 75));
        set_local_var(5, random(50, 60));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 8);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_MAN_NORMAL);
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object(414, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_mult_objs_to_inven(self_obj, create_object(238, 1, 2), random(1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_mult_objs_to_inven(self_obj, create_object(213, 1, 2), random(1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(236, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(420, 1, 2));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object(218, 1, 2));
        end
        if (random(0, 100) <= 7) then begin
            add_obj_to_inven(self_obj, create_object(70, 1, 2));
        end
        if (random(0, 100) <= 6) then begin
            add_obj_to_inven(self_obj, create_object(106, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(244, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(242, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(422, 1, 2));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object(423, 1, 2));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object(426, 1, 2));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object(433, 1, 2));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object(421, 1, 2));
        end
        if (random(0, 100) <= 20) then begin
            add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(1, 10));
        end
        if (random(0, 100) <= 15) then begin
            add_mult_objs_to_inven(self_obj, create_object(238, 1, 2), random(1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_mult_objs_to_inven(self_obj, create_object(213, 1, 2), random(1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object(35, 1, 2));
        end
        if (random(0, 100) <= 14) then begin
            add_obj_to_inven(self_obj, create_object(65, 1, 2));
        end
        if (random(0, 100) <= 13) then begin
            add_obj_to_inven(self_obj, create_object(218, 1, 2));
        end
        if (random(0, 100) <= 12) then begin
            add_obj_to_inven(self_obj, create_object(70, 1, 2));
        end
        if (random(0, 100) <= 11) then begin
            add_obj_to_inven(self_obj, create_object(106, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(244, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(242, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(414, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(422, 1, 2));
        end
        if (random(0, 100) <= 9) then begin
            add_obj_to_inven(self_obj, create_object(423, 1, 2));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object(426, 1, 2));
        end
        if (random(0, 100) <= 7) then begin
            add_obj_to_inven(self_obj, create_object(433, 1, 2));
        end
        if (random(0, 100) <= 6) then begin
            add_obj_to_inven(self_obj, create_object(421, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(427, 1, 2));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object(236, 1, 2));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object(74, 1, 2));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, 1000, 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, 1000, 2);
    end
    if ((map_var(6) == 10) and (global_var(GVAR_SIERRA_BASE_ENEMY) == 1) and (local_var(8) == 1)) then begin
        set_local_var(8, 0);
    end
    if ((tile_num(self_obj) == local_var(3)) and (obj_get_rot(self_obj) != 3)) then begin
        anim(self_obj, 1000, 3);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_VAULT_CITY) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
    script_overrides;
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    end
    if (local_var(8) == 1) then begin
        if (local_var(12) == 1) then begin
            float_msg(self_obj, mstr(random(28, 29)), FLOAT_MSG_NORMAL);
        end
        else begin
            if (map_var(9) == 1) then begin
                float_msg(self_obj, mstr(random(35, 36)), FLOAT_MSG_NORMAL);
            end
            else begin
                if (global_var(GVAR_SIERRA_BASE_ENEMY) == 2) then begin
                    float_msg(self_obj, mstr(random(37, 38)), FLOAT_MSG_NORMAL);
                end
                else begin
                    float_msg(self_obj, mstr(39), FLOAT_MSG_NORMAL);
                end
            end
        end
    end
    else begin
        start_gdialog(203, self_obj, -1, -1, -1);
        gsay_start;
        if (map_var(6) == 10) then begin
            call Node052();
        end
        else begin
            if (local_var(7) == 0) then begin
                call Node001();
            end
            else begin
                call Node010();
            end
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        if ((50 == 50) or (50 == 59)) then begin
            set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) - 3);
        end
        else begin
            set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) - 6);
        end
    end
    set_global_var(GVAR_MODOC_TOOL_FLAG, global_var(GVAR_MODOC_TOOL_FLAG) bwor 4096);
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (not(is_loading_game) == 1) then begin
        if (tile_num(self_obj) != local_var(3)) then begin
            move_to(self_obj, local_var(3), elevation(self_obj));
        end
        if (local_var(10) == 1) then begin
            set_global_var(GVAR_BH_CARAVAN, 1);
            move_to(self_obj, 13468, 0);
            anim(self_obj, 1000, 3);
            critter_heal(self_obj, -100);
            set_global_var(GVAR_MODOC_TOOL_FLAG, global_var(GVAR_MODOC_TOOL_FLAG) bwor 4096);
        end
        if ((map_var(9) == 1) and (global_var(GVAR_SIERRA_BASE_ENEMY) == 1) and (local_var(8) == 1) and (days_since_visited >= 3)) then begin
            set_local_var(8, 0);
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
    end
    if (fixed_param == 9) then begin
        animate_move_obj_to_tile(self_obj, 13066, 0);
        add_timer_event(self_obj, 20, 91);
    end
    if (fixed_param == 91) then begin
        animate_move_obj_to_tile(self_obj, 13066, 0);
        fadeOut(800);
        move_to(self_obj, 13066, elevation(self_obj));
        anim(self_obj, 1000, 3);
        game_ui_enable;
        fadeIn(800);
    end
    if (fixed_param == 10) then begin
        fadeOut(800);
        move_to(self_obj, 18477, 0);
        move_to(dude_obj, 18677, 0);
        anim(self_obj, 1000, 5);
        anim(dude_obj, 1000, 5);
        metarule3(METARULE3_TILE_SET_CENTER, dude_tile, elevation(self_obj), 0);
        fadeIn(800);
        add_timer_event(self_obj, 10, 11);
    end
    if (fixed_param == 11) then begin
        sat_critter := tile_contains_pid_obj(17877, elevation(self_obj), 16777317);
        float_msg(sat_critter, mstr(17), FLOAT_MSG_NORMAL);
        float_msg(self_obj, " ", FLOAT_MSG_NORMAL);
        add_timer_event(self_obj, 30, 12);
    end
    if (fixed_param == 12) then begin
        sat_critter := tile_contains_pid_obj(17877, elevation(self_obj), 16777317);
        float_msg(sat_critter, " ", FLOAT_MSG_NORMAL);
        float_msg(self_obj, mstr(18), FLOAT_MSG_NORMAL);
        add_timer_event(self_obj, 30, 13);
    end
    if (fixed_param == 13) then begin
        sat_critter := tile_contains_pid_obj(17877, elevation(self_obj), 16777317);
        float_msg(sat_critter, mstr(19), FLOAT_MSG_NORMAL);
        float_msg(self_obj, " ", FLOAT_MSG_NORMAL);
        add_timer_event(self_obj, 30, 14);
    end
    if (fixed_param == 14) then begin
        sat_critter := tile_contains_pid_obj(17877, elevation(self_obj), 16777317);
        float_msg(sat_critter, "", FLOAT_MSG_NORMAL);
        float_msg(self_obj, mstr(25), FLOAT_MSG_NORMAL);
        add_timer_event(self_obj, 15, 15);
    end
    if (fixed_param == 15) then begin
        play_sfx("HMXXXXAQ");
        reg_anim_func(2, dude_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(dude_obj, 16, -1);
        reg_anim_func(3, 0);
        add_timer_event(self_obj, 2, 16);
    end
    if (fixed_param == 16) then begin
        play_sfx("HMXXXXAP");
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 15, -1);
        reg_anim_func(3, 0);
        add_timer_event(self_obj, 6, 17);
    end
    if (fixed_param == 17) then begin
        sat_critter := tile_contains_pid_obj(17877, elevation(self_obj), 16777317);
        float_msg(sat_critter, "", FLOAT_MSG_NORMAL);
        float_msg(self_obj, mstr(26), FLOAT_MSG_NORMAL);
        add_timer_event(self_obj, 20, 18);
    end
    if (fixed_param == 18) then begin
        sat_critter := tile_contains_pid_obj(17877, elevation(self_obj), 16777317);
        float_msg(sat_critter, mstr(27), FLOAT_MSG_NORMAL);
        float_msg(self_obj, " ", FLOAT_MSG_NORMAL);
        add_timer_event(self_obj, 30, 9);
        set_local_var(12, 1);
        set_local_var(8, 1);
        set_map_var(7, 10);
    end
end

procedure Node001
begin
    already_talk := 1;
    Reply(10);
    if (dude_perception >= 6) then begin
        giq_option(1, NAME, 11, Node031, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 12, Node002, NEUTRAL_REACTION);
    if (dude_perception >= 6) then begin
        giq_option(1, NAME, 13, Node031, NEUTRAL_REACTION);
    end
    if (map_var(4) == 1) then begin
        giq_option(1, NAME, 14, Node045, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 15, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    set_local_var(7, 1);
    Reply(24);
    giq_option(1, NAME, mstr(20) + dude_name + mstr(21), Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 22, Node004, NEUTRAL_REACTION);
    giq_option(1, NAME, 23, Node005, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(mstr(30) + dude_name + mstr(31));
    giq_option(1, NAME, 32, Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 33, Node030, NEUTRAL_REACTION);
    giq_option(1, NAME, 34, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(40);
    giq_option(1, NAME, 41, Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 42, Node030, NEUTRAL_REACTION);
    giq_option(1, NAME, 43, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(50);
    giq_option(1, NAME, 51, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 52, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(60);
    giq_option(1, NAME, 61, Node007, NEUTRAL_REACTION);
    giq_option(1, NAME, 62, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 63, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    set_map_var(8, 1);
    Reply(70);
    giq_option(1, NAME, 71, Node008, NEUTRAL_REACTION);
    if (map_var(10) == 1) then begin
        giq_option(1, NAME, 72, Node017, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 73, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(82);
    giq_option(1, NAME, 80, Node009, NEUTRAL_REACTION);
    giq_option(1, NAME, 81, Node039, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(90);
    giq_option(1, NAME, 91, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 92, Node011, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(110);
    giq_option(1, NAME, 111, Node012, NEUTRAL_REACTION);
    giq_option(1, NAME, 112, Node014, NEUTRAL_REACTION);
    giq_option(1, NAME, 113, Node015, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(120);
    giq_option(1, NAME, 121, Node014, NEUTRAL_REACTION);
    giq_option(1, NAME, 122, Node015, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(131);
    giq_option(1, NAME, 132, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 133, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(140);
    giq_option(1, NAME, 141, Node021, NEUTRAL_REACTION);
    giq_option(1, NAME, 142, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    set_map_var(9, 1);
    Reply(150);
    giq_option(1, NAME, 151, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(160);
    giq_option(1, NAME, 161, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 162, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(170);
    giq_option(1, NAME, 171, Node016, NEUTRAL_REACTION);
    if (map_var(4) == 1) then begin
        giq_option(1, NAME, 172, Node018, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 173, Node019, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(180);
    giq_option(1, NAME, 181, Node009, NEUTRAL_REACTION);
    giq_option(1, NAME, 182, Node039, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(190);
    giq_option(1, NAME, 191, Node015, NEUTRAL_REACTION);
    if ((map_var(4) == 1) and (local_var(9) == 0)) then begin
        giq_option(1, NAME, 192, Node023, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 193, Node009, NEUTRAL_REACTION);
    giq_option(1, NAME, 194, Node039, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(200);
    giq_option(1, NAME, 201, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(210);
    giq_option(1, NAME, 211, Node022, NEUTRAL_REACTION);
    if (global_var(GVAR_NEW_RENO_WRIGHT_FLAGS) == 1) then begin
        giq_option(1, NAME, 212, Node051, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 213, Node999, NEUTRAL_REACTION);
end

procedure Node022
begin
    set_map_var(7, 1);
    Reply(220);
    giq_option(1, NAME, 221, Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    set_local_var(9, 1);
    Reply(230);
    giq_option(1, NAME, 231, Node025, NEUTRAL_REACTION);
    giq_option(1, NAME, 232, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    if (dude_skill(SKILL_SPEECH) >= 55) then begin
        Reply(250);
    end
    else begin
        Reply(251);
    end
    if (dude_skill(SKILL_SPEECH) >= 55) then begin
        giq_option(1, NAME, 252, Node026a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 253, Node998Mat, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 254, Node026, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(265);
    giq_option(1, NAME, 266, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 267, Node999, NEUTRAL_REACTION);
end

procedure Node026a
begin
    Reply(260);
    giq_option(1, NAME, 261, Node027, NEUTRAL_REACTION);
    giq_option(1, NAME, 262, Node028, NEUTRAL_REACTION);
    giq_option(1, NAME, 263, Node029, NEUTRAL_REACTION);
    giq_option(1, NAME, 264, Node029, NEUTRAL_REACTION);
end

procedure Node027
begin
    set_map_var(9, 1);
    item_caps_adjust(dude_obj, 500);
    Reply(270);
    giq_option(1, NAME, 271, Node999, NEUTRAL_REACTION);
end

procedure Node028
begin
    set_map_var(9, 1);
    item_caps_adjust(dude_obj, 1000);
    Reply(280);
    giq_option(1, NAME, 281, Node999, NEUTRAL_REACTION);
end

procedure Node029
begin
    set_local_var(10, 1);
    set_map_var(9, 1);
    Reply(290);
    giq_option(1, NAME, 291, Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(300);
    giq_option(1, NAME, 301, Node035, NEUTRAL_REACTION);
    giq_option(1, NAME, 302, Node999, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(310);
    giq_option(1, NAME, 311, Node032, NEUTRAL_REACTION);
    giq_option(1, NAME, 312, Node033, NEUTRAL_REACTION);
end

procedure Node032
begin
    if (local_var(11) == 0) then begin
        set_local_var(11, 1);
        set_pc_extra_stat(7, get_pc_extra_stat(7) + 5);
        play_sfx("LEVELUP");
        display_mstr(16);
    end
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
    end
    Reply(320);
    giq_option(1, NAME, 321, Node037, NEUTRAL_REACTION);
    giq_option(1, NAME, 322, Node037, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(331);
    giq_option(1, NAME, 332, Node034, NEUTRAL_REACTION);
    giq_option(1, NAME, 333, Node032, NEUTRAL_REACTION);
    giq_option(1, NAME, 334, Node999, NEUTRAL_REACTION);
end

procedure Node034
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
    end
    Reply(340);
    giq_option(1, NAME, 341, Node035, NEUTRAL_REACTION);
    giq_option(1, NAME, 342, Node999, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(350);
    giq_option(1, NAME, 351, Node036, NEUTRAL_REACTION);
    giq_option(1, NAME, 352, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 353, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 354, Node999, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(360);
    if (map_var(5) == 0) then begin
        giq_option(1, NAME, 361, Node040, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 362, Node039, NEUTRAL_REACTION);
end

procedure Node037
begin
    Reply(370);
    giq_option(1, NAME, 371, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 372, Node039, NEUTRAL_REACTION);
end

procedure Node038
begin
    Reply(380);
    giq_option(1, NAME, 381, Node036, NEUTRAL_REACTION);
    giq_option(1, NAME, 382, Node039, NEUTRAL_REACTION);
end

procedure Node039
begin
    Reply(390);
    giq_option(1, NAME, 391, Node035, NEUTRAL_REACTION);
    if (map_var(8) == 1) then begin
        giq_option(1, NAME, 392, Node009, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 393, Node006, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 394, Node999, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(400);
    giq_option(1, NAME, 401, Node041, NEUTRAL_REACTION);
    giq_option(1, NAME, 402, Node042, NEUTRAL_REACTION);
end

procedure Node041
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
    end
    Reply(410);
    giq_option(1, NAME, 411, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 412, Node042, NEUTRAL_REACTION);
end

procedure Node042
begin
    Reply(420);
    giq_option(1, NAME, 421, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 422, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 423, Node999, NEUTRAL_REACTION);
end

procedure Node043
begin
    set_map_var(5, 1);
    Reply(430);
    giq_option(1, NAME, 431, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    if (map_var(9) == 1) then begin
        set_local_var(8, 1);
        Reply(100);
        giq_option(1, NAME, 102, Node999, NEUTRAL_REACTION);
    end
    else begin
        Reply(105);
        if ((map_var(4) == 1) or (map_var(6) == 1)) then begin
            giq_option(1, NAME, 101, Node043a, NEUTRAL_REACTION);
        end
        giq_option(1, NAME, 103, Node039, NEUTRAL_REACTION);
        if (map_var(5) == 1) then begin
            giq_option(1, NAME, 104, Node047, NEUTRAL_REACTION);
        end
        giq_option(1, NAME, 102, Node999, NEUTRAL_REACTION);
    end
end

procedure Node043a
begin
    Reply(432);
    if (map_var(4) == 1) then begin
        giq_option(1, NAME, 433, Node025, NEUTRAL_REACTION);
    end
    if (map_var(6) == 1) then begin
        giq_option(1, NAME, 434, Node012, NEUTRAL_REACTION);
    end
    if ((map_var(6) == 1) and (global_var(GVAR_NEW_RENO_WRIGHT_FLAGS) == 1)) then begin
        giq_option(1, NAME, 435, Node044, NEUTRAL_REACTION);
    end
end

procedure Node044
begin
    Reply(440);
    giq_option(1, NAME, 441, NodeQE1, NEUTRAL_REACTION);
end

procedure Node045
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
    end
    Reply(450);
    giq_option(1, NAME, 451, Node046, NEUTRAL_REACTION);
    giq_option(1, NAME, 453, Node999, NEUTRAL_REACTION);
end

procedure Node046
begin
    set_map_var(8, 1);
    Reply(460);
    giq_option(1, NAME, 461, Node009, NEUTRAL_REACTION);
    giq_option(1, NAME, 462, Node999, NEUTRAL_REACTION);
end

procedure Node047
begin
    Reply(470);
    if (global_var(GVAR_PARTY_CHILDKILLER) == 1) then begin
        giq_option(1, NAME, 474, Node048, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 472, Node050, NEUTRAL_REACTION);
end

procedure Node048
begin
    Reply(480);
    giq_option(1, NAME, 481, Node049, NEUTRAL_REACTION);
end

procedure Node049
begin
    set_map_var(5, 0);
    Reply(490);
    giq_option(1, NAME, 491, Node999, NEUTRAL_REACTION);
end

procedure Node050
begin
    Reply(500);
    giq_option(1, NAME, 501, Node999, NEUTRAL_REACTION);
end

procedure Node051
begin
    set_map_var(7, 1);
    Reply(510);
    giq_option(1, NAME, 511, Node999, NEUTRAL_REACTION);
end

procedure Node052
begin
    if (global_var(GVAR_SIERRA_BASE_ENEMY) == 1) then begin
        set_global_var(GVAR_SIERRA_BASE_ENEMY, 2);
    end
    if (local_var(13) == 0) then begin
        set_local_var(13, 1);
        give_exp_points(floor(863 / 5) + (dude_iq * floor(863 / 12)) + (dude_luck * floor(863 / 30)) + (floor(863 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(863 / 5) + (dude_iq * floor(863 / 12)) + (dude_luck * floor(863 / 30)) + (floor(863 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
        add_obj_to_inven(dude_obj, create_object(240, 1, 2));
        add_obj_to_inven(dude_obj, create_object(137, 1, 2));
    end
    if (local_var(8) != 1) then begin
        set_local_var(8, 1);
    end
    Reply(520);
    giq_option(1, NAME, 523, Node999, NEUTRAL_REACTION);
end

procedure Node053
begin
    Reply(530);
    Reply(531);
    giq_option(1, NAME, 532, Node999, NEUTRAL_REACTION);
end

procedure Node054
begin
    Reply(540);
    Reply(541);
    giq_option(1, NAME, 542, Node999, NEUTRAL_REACTION);
end

procedure NodeQE1
begin
    game_ui_disable;
    add_timer_event(self_obj, 8, 10);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure Node998Mat
begin
    add_obj_to_inven(self_obj, create_object(136, 1, 2));
    add_mult_objs_to_inven(self_obj, create_object(20, 1, 2), random(12, 24));
    wield_obj(obj_carrying_pid_obj(self_obj, 136));
    attack_setup(self_obj, dude_obj);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end
