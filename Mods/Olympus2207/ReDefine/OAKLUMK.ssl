variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node014a;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(80, 90));
        set_local_var(5, random(10, 20));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 10);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PRIMITIVE_STUPID_MALE);
        if (random(0, 100) <= 20) then begin
            add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(1, 10));
        end
        if (random(0, 100) <= 10) then begin
            add_mult_objs_to_inven(self_obj, create_object(220, 1, 2), random(1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_mult_objs_to_inven(self_obj, create_object(217, 1, 2), random(1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object(36, 1, 2));
        end
        if (random(0, 100) <= 14) then begin
            add_obj_to_inven(self_obj, create_object(65, 1, 2));
        end
        if (random(0, 100) <= 12) then begin
            add_obj_to_inven(self_obj, create_object(71, 1, 2));
        end
        if (random(0, 100) <= 11) then begin
            add_obj_to_inven(self_obj, create_object(138, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(47, 1, 2));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object(226, 1, 2));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object(225, 1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object(420, 1, 2));
        end
        if (random(0, 100) <= 9) then begin
            add_obj_to_inven(self_obj, create_object(243, 1, 2));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object(423, 1, 2));
        end
        if (random(0, 100) <= 7) then begin
            add_obj_to_inven(self_obj, create_object(426, 1, 2));
        end
        if (random(0, 100) <= 6) then begin
            add_obj_to_inven(self_obj, create_object(110, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(421, 1, 2));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object(427, 1, 2));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object(77, 1, 2));
        end
        add_obj_to_inven(self_obj, create_object(71, 1, 2));
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(25, 75), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, 1000, 2);
    end
    if (map_var(1) == 3) then begin
        set_map_var(1, 4);
        add_timer_event(self_obj, 10, 3);
    end
    if (critter_is_fleeing(self_obj) and (map_var(1) == 5)) then begin
        set_map_var(1, 0);
        set_global_var(GVAR_HOLODISK_MB_LEVEL_4, 1);
        set_local_var(2, 0);
        float_msg(self_obj, mstr(172), FLOAT_MSG_NORMAL);
        terminate_combat;
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_NEW_RENO) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
    if (critter_is_fleeing(self_obj) and (map_var(1) == 5)) then begin
        set_map_var(1, 0);
        set_global_var(GVAR_HOLODISK_MB_LEVEL_4, 1);
        set_local_var(2, 0);
        float_msg(self_obj, mstr(172), FLOAT_MSG_NORMAL);
        terminate_combat;
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
    script_overrides;
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    end
    start_gdialog(288, self_obj, -1, -1, -1);
    gsay_start;
    if (map_var(1) == 4) then begin
        call Node015();
    end
    else begin
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_MODOC_SLAUGHTER_BESS_TIME, global_var(GVAR_MODOC_SLAUGHTER_BESS_TIME) bwor 256);
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        if ((55 == 50) or (55 == 59)) then begin
            set_global_var(GVAR_TOWN_REP_NEW_RENO, global_var(GVAR_TOWN_REP_NEW_RENO) - 3);
        end
        else begin
            set_global_var(GVAR_TOWN_REP_NEW_RENO, global_var(GVAR_TOWN_REP_NEW_RENO) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (get_critter_stat(self_obj, STAT_current_hp) >= 15) then begin
            set_local_var(2, 1);
        end
        else begin
            if (map_var(1) != 0) then begin
                set_map_var(1, 0);
                set_global_var(GVAR_HOLODISK_MB_LEVEL_4, 1);
                set_local_var(2, 0);
                float_msg(self_obj, mstr(172), FLOAT_MSG_NORMAL);
                terminate_combat;
            end
        end
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 400);
        dialogue_system_enter;
    end
end

procedure Node001
begin
    Reply(10);
    giq_option(1, NAME, 11, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 12, Node012, NEUTRAL_REACTION);
    giq_option(1, NAME, 13, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    if (global_var(GVAR_HOLODISK_MB_LEVEL_4) == 0) then begin
        Reply(1001);
        giq_option(1, NAME, 101, Node012, NEUTRAL_REACTION);
        giq_option(1, NAME, 102, Node014, NEUTRAL_REACTION);
        giq_option(1, NAME, 103, Node999, NEUTRAL_REACTION);
    end
    else begin
        Reply(1002);
        giq_option(1, NAME, 104, Node012, NEUTRAL_REACTION);
        giq_option(1, NAME, 105, Node999, NEUTRAL_REACTION);
    end
end

procedure Node011
begin
    if (global_var(GVAR_HOLODISK_MB_LEVEL_4) == 0) then begin
        Reply(1101);
        giq_option(1, NAME, 111, Node013, NEUTRAL_REACTION);
        giq_option(1, NAME, 112, Node014, NEUTRAL_REACTION);
        giq_option(1, NAME, 113, Node999, NEUTRAL_REACTION);
    end
    else begin
        Reply(1102);
        giq_option(1, NAME, 114, Node013, NEUTRAL_REACTION);
        giq_option(1, NAME, 115, Node999, NEUTRAL_REACTION);
    end
end

procedure Node012
begin
    Reply(120);
    giq_option(1, NAME, 121, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 122, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(130);
    giq_option(1, NAME, 131, Node012, NEUTRAL_REACTION);
    if (global_var(GVAR_HOLODISK_MB_LEVEL_4) == 0) then begin
        giq_option(1, NAME, 132, Node014, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 133, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(140);
    if (not((global_var(GVAR_MODOC_SLAUGHTER_BESS_TIME) bwand 128) != 0)) then begin
        giq_option(1, NAME, 141, Node014a, NEUTRAL_REACTION);
        giq_option(1, NAME, 142, Node014a, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 143, Node998, NEUTRAL_REACTION);
end

procedure Node014a
begin
    set_map_var(1, 1);
    call Node999();
end

procedure Node015
begin
    set_map_var(1, 5);
    Reply(150);
    if ((get_critter_stat(dude_obj, STAT_ag) >= 7) and (dude_strength >= 7)) then begin
        giq_option(1, NAME, 151, Node016, NEUTRAL_REACTION);
    end
    if ((dude_strength >= 7) and (dude_skill(SKILL_UNARMED_COMBAT) >= 90)) then begin
        giq_option(1, NAME, 152, Node017, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 153, Node998, NEUTRAL_REACTION);
    giq_option(1, NAME, 154, Node998, NEUTRAL_REACTION);
end

procedure Node016
begin
    critter_heal(self_obj, 10);
    play_sfx("HMXXXXBD");
    Reply(160);
    giq_option(1, NAME, 161, Node998, NEUTRAL_REACTION);
end

procedure Node017
begin
    critter_heal(self_obj, 25);
    play_sfx("HMXXXXBI");
    critter_mod_skill(self_obj, SKILL_UNARMED_COMBAT, -45);
    critter_mod_skill(self_obj, SKILL_MELEE, -45);
    critter_injure(self_obj, 2048);
    Reply(170);
    giq_option(1, NAME, 171, Node998, NEUTRAL_REACTION);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end
