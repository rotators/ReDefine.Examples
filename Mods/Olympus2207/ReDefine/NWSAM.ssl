variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable trading_container;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node053a;
procedure Node053b;
procedure Node054;
procedure Node055;
procedure Node056;
procedure Node057;
procedure Node057a;
procedure Node058;
procedure Node059;
procedure Node060;
procedure Node061;
procedure Node062;
procedure Node063;
procedure Node064;
procedure Node065;
procedure Node065a;
procedure Node066;
procedure Node067;
procedure Node068;
procedure Node069;
procedure Node070;
procedure Node071;
procedure Node072;
procedure Node073;
procedure Node074;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(60, 70));
        set_local_var(5, random(30, 40));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 8);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_UNDEAD_NORMAL);
        if (random(0, 100) <= 40) then begin
            add_obj_to_inven(self_obj, create_object(146, 1, 2));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(65, 1, 2));
        end
        if (random(0, 100) <= 40) then begin
            add_obj_to_inven(self_obj, create_object(108, 1, 2));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(139, 1, 2));
        end
        if (random(0, 100) <= 40) then begin
            add_obj_to_inven(self_obj, create_object(214, 1, 2));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(63, 1, 2));
        end
        if (random(0, 100) <= 60) then begin
            add_obj_to_inven(self_obj, create_object(67, 1, 2));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(132, 1, 2));
        end
        if (random(0, 100) <= 50) then begin
            add_obj_to_inven(self_obj, create_object(147, 1, 2));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(38, 1, 2));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object(226, 1, 2));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object(225, 1, 2));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object(227, 1, 2));
        end
        if (random(0, 100) <= 70) then begin
            add_mult_objs_to_inven(self_obj, create_object(2, 1, 2), random(5, 40));
        end
        if (random(0, 100) <= 70) then begin
            add_mult_objs_to_inven(self_obj, create_object(5, 1, 2), random(5, 40));
        end
        if (random(0, 100) <= 50) then begin
            add_mult_objs_to_inven(self_obj, create_object(7, 1, 2), random(5, 40));
        end
        if (random(0, 100) <= 50) then begin
            add_mult_objs_to_inven(self_obj, create_object(9, 1, 2), random(5, 40));
        end
        if (random(0, 100) <= 70) then begin
            add_mult_objs_to_inven(self_obj, create_object(14, 1, 2), random(5, 40));
        end
        if (random(0, 100) <= 50) then begin
            add_mult_objs_to_inven(self_obj, create_object(33, 1, 2), random(1, 3));
        end
        if (random(0, 100) <= 50) then begin
            add_mult_objs_to_inven(self_obj, create_object(25, 1, 2), random(2, 6));
        end
        if (random(0, 100) <= 70) then begin
            add_mult_objs_to_inven(self_obj, create_object(20, 1, 2), random(5, 40));
        end
        item_caps_adjust(self_obj, random(10, 30));
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(20, 80), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, 1000, 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_VAULT_CITY) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    end
    if (local_var(10) == 1) then begin
        float_msg(self_obj, mstr(random(751, 753)), FLOAT_MSG_NORMAL);
    end
    else begin
        start_gdialog(190, self_obj, 4, 10, -1);
        gsay_start;
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        if ((50 == 50) or (50 == 59)) then begin
            set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) - 3);
        end
        else begin
            set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) - 6);
        end
    end
    if (global_var(GVAR_SIERRA_BASE_ALERT) == 1) then begin
        set_global_var(GVAR_SIERRA_BASE_ALERT, 0);
    end
    set_global_var(GVAR_TORR_HARMED, global_var(GVAR_TORR_HARMED) bwor 536870912);
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (global_var(GVAR_CARAVAN_GUARDS_TOTAL) == 1) then begin
        move_to(self_obj, 1, 2);
    end
    if (local_var(10) == 1) then begin
        move_to(self_obj, 30303, elevation(self_obj));
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if (local_var(10) == 1) then begin
            if (tile_distance(tile_num(self_obj), 30303) < 4) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 3)), 0);
            end
            else begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), 30303, random(2, 3)), 0);
            end
        end
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    set_local_var(7, 1);
    already_talk := 1;
    Reply(10);
    giq_option(1, NAME, 11, Node002, NEUTRAL_REACTION);
    giq_option(1, NAME, 12, Node003, BAD_REACTION);
end

procedure Node002
begin
    Reply(20);
    giq_option(1, NAME, 21, Node010, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(30);
    giq_option(1, NAME, 31, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 32, Node004, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(40);
    giq_option(1, NAME, 41, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 42, Node010, NEUTRAL_REACTION);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 3) then begin
            Reply(1002);
        end
        else begin
            if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 2) then begin
                Reply(1003);
            end
            else begin
                if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 1) then begin
                    Reply(1004);
                end
                else begin
                    Reply(1001);
                end
            end
        end
    end
    else begin
        Reply(1000);
    end
    if (not(global_var(GVAR_HOLODISK_MB_LEVEL_1) == 3)) then begin
        giq_option(1, NAME, 101, Node054, NEUTRAL_REACTION);
        giq_option(1, NAME, 103, Node011, GOOD_REACTION);
        giq_option(1, NAME, 104, Node019, NEUTRAL_REACTION);
        giq_option(1, NAME, 105, Node020, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_SIERRA_BASE_ALERT) == 1) then begin
        giq_option(1, NAME, 102, Node051, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_QUEST_VAULT_VILLAGE) == 1) and (global_var(GVAR_NCR_SCMERK_PERSONAL_ENEMY) == 0)) then begin
        giq_option(1, NAME, 106, Node023, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_VAULT_MONSTER_COUNT) == 1) then begin
        giq_option(1, NAME, 107, Node058, BAD_REACTION);
    end
    if (global_var(GVAR_VAULT_MONSTER_COUNT) == 2) then begin
        giq_option(1, NAME, 108, Node059, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 109, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(110);
    giq_option(1, NAME, 111, Node012, NEUTRAL_REACTION);
    giq_option(1, NAME, 112, Node016, NEUTRAL_REACTION);
    giq_option(1, NAME, 113, Node015, NEUTRAL_REACTION);
    giq_option(1, NAME, 114, Node020, NEUTRAL_REACTION);
    giq_option(1, NAME, 115, Node010, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(120);
    giq_option(1, NAME, 121, Node020, NEUTRAL_REACTION);
    giq_option(1, NAME, 122, Node015, NEUTRAL_REACTION);
    giq_option(1, NAME, 123, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 124, Node010, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(130);
    giq_option(1, NAME, 131, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 132, Node014, NEUTRAL_REACTION);
    giq_option(1, NAME, 133, Node010, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(140);
    giq_option(1, NAME, 141, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 142, Node015, NEUTRAL_REACTION);
    giq_option(1, NAME, 143, Node010, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(150);
    giq_option(1, NAME, 151, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 152, Node010, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(160);
    giq_option(1, NAME, 161, Node021, NEUTRAL_REACTION);
    giq_option(1, NAME, 162, Node023, NEUTRAL_REACTION);
    giq_option(1, NAME, 163, Node017, NEUTRAL_REACTION);
    giq_option(1, NAME, 164, Node010, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(170);
    giq_option(1, NAME, 171, Node018, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(180);
    giq_option(1, NAME, 181, Node022, NEUTRAL_REACTION);
    giq_option(1, NAME, 182, Node021, NEUTRAL_REACTION);
    giq_option(1, NAME, 183, Node010, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(190);
    giq_option(1, NAME, 191, Node023, NEUTRAL_REACTION);
    giq_option(1, NAME, 192, Node020, NEUTRAL_REACTION);
    giq_option(1, NAME, 193, Node010, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(200);
    giq_option(1, NAME, 201, Node010, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(210);
    giq_option(1, NAME, 211, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 212, Node023, NEUTRAL_REACTION);
    giq_option(1, NAME, 213, Node022, NEUTRAL_REACTION);
    giq_option(1, NAME, 214, Node010, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(220);
    giq_option(1, NAME, 221, Node023, BAD_REACTION);
    if (global_var(GVAR_DUMAR_STATUS) == 0) then begin
        giq_option(1, NAME, 222, Node027, GOOD_REACTION);
    end
    giq_option(1, NAME, 223, Node010, NEUTRAL_REACTION);
end

procedure Node023
begin
    if (global_var(GVAR_QUEST_VAULT_VILLAGE) < 2) then begin
        Reply(2301);
    end
    else begin
        if ((global_var(GVAR_QUEST_VAULT_VILLAGE) == 2) and (local_var(8) == 0)) then begin
            Reply(2302);
        end
        else begin
            Reply(2303);
        end
    end
    if (global_var(GVAR_QUEST_VAULT_VILLAGE) != 2) then begin
        giq_option(1, NAME, 231, Node024, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_QUEST_VAULT_VILLAGE) == 1) then begin
        giq_option(1, NAME, 232, Node025, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 233, Node010, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(240);
    if (global_var(GVAR_QUEST_VAULT_VILLAGE) == 1) then begin
        giq_option(1, NAME, 241, Node025, BAD_REACTION);
    end
    giq_option(1, NAME, 242, Node010, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(250);
    giq_option(1, NAME, 251, Node010, NEUTRAL_REACTION);
    if (dude_skill(SKILL_SPEECH) >= 75) then begin
        giq_option(1, NAME, 252, Node026, GOOD_REACTION);
    end
    if ((dude_gender == 1) and (global_var(GVAR_HOLODISK_MB_LEVEL_3) == 1)) then begin
        giq_option(1, NAME, 253, Node047, NEUTRAL_REACTION);
    end
end

procedure Node026
begin
    set_local_var(9, 1);
    set_global_var(GVAR_NCR_SCMERK_PERSONAL_ENEMY, 1);
    Reply(260);
    giq_option(1, NAME, 261, Node010, GOOD_REACTION);
    giq_option(1, NAME, 262, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(270);
    if (global_var(GVAR_QUEST_VAULT_VILLAGE) != 2) then begin
        giq_option(1, NAME, 271, Node028, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_QUEST_VAULT_VILLAGE) == 2) and (local_var(8) == 0)) then begin
        giq_option(1, NAME, 272, Node029, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_QUEST_VAULT_VILLAGE) == 2) and (local_var(8) == 1)) then begin
        giq_option(1, NAME, 273, Node030, BAD_REACTION);
    end
end

procedure Node028
begin
    Reply(280);
    giq_option(1, NAME, 281, Node023, NEUTRAL_REACTION);
    giq_option(1, NAME, 282, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 283, Node999, NEUTRAL_REACTION);
end

procedure Node029
begin
    set_global_var(GVAR_DUMAR_STATUS, 1);
    Reply(290);
    giq_option(1, NAME, 291, Node010, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(300);
    giq_option(1, NAME, 301, Node031, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(310);
    giq_option(1, NAME, 311, Node033, NEUTRAL_REACTION);
    giq_option(1, NAME, 312, Node037, NEUTRAL_REACTION);
    giq_option(1, NAME, 313, Node032, BAD_REACTION);
    if ((dude_skill(SKILL_FIRST_AID) >= 75) or (dude_skill(SKILL_DOCTOR) >= 75)) then begin
        giq_option(1, NAME, 314, Node050, GOOD_REACTION);
    end
    if ((dude_skill(SKILL_REPAIR) >= 75) or (dude_skill(SKILL_SCIENCE) >= 75)) then begin
        giq_option(1, NAME, 315, Node040, GOOD_REACTION);
    end
    giq_option(1, NAME, 316, Node041, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(320);
    giq_option(1, NAME, 321, Node010, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(330);
    if ((dude_strength >= 8) and (get_critter_stat(dude_obj, STAT_ag) >= 8)) then begin
        giq_option(1, NAME, 331, Node034, GOOD_REACTION);
    end
    else begin
        giq_option(1, NAME, 332, Node035, GOOD_REACTION);
    end
    giq_option(1, NAME, 333, Node010, NEUTRAL_REACTION);
end

procedure Node034
begin
    Reply(340);
    giq_option(1, NAME, 341, Node036, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(350);
    giq_option(1, NAME, 351, Node010, NEUTRAL_REACTION);
end

procedure Node036
begin
    set_global_var(GVAR_DUMAR_STATUS, 1);
    set_local_var(9, 1);
    Reply(360);
    giq_option(1, NAME, 361, Node010, NEUTRAL_REACTION);
end

procedure Node037
begin
    Reply(370);
    if ((dude_iq >= 8) and (dude_perception >= 8)) then begin
        giq_option(1, NAME, 371, Node038, GOOD_REACTION);
    end
    else begin
        giq_option(1, NAME, 372, Node039, GOOD_REACTION);
    end
    giq_option(1, NAME, 373, Node010, NEUTRAL_REACTION);
end

procedure Node038
begin
    Reply(380);
    giq_option(1, NAME, 381, Node036, NEUTRAL_REACTION);
end

procedure Node039
begin
    Reply(390);
    giq_option(1, NAME, 391, Node010, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(400);
    giq_option(1, NAME, 401, Node036, NEUTRAL_REACTION);
end

procedure Node041
begin
    Reply(410);
    giq_option(1, NAME, 411, Node042, BAD_REACTION);
end

procedure Node042
begin
    Reply(420);
    if (item_caps_total(dude_obj) >= 200) then begin
        giq_option(1, NAME, 421, Node043, GOOD_REACTION);
    end
    giq_option(1, NAME, 422, Node044, BAD_REACTION);
end

procedure Node043
begin
    item_caps_adjust(dude_obj, -200);
    item_caps_adjust(self_obj, 200);
    Reply(430);
    giq_option(1, NAME, 431, Node046, NEUTRAL_REACTION);
end

procedure Node044
begin
    Reply(440);
    giq_option(1, NAME, 441, Node045, NEUTRAL_REACTION);
end

procedure Node045
begin
    Reply(450);
    giq_option(1, NAME, 451, Node999, NEUTRAL_REACTION);
end

procedure Node046
begin
    set_global_var(GVAR_DUMAR_STATUS, 1);
    Reply(460);
    giq_option(1, NAME, 461, Node010, NEUTRAL_REACTION);
end

procedure Node047
begin
    Reply(470);
    giq_option(1, NAME, 471, Node048, BAD_REACTION);
end

procedure Node048
begin
    Reply(480);
    giq_option(1, NAME, 481, Node049, NEUTRAL_REACTION);
end

procedure Node049
begin
    set_local_var(8, 1);
    set_global_var(GVAR_NCR_SCMERK_PERSONAL_ENEMY, 1);
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 7);
    Reply(490);
    giq_option(1, NAME, 491, Node010, NEUTRAL_REACTION);
end

procedure Node050
begin
    Reply(500);
    giq_option(1, NAME, 501, Node036, NEUTRAL_REACTION);
end

procedure Node051
begin
    Reply(510);
    giq_option(1, NAME, 511, Node010, NEUTRAL_REACTION);
    if (global_var(GVAR_ENEMY_TORR) == 5) then begin
        giq_option(1, NAME, 512, Node052, NEUTRAL_REACTION);
    end
end

procedure Node052
begin
    Reply(520);
    giq_option(1, NAME, 521, Node053, GOOD_REACTION);
end

procedure Node053
begin
    if (global_var(GVAR_SIERRA_BASE_ALERT) < 2) then begin
        set_global_var(GVAR_SIERRA_BASE_ALERT, 2);
        give_exp_points(floor(518 / 5) + (dude_iq * floor(518 / 12)) + (dude_luck * floor(518 / 30)) + (floor(518 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(518 / 5) + (dude_iq * floor(518 / 12)) + (dude_luck * floor(518 / 30)) + (floor(518 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
        set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) + 3);
    end
    Reply(530);
    giq_option(1, NAME, 531, Node053a, NEUTRAL_REACTION);
    giq_option(1, NAME, 532, Node053b, NEUTRAL_REACTION);
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 3) then begin
        giq_option(1, NAME, 533, Node999, NEUTRAL_REACTION);
    end
end

procedure Node053a
begin
    item_caps_adjust(dude_obj, 200);
end

procedure Node053b
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 20);
    display_mstr(750);
end

procedure Node054
begin
    Reply(540);
    if (global_var(GVAR_SIERRA_BASE_ALERT) == 0) then begin
        giq_option(1, NAME, 541, Node055, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 542, Node010, NEUTRAL_REACTION);
end

procedure Node055
begin
    Reply(550);
    giq_option(1, NAME, 551, Node056, NEUTRAL_REACTION);
end

procedure Node056
begin
    Reply(560);
    giq_option(1, NAME, 561, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 562, Node057, NEUTRAL_REACTION);
end

procedure Node057
begin
    set_global_var(GVAR_SIERRA_BASE_ALERT, 1);
    Reply(570);
    if (not(town_known(5) == MARK_STATE_KNOWN) or not(town_known(10) == MARK_STATE_KNOWN)) then begin
        giq_option(1, NAME, 571, Node057a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 572, Node999, NEUTRAL_REACTION);
    end
end

procedure Node057a
begin
    mark_area_known(MARK_TYPE_TOWN, 10, MARK_STATE_KNOWN);
    mark_area_known(MARK_TYPE_TOWN, 5, MARK_STATE_KNOWN);
end

procedure Node058
begin
    Reply(580);
    giq_option(1, NAME, 581, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 582, Node999, NEUTRAL_REACTION);
end

procedure Node059
begin
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 3) then begin
        Reply(590);
    end
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 2) then begin
        Reply(591);
    end
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 1) then begin
        Reply(592);
    end
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 3) then begin
        giq_option(1, NAME, 593, Node060, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 2) then begin
        giq_option(1, NAME, 594, Node073, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 1) then begin
        giq_option(1, NAME, 595, Node074, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 596, Node999, NEUTRAL_REACTION);
end

procedure Node060
begin
    Reply(600);
    giq_option(1, NAME, 601, Node061, BAD_REACTION);
    giq_option(1, NAME, 602, Node072, GOOD_REACTION);
    giq_option(1, NAME, 603, Node066, NEUTRAL_REACTION);
end

procedure Node061
begin
    Reply(610);
    giq_option(1, NAME, 611, Node062, GOOD_REACTION);
    giq_option(1, NAME, 612, Node063, NEUTRAL_REACTION);
    giq_option(1, NAME, 613, Node063, BAD_REACTION);
    giq_option(1, NAME, 614, Node065, BAD_REACTION);
end

procedure Node062
begin
    Reply(620);
    giq_option(1, NAME, 621, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 622, Node999, NEUTRAL_REACTION);
end

procedure Node063
begin
    set_local_var(10, 1);
    Reply(630);
    giq_option(1, NAME, 631, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 632, Node064, NEUTRAL_REACTION);
end

procedure Node064
begin
    set_local_var(10, 1);
    Reply(640);
    giq_option(1, NAME, 641, Node999, NEUTRAL_REACTION);
end

procedure Node065
begin
    set_global_var(GVAR_CARAVAN_GUARDS_TOTAL, 1);
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 5);
    Reply(650);
    giq_option(1, NAME, 651, Node065a, NEUTRAL_REACTION);
    giq_option(1, NAME, 652, Node065a, NEUTRAL_REACTION);
end

procedure Node065a
begin
    fadeOut(700);
    move_to(self_obj, 1, 2);
    fadeIn(700);
end

procedure Node066
begin
    Reply(660);
    giq_option(1, NAME, 661, Node067, BAD_REACTION);
    giq_option(1, NAME, 662, Node069, NEUTRAL_REACTION);
end

procedure Node067
begin
    Reply(670);
    giq_option(1, NAME, 671, Node068, NEUTRAL_REACTION);
    giq_option(1, NAME, 672, Node063, NEUTRAL_REACTION);
end

procedure Node068
begin
    Reply(680);
    giq_option(1, NAME, 681, Node999, NEUTRAL_REACTION);
end

procedure Node069
begin
    Reply(690);
    giq_option(1, NAME, 691, Node071, NEUTRAL_REACTION);
    giq_option(1, NAME, 692, Node070, NEUTRAL_REACTION);
    giq_option(1, NAME, 693, Node999, NEUTRAL_REACTION);
end

procedure Node070
begin
    Reply(700);
    giq_option(1, NAME, 701, Node063, NEUTRAL_REACTION);
end

procedure Node071
begin
    Reply(710);
    giq_option(1, NAME, 711, Node063, NEUTRAL_REACTION);
    giq_option(1, NAME, 712, Node999, NEUTRAL_REACTION);
end

procedure Node072
begin
    Reply(720);
    giq_option(1, NAME, 721, Node999, NEUTRAL_REACTION);
end

procedure Node073
begin
    Reply(730);
    giq_option(1, NAME, 731, Node999, NEUTRAL_REACTION);
end

procedure Node074
begin
    Reply(740);
    giq_option(1, NAME, 741, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end
