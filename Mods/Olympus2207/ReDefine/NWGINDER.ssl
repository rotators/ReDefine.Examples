variable steal_perk;
variable steal_gloves;
variable barter_mod;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable trading_container;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node010;
procedure Node010a;
procedure Node010b;
procedure Node011;
procedure Node011b;
procedure Node012;
procedure Node014;
procedure Node014a;
procedure Node013;
procedure Node013b;
procedure Node013c;
procedure Node013d;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node023a;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node026a;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node999;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(70, 80));
        set_local_var(5, random(30, 40));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 8);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_COOK_BERSERK);
        add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(20, 100));
        if (random(0, 100) <= 90) then begin
            add_obj_to_inven(self_obj, create_object(220, 1, 2));
        end
        if (random(0, 100) <= 70) then begin
            add_obj_to_inven(self_obj, create_object(220, 1, 2));
        end
        if (random(0, 100) <= 60) then begin
            add_obj_to_inven(self_obj, create_object(220, 1, 2));
        end
        if (random(0, 100) <= 60) then begin
            add_obj_to_inven(self_obj, create_object(221, 1, 2));
        end
        if (random(0, 100) <= 50) then begin
            add_obj_to_inven(self_obj, create_object(225, 1, 2));
        end
        if (random(0, 100) <= 50) then begin
            add_obj_to_inven(self_obj, create_object(231, 1, 2));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(15, 30), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if ((map_var(3) == 1) and (global_var(GVAR_VAULT_BEEN_TO_RAIDERS) == 2)) then begin
        set_map_var(3, 0);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_VAULT_CITY) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    end
    if (map_var(3) == 1) then begin
        float_msg(self_obj, mstr(random(5, 7)), FLOAT_MSG_NORMAL);
    end
    else begin
        start_gdialog(201, self_obj, -1, -1, -1);
        gsay_start;
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        if ((50 == 50) or (50 == 59)) then begin
            set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) - 3);
        end
        else begin
            set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) - 6);
        end
    end
    set_global_var(GVAR_MODOC_TOOL_FLAG, global_var(GVAR_MODOC_TOOL_FLAG) bwor 1024);
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if (dude_skill(SKILL_STEAL) >= 100) then begin
            if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
                script_overrides;
                set_sfall_global(13, 1);
            end
            else begin
                if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                    if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                        if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                            set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                        end
                        else begin
                            set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                        end
                        if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                            set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                            set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                            critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                            display_msg(message_str(SCRIPT_STTEXT, 410));
                        end
                    end
                end
                steal_perk := 0;
                steal_gloves := 0;
                if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                    steal_perk := steal_perk + 15;
                end
                if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                    steal_perk := steal_perk + 30;
                end
                if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                    steal_gloves := 10;
                end
                if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                    display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
                end
                else begin
                    script_overrides;
                    if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                        float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                        set_local_var(2, 1);
                    end
                    else begin
                        display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                    end
                end
            end
        end
        else begin
            script_overrides;
            if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                set_local_var(2, 1);
            end
            else begin
                display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (not(is_loading_game) == 1) then begin
        if (not(tile_contains_obj_pid(1, 2, 250))) then begin
            trading_container := create_object(250, 1, 2);
        end
        else begin
            trading_container := tile_contains_pid_obj(1, 2, 250);
        end
        if ((game_time_in_seconds - local_var(8)) >= (3600 * 24 * random(4, 6))) then begin
            move_obj_inven_to_obj(self_obj, trading_container);
            add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(20, 100));
            if (random(0, 100) <= 90) then begin
                add_obj_to_inven(self_obj, create_object(220, 1, 2));
            end
            if (random(0, 100) <= 70) then begin
                add_obj_to_inven(self_obj, create_object(220, 1, 2));
            end
            if (random(0, 100) <= 60) then begin
                add_obj_to_inven(self_obj, create_object(220, 1, 2));
            end
            if (random(0, 100) <= 60) then begin
                add_obj_to_inven(self_obj, create_object(221, 1, 2));
            end
            if (random(0, 100) <= 50) then begin
                add_obj_to_inven(self_obj, create_object(225, 1, 2));
            end
            if (random(0, 100) <= 50) then begin
                add_obj_to_inven(self_obj, create_object(231, 1, 2));
            end
            if (random(0, 100) <= 40) then begin
                add_obj_to_inven(self_obj, create_object(226, 1, 2));
            end
            if (random(0, 100) <= 35) then begin
                add_obj_to_inven(self_obj, create_object(222, 1, 2));
            end
            if (random(0, 100) <= 30) then begin
                add_obj_to_inven(self_obj, create_object(229, 1, 2));
            end
            if (random(0, 100) <= 20) then begin
                add_obj_to_inven(self_obj, create_object(232, 1, 2));
            end
            if (random(0, 100) <= 50) then begin
                add_obj_to_inven(self_obj, create_object(228, 1, 2));
            end
            if (random(0, 100) <= 60) then begin
                add_obj_to_inven(self_obj, create_object(239, 1, 2));
            end
            if (random(0, 100) <= 60) then begin
                add_obj_to_inven(self_obj, create_object(238, 1, 2));
            end
            if (get_pc_stat(PCSTAT_level) <= 6) then begin
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object(226, 1, 2));
                end
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object(225, 1, 2));
                end
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object(227, 1, 2));
                end
            end
            else begin
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object(226, 1, 2));
                end
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object(225, 1, 2));
                end
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object(227, 1, 2));
                end
                else begin
                    add_obj_to_inven(self_obj, create_object(221, 1, 2));
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        anim(self_obj, 1000, 3);
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 11, -1);
        reg_anim_func(3, 0);
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    set_local_var(7, 1);
    Reply(10);
    giq_option(1, NAME, mstr(11) + dude_name + mstr(12), Node002, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(20);
    giq_option(1, NAME, 21, Node003, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(30);
    giq_option(1, NAME, 31, Node004, NEUTRAL_REACTION);
    giq_option(1, NAME, 32, Node010, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(40);
    giq_option(1, NAME, 41, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(100);
    if (get_critter_stat(dude_obj, STAT_current_hp) < get_critter_stat(dude_obj, STAT_max_hp)) then begin
        giq_option(1, NAME, 101, Node011, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_VAULT_BEEN_TO_RAIDERS) == 1) then begin
        if (global_var(GVAR_NEW_RENO_WRIGHT_FLAGS) == 2) then begin
            giq_option(1, NAME, 103, Node028, NEUTRAL_REACTION);
        end
        else begin
            giq_option(1, NAME, 102, Node015, NEUTRAL_REACTION);
        end
    end
    giq_option(1, NAME, 104, NodeBarter, NEUTRAL_REACTION);
    giq_option(1, NAME, 105, Node033, NEUTRAL_REACTION);
    if (critter_state(dude_obj) bwand (16 bwor 32)) then begin
        giq_option(1, NAME, 108, Node011b, NEUTRAL_REACTION);
    end
    if (critter_state(dude_obj) bwand (4 bwor 8)) then begin
        giq_option(1, NAME, 109, Node011b, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_NCR_MIRA_STATE) == 0) and (global_var(GVAR_TORR_BRAHMIN_KILLED) == 1)) then begin
        giq_option(1, NAME, 106, Node010a, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 107, Node999, NEUTRAL_REACTION);
end

procedure Node010a
begin
    Reply(113);
    giq_option(1, NAME, 114, Node010b, NEUTRAL_REACTION);
    giq_option(1, NAME, 115, Node999, NEUTRAL_REACTION);
end

procedure Node010b
begin
    set_global_var(GVAR_NCR_MIRA_STATE, 1);
    Reply(116);
    giq_option(1, NAME, 117, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(110);
    if (global_var(GVAR_KARMA_NWO_BOSS) == 1) then begin
        giq_option(1, NAME, 111, Node012, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 112, Node013, NEUTRAL_REACTION);
    end
end

procedure Node011b
begin
    Reply(118);
    if (global_var(GVAR_KARMA_NWO_BOSS) == 1) then begin
        giq_option(1, NAME, 111, Node012, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 112, Node013b, NEUTRAL_REACTION);
    end
end

procedure Node012
begin
    Reply(120);
    giq_option(1, NAME, 121, Node014a, NEUTRAL_REACTION);
end

procedure Node014
begin
    critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
    if (critter_state(dude_obj) bwand (16 bwor 32)) then begin
        game_time_advance(game_ticks(3600 * random(3, 5)));
        critter_injure(dude_obj, 16 bwor 8388608);
        critter_injure(dude_obj, 32 bwor 8388608);
    end
    if (critter_state(dude_obj) bwand (4 bwor 8)) then begin
        game_time_advance(game_ticks(3600 * random(6, 9)));
        critter_injure(dude_obj, 4 bwor 8388608);
        critter_injure(dude_obj, 8 bwor 8388608);
    end
    fadeIn(700);
    Reply(140);
    giq_option(1, NAME, 141, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 142, Node999, NEUTRAL_REACTION);
end

procedure Node014a
begin
    fadeOut(700);
    call Node014();
end

procedure Node013
begin
    Reply(130);
    giq_option(1, NAME, 131, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 132, Node999, NEUTRAL_REACTION);
end

procedure Node013b
begin
    Reply(133);
    giq_option(1, NAME, 134, Node013c, NEUTRAL_REACTION);
    giq_option(1, NAME, 135, Node999, NEUTRAL_REACTION);
end

procedure Node013c
begin
    if (critter_state(dude_obj) bwand (16 bwor 32)) then begin
        Reply(mstr(136) + 400 + mstr(137));
    end
    else begin
        if (critter_state(dude_obj) bwand (4 bwor 8)) then begin
            Reply(mstr(136) + 600 + mstr(137));
        end
    end
    if ((critter_state(dude_obj) bwand (16 bwor 32)) and (item_caps_total(dude_obj) >= 400)) then begin
        giq_option(1, NAME, 138, Node013d, NEUTRAL_REACTION);
    end
    if ((critter_state(dude_obj) bwand (4 bwor 8)) and (item_caps_total(dude_obj) >= 600)) then begin
        giq_option(1, NAME, 138, Node013d, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 139, Node999, NEUTRAL_REACTION);
end

procedure Node013d
begin
    if (critter_state(dude_obj) bwand (16 bwor 32)) then begin
        item_caps_adjust(dude_obj, -400);
        item_caps_adjust(self_obj, 400);
    end
    else begin
        if (critter_state(dude_obj) bwand (4 bwor 8)) then begin
            item_caps_adjust(dude_obj, -600);
            item_caps_adjust(self_obj, 600);
        end
    end
    Reply(143);
    giq_option(1, NAME, 144, Node014a, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(150);
    if (dude_iq > 7) then begin
        giq_option(1, NAME, 151, Node016, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 152, Node027, NEUTRAL_REACTION);
    giq_option(1, NAME, 153, Node018, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(160);
    giq_option(1, NAME, 161, Node017, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(170);
    giq_option(1, NAME, 171, Node018, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(180);
    giq_option(1, NAME, 181, Node019, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(190);
    giq_option(1, NAME, 191, Node022, NEUTRAL_REACTION);
    giq_option(1, NAME, 192, Node020, NEUTRAL_REACTION);
    giq_option(1, NAME, 193, Node020, NEUTRAL_REACTION);
    giq_option(1, NAME, 194, Node021, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(200);
    giq_option(1, NAME, 201, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(210);
    giq_option(1, NAME, 211, Node020, NEUTRAL_REACTION);
    giq_option(1, NAME, 212, Node022, NEUTRAL_REACTION);
    if (dude_skill(SKILL_SPEECH) > 65) then begin
        giq_option(1, NAME, 213, Node025, NEUTRAL_REACTION);
    end
end

procedure Node022
begin
    Reply(220);
    giq_option(1, NAME, 221, Node023a, NEUTRAL_REACTION);
end

procedure Node023
begin
    critter_damage(dude_obj, get_critter_stat(dude_obj, STAT_current_hp) / 3);
    fadeIn(700);
    Reply(230);
    giq_option(1, NAME, 231, Node024, NEUTRAL_REACTION);
end

procedure Node023a
begin
    fadeOut(700);
    call Node023();
end

procedure Node024
begin
    if (map_var(3) == 0) then begin
        set_map_var(3, 1);
    end
    Reply(240);
    giq_option(1, NAME, 241, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(250);
    giq_option(1, NAME, 251, Node026a, NEUTRAL_REACTION);
end

procedure Node026
begin
    critter_damage(dude_obj, get_critter_stat(dude_obj, STAT_current_hp) / 3);
    fadeIn(700);
    Reply(260);
    giq_option(1, NAME, 261, Node024, NEUTRAL_REACTION);
end

procedure Node026a
begin
    fadeOut(700);
    call Node026();
end

procedure Node027
begin
    Reply(270);
    giq_option(1, NAME, 271, Node017, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(280);
    if ((dude_skill(SKILL_DOCTOR) > 40) and (local_var(14) == 0)) then begin
        giq_option(1, NAME, 281, Node029, NEUTRAL_REACTION);
    end
    if ((dude_skill(SKILL_SPEECH) > 70) and (local_var(14) == 0)) then begin
        giq_option(1, NAME, 282, Node031, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 283, Node032, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(290);
    giq_option(1, NAME, 291, Node030, NEUTRAL_REACTION);
end

procedure Node030
begin
    set_local_var(14, 1);
    critter_mod_skill(dude_obj, SKILL_DOCTOR, 66);
    play_sfx("LEVELUP");
    display_msg(message_str(SCRIPT_STTEXT, 407));
    Reply(300);
    giq_option(1, NAME, 301, Node999, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(310);
    giq_option(1, NAME, 311, Node030, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(320);
    giq_option(1, NAME, 321, Node999, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(330);
    giq_option(1, NAME, 331, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
    already_talk := 0;
end

procedure NodeBarter
begin
    set_local_var(8, game_time_in_seconds);
    barter_mod := 50 * (0 - 1);
    gdialog_mod_barter(barter_mod);
    call Node010();
end
