variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable talk_a;
variable talk_b;
variable talk_c;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node030a;
procedure Node030b;
procedure Node030c;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure Node055;
procedure NodeBR;
procedure NodeNR;
procedure NodeGR;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(70, 80));
        set_local_var(5, random(40, 50));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 8);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_WOMAN_WEAK);
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object(165, 1, 2));
            add_mult_objs_to_inven(self_obj, create_object(2, 1, 2), random(11, 28));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(172, 1, 2));
            add_mult_objs_to_inven(self_obj, create_object(7, 1, 2), random(11, 19));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object(109, 1, 2));
        end
        else begin
            add_obj_to_inven(self_obj, create_object(110, 1, 2));
        end
        if (random(0, 100) <= 20) then begin
            add_mult_objs_to_inven(self_obj, create_object(41, 1, 2), random(5, 20));
        end
        if (random(0, 100) <= 15) then begin
            add_mult_objs_to_inven(self_obj, create_object(238, 1, 2), random(2, 5));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(236, 1, 2));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object(104, 1, 2));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object(227, 1, 2));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object(239, 1, 2));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object(232, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(242, 1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object(422, 1, 2));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object(423, 1, 2));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object(426, 1, 2));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object(433, 1, 2));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object(421, 1, 2));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, 1000, 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, 1000, 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_VAULT_CITY) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    end
    if (local_var(9) == 3) then begin
        float_msg(self_obj, mstr(random(560, 564)), FLOAT_MSG_RED);
    end
    else begin
        start_gdialog(188, self_obj, -1, -1, -1);
        gsay_start;
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        if ((50 == 50) or (50 == 59)) then begin
            set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) - 3);
        end
        else begin
            set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) - 6);
        end
    end
    set_global_var(GVAR_TORR_HARMED, global_var(GVAR_TORR_HARMED) bwor 134217728);
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    Reply(10);
    if (dude_iq >= 7) then begin
        giq_option(1, NAME, 11, Node002, NEUTRAL_REACTION);
    end
    if ((dude_iq >= 4) and (dude_iq < 7)) then begin
        giq_option(1, NAME, 12, Node014, NEUTRAL_REACTION);
    end
    if (dude_iq < 4) then begin
        giq_option(1, NAME, 13, Node020, NEUTRAL_REACTION);
    end
end

procedure Node002
begin
    set_local_var(7, 1);
    Reply(20);
    giq_option(1, NAME, 21, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 22, Node015, NEUTRAL_REACTION);
    giq_option(1, NAME, 23, Node017, NEUTRAL_REACTION);
    giq_option(1, NAME, 24, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 25, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 26, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(30);
    giq_option(1, NAME, 31, Node004, NEUTRAL_REACTION);
    giq_option(1, NAME, 32, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 33, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 34, Node011, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(40);
    giq_option(1, NAME, 41, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 42, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 43, Node011, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(50);
    giq_option(1, NAME, 51, Node007, NEUTRAL_REACTION);
    giq_option(1, NAME, 52, Node006, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(60);
    giq_option(1, NAME, 61, Node007, NEUTRAL_REACTION);
end

procedure Node007
begin
    set_local_var(9, 1);
    Reply(70);
    giq_option(1, NAME, 71, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 72, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(80);
    giq_option(1, NAME, 81, Node009, NEUTRAL_REACTION);
    giq_option(1, NAME, 82, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 83, Node011, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(90);
    giq_option(1, NAME, 91, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 92, Node007, NEUTRAL_REACTION);
    giq_option(1, NAME, 93, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 94, Node012, NEUTRAL_REACTION);
end

procedure Node010
begin
    if (already_talk == 1) then begin
        Reply(1001);
    end
    else begin
        if (global_var(GVAR_HOLODISK_MB_LEVEL_1) == 3) then begin
            Reply(1004);
        end
        else begin
            if (local_var(9) == 0) then begin
                Reply(1000);
            end
            if (local_var(9) == 1) then begin
                Reply(1002);
            end
            if (local_var(9) == 2) then begin
                Reply(1003);
            end
        end
    end
    if (global_var(GVAR_HOLODISK_MB_LEVEL_1) != 3) then begin
        giq_option(1, NAME, 101, Node031, NEUTRAL_REACTION);
        if ((dude_charisma >= 5) or (dude_skill(SKILL_SPEECH) >= 60) or (dude_skill(SKILL_GAMBLING) >= 40)) then begin
            giq_option(1, NAME, 102, Node027, NEUTRAL_REACTION);
        end
        if (dude_iq >= 5) then begin
            giq_option(1, NAME, 103, Node029, NEUTRAL_REACTION);
        end
        giq_option(1, NAME, 104, Node040, NEUTRAL_REACTION);
        if (dude_is_stupid) then begin
            giq_option(1, NAME, 105, Node029, NEUTRAL_REACTION);
        end
    end
    else begin
        giq_option(1, NAME, 106, Node054, NEUTRAL_REACTION);
        giq_option(1, NAME, 107, Node055, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 108, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(110);
    giq_option(1, NAME, 111, NodeBR, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(120);
    giq_option(1, NAME, 121, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 122, Node007, NEUTRAL_REACTION);
    giq_option(1, NAME, 123, Node011, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(130);
    giq_option(1, NAME, 131, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 132, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    set_local_var(7, 1);
    Reply(140);
    giq_option(1, NAME, 141, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 142, Node015, NEUTRAL_REACTION);
    giq_option(1, NAME, 143, Node017, NEUTRAL_REACTION);
    giq_option(1, NAME, 144, Node018, NEUTRAL_REACTION);
    giq_option(1, NAME, 145, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 146, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(150);
    giq_option(1, NAME, 151, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 152, Node016, NEUTRAL_REACTION);
    giq_option(1, NAME, 153, Node019, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(160);
    giq_option(1, NAME, 161, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 162, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(170);
    giq_option(1, NAME, 171, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 172, Node010, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(180);
    giq_option(1, NAME, 181, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 182, Node010, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(190);
    giq_option(1, NAME, 191, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 192, Node999, NEUTRAL_REACTION);
end

procedure Node020
begin
    set_local_var(7, 1);
    Reply(200);
    giq_option(1, NAME, 201, Node021, NEUTRAL_REACTION);
    giq_option(1, NAME, 202, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 203, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(210);
    giq_option(1, NAME, 211, Node022, NEUTRAL_REACTION);
    giq_option(1, NAME, 212, Node025, NEUTRAL_REACTION);
    giq_option(1, NAME, 213, Node999, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(220);
    giq_option(1, NAME, 221, Node023, NEUTRAL_REACTION);
    giq_option(1, NAME, 222, Node023, NEUTRAL_REACTION);
    giq_option(1, NAME, 223, Node024, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(230);
    giq_option(1, NAME, 231, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 232, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(240);
    giq_option(1, NAME, 241, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 242, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(250);
    giq_option(1, NAME, 251, Node026, NEUTRAL_REACTION);
    giq_option(1, NAME, 252, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 253, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(260);
    giq_option(1, NAME, 261, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 262, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(270);
    giq_option(1, NAME, 271, Node034, NEUTRAL_REACTION);
    giq_option(1, NAME, 272, Node029, NEUTRAL_REACTION);
    giq_option(1, NAME, 273, Node028, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(280);
    giq_option(1, NAME, 281, Node010, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(290);
    giq_option(1, NAME, 291, Node028, NEUTRAL_REACTION);
    giq_option(1, NAME, 292, Node030, NEUTRAL_REACTION);
    giq_option(1, NAME, 293, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 294, Node039, NEUTRAL_REACTION);
    giq_option(1, NAME, 295, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 296, Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(300);
    if (talk_a == 0) then begin
        giq_option(1, NAME, 304, Node030a, NEUTRAL_REACTION);
    end
    if (talk_b == 0) then begin
        giq_option(1, NAME, 305, Node030b, NEUTRAL_REACTION);
    end
    if (talk_c == 0) then begin
        giq_option(1, NAME, 306, Node030c, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 307, Node032, NEUTRAL_REACTION);
end

procedure Node030a
begin
    talk_a := 1;
    Reply(301);
    if (talk_a == 0) then begin
        giq_option(1, NAME, 304, Node030a, NEUTRAL_REACTION);
    end
    if (talk_b == 0) then begin
        giq_option(1, NAME, 305, Node030b, NEUTRAL_REACTION);
    end
    if (talk_c == 0) then begin
        giq_option(1, NAME, 306, Node030c, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 307, Node032, NEUTRAL_REACTION);
end

procedure Node030b
begin
    talk_b := 1;
    Reply(302);
    if (talk_a == 0) then begin
        giq_option(1, NAME, 304, Node030a, NEUTRAL_REACTION);
    end
    if (talk_b == 0) then begin
        giq_option(1, NAME, 305, Node030b, NEUTRAL_REACTION);
    end
    if (talk_c == 0) then begin
        giq_option(1, NAME, 306, Node030c, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 307, Node032, NEUTRAL_REACTION);
end

procedure Node030c
begin
    talk_c := 1;
    Reply(303);
    if (talk_a == 0) then begin
        giq_option(1, NAME, 304, Node030a, NEUTRAL_REACTION);
    end
    if (talk_b == 0) then begin
        giq_option(1, NAME, 305, Node030b, NEUTRAL_REACTION);
    end
    if (talk_c == 0) then begin
        giq_option(1, NAME, 306, Node030c, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 307, Node032, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(310);
    giq_option(1, NAME, 311, Node010, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(320);
    giq_option(1, NAME, 321, Node033, NEUTRAL_REACTION);
    giq_option(1, NAME, 322, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 323, Node999, NEUTRAL_REACTION);
end

procedure Node033
begin
    set_local_var(9, 1);
    Reply(330);
    giq_option(1, NAME, 331, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 332, Node999, NEUTRAL_REACTION);
end

procedure Node034
begin
    Reply(340);
    giq_option(1, NAME, 341, Node035, NEUTRAL_REACTION);
    giq_option(1, NAME, 342, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 343, Node999, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(350);
    giq_option(1, NAME, 351, Node036, NEUTRAL_REACTION);
    giq_option(1, NAME, 352, Node037, NEUTRAL_REACTION);
    giq_option(1, NAME, 353, Node038, NEUTRAL_REACTION);
    giq_option(1, NAME, 354, Node010, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(360);
    giq_option(1, NAME, 361, Node010, NEUTRAL_REACTION);
end

procedure Node037
begin
    set_local_var(9, 1);
    Reply(370);
    giq_option(1, NAME, 371, Node010, NEUTRAL_REACTION);
end

procedure Node038
begin
    Reply(380);
    giq_option(1, NAME, 381, Node010, NEUTRAL_REACTION);
end

procedure Node039
begin
    Reply(390);
    giq_option(1, NAME, 391, Node010, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(400);
    giq_option(1, NAME, 401, Node041, NEUTRAL_REACTION);
    giq_option(1, NAME, 402, Node042, NEUTRAL_REACTION);
    giq_option(1, NAME, 403, Node043, NEUTRAL_REACTION);
    giq_option(1, NAME, 404, Node053, NEUTRAL_REACTION);
    giq_option(1, NAME, 405, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 406, Node999, NEUTRAL_REACTION);
end

procedure Node041
begin
    Reply(410);
    giq_option(1, NAME, 411, Node048, NEUTRAL_REACTION);
    giq_option(1, NAME, 412, Node049, NEUTRAL_REACTION);
    giq_option(1, NAME, 413, Node040, NEUTRAL_REACTION);
    giq_option(1, NAME, 414, Node010, NEUTRAL_REACTION);
end

procedure Node042
begin
    Reply(420);
    giq_option(1, NAME, 421, Node051, NEUTRAL_REACTION);
    giq_option(1, NAME, 422, Node052, NEUTRAL_REACTION);
    giq_option(1, NAME, 423, Node040, NEUTRAL_REACTION);
    giq_option(1, NAME, 424, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 425, Node999, NEUTRAL_REACTION);
end

procedure Node043
begin
    if (global_var(GVAR_QUEST_VAULT_VILLAGE) != 2) then begin
        Reply(430);
    end
    else begin
        if (dude_gender == 1) then begin
            set_global_var(GVAR_NCR_SCMERK_STATUS, 1);
            Reply(431);
        end
        else begin
            Reply(432);
        end
    end
    if (global_var(GVAR_QUEST_VAULT_VILLAGE) != 2) then begin
        giq_option(1, NAME, 433, Node044, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 434, Node010, NEUTRAL_REACTION);
end

procedure Node044
begin
    Reply(440);
    giq_option(1, NAME, 441, Node046, NEUTRAL_REACTION);
    giq_option(1, NAME, 442, Node047, NEUTRAL_REACTION);
    if ((dude_iq >= 5) or (dude_skill(SKILL_SPEECH) >= 95)) then begin
        giq_option(1, NAME, 443, Node045, NEUTRAL_REACTION);
    end
    if ((dude_is_stupid) or (dude_skill(SKILL_SPEECH) >= 95)) then begin
        giq_option(1, NAME, 444, Node045, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 445, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 446, Node999, NEUTRAL_REACTION);
end

procedure Node045
begin
    if (local_var(9) == 1) then begin
        set_global_var(GVAR_NCR_SCMERK_STATUS, 1);
        Reply(450);
    end
    else begin
        Reply(451);
    end
    giq_option(1, NAME, 452, Node040, NEUTRAL_REACTION);
    giq_option(1, NAME, 453, Node010, NEUTRAL_REACTION);
end

procedure Node046
begin
    Reply(460);
    giq_option(1, NAME, 461, Node040, NEUTRAL_REACTION);
    giq_option(1, NAME, 462, Node010, NEUTRAL_REACTION);
end

procedure Node047
begin
    Reply(470);
    giq_option(1, NAME, 471, Node040, NEUTRAL_REACTION);
    giq_option(1, NAME, 472, Node010, NEUTRAL_REACTION);
end

procedure Node048
begin
    Reply(480);
    giq_option(1, NAME, 481, Node040, NEUTRAL_REACTION);
    giq_option(1, NAME, 482, Node010, NEUTRAL_REACTION);
end

procedure Node049
begin
    Reply(490);
    giq_option(1, NAME, 491, Node050, NEUTRAL_REACTION);
end

procedure Node050
begin
    Reply(500);
    giq_option(1, NAME, 501, Node040, NEUTRAL_REACTION);
    giq_option(1, NAME, 502, Node010, NEUTRAL_REACTION);
end

procedure Node051
begin
    Reply(510);
    giq_option(1, NAME, 511, Node052, NEUTRAL_REACTION);
    giq_option(1, NAME, 512, Node040, NEUTRAL_REACTION);
    giq_option(1, NAME, 513, Node010, NEUTRAL_REACTION);
end

procedure Node052
begin
    Reply(520);
    giq_option(1, NAME, 521, Node040, NEUTRAL_REACTION);
    giq_option(1, NAME, 522, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 523, Node999, NEUTRAL_REACTION);
end

procedure Node053
begin
    Reply(530);
    giq_option(1, NAME, 531, Node040, NEUTRAL_REACTION);
    giq_option(1, NAME, 532, Node010, NEUTRAL_REACTION);
end

procedure Node054
begin
    set_local_var(9, 3);
    Reply(540);
    giq_option(1, NAME, 541, Node999, NEUTRAL_REACTION);
end

procedure Node055
begin
    set_local_var(9, 3);
    Reply(550);
    giq_option(1, NAME, 551, Node999, NEUTRAL_REACTION);
end

procedure NodeBR
begin
    set_local_var(9, 2);
end

procedure NodeNR
begin
    set_local_var(9, 0);
end

procedure NodeGR
begin
    set_local_var(9, 1);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end
