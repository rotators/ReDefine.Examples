variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable speach_floater;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure Node055;
procedure Node056;
procedure Node057;
procedure Node060;
procedure Node065;
procedure Node066;
procedure Node067;
procedure Node068;
procedure Node069;
procedure Node075;
procedure Node076;
procedure NodeQA;
procedure NodeStartBono;
procedure NodeStartBonoSpeach;
procedure Node999;
procedure Node998;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(65, 75));
        set_local_var(5, random(40, 50));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 5);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_UNDEAD_NORMAL);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(29, 76), 1);
    end
    if (float_is_called == 0) then begin
        speach_floater := speach_floater + 1;
        float_is_called := 1;
        if ((global_var(GVAR_HOSTILE_SLAVE_COUNT) == 13) and (speach_floater < 12)) then begin
            add_timer_event(self_obj, random(30, 40), 2);
        end
        else begin
            if (speach_floater == 12) then begin
                speach_floater := 0;
                call NodeStartBonoSpeach();
            end
        end
    end
    if ((global_var(GVAR_HOSTILE_SLAVE_COUNT) == 11) and (local_var(9) == 0)) then begin
        set_local_var(9, 1);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_THE_DEN) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(2);
    end
    else begin
        display_mstr(4);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(1);
    end
    else begin
        display_mstr(3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    end
    if ((global_var(GVAR_GRAVE_FLAGS_1) == 4) and (town_known(2) == MARK_STATE_KNOWN)) then begin
        float_msg(self_obj, mstr(random(500, 505)), FLOAT_MSG_YELLOW);
    end
    else begin
        start_gdialog(124, self_obj, 4, 7, -1);
        gsay_start;
        if (global_var(GVAR_HOSTILE_SLAVE_COUNT) == 14) then begin
            call Node067();
        end
        else begin
            if (local_var(7) == 0) then begin
                call Node001();
            end
            else begin
                call Node010();
            end
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        if ((49 == 50) or (49 == 59)) then begin
            set_global_var(GVAR_TOWN_REP_THE_DEN, global_var(GVAR_TOWN_REP_THE_DEN) - 3);
        end
        else begin
            set_global_var(GVAR_TOWN_REP_THE_DEN, global_var(GVAR_TOWN_REP_THE_DEN) - 6);
        end
    end
    set_global_var(GVAR_TORR_HARMED, global_var(GVAR_TORR_HARMED) bwor 256);
    if (not(town_known(2) == MARK_STATE_KNOWN)) then begin
        mark_area_known(MARK_TYPE_TOWN, 2, MARK_STATE_KNOWN);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        anim(self_obj, 1000, 2);
        if (random(0, 100) <= 40) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            if (random(0, 100) <= 60) then begin
                reg_anim_animate(self_obj, 11, -1);
            end
            else begin
                reg_anim_animate(self_obj, 16, -1);
            end
            reg_anim_func(3, 0);
        end
        float_msg(self_obj, mstr(800 + speach_floater), FLOAT_MSG_NORMAL);
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
        call NodeStartBonoSpeach();
    end
end

procedure Node001
begin
    Reply(10);
    giq_option(1, NAME, 11, Node002, NEUTRAL_REACTION);
    giq_option(1, NAME, 12, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(20);
    giq_option(1, NAME, 21, Node003, NEUTRAL_REACTION);
    giq_option(1, NAME, 22, Node004, BAD_REACTION);
    giq_option(1, NAME, 23, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(30);
    giq_option(1, NAME, 31, Node005, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(40);
    giq_option(1, NAME, 41, Node005, NEUTRAL_REACTION);
end

procedure Node005
begin
    set_local_var(7, 1);
    Reply(50);
    giq_option(1, NAME, mstr(51) + dude_name + mstr(52), Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 53, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    already_talk := 1;
    Reply(60);
    giq_option(1, NAME, 61, Node010, GOOD_REACTION);
    giq_option(1, NAME, 62, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        Reply(mstr(100) + dude_name + mstr(101));
    end
    else begin
        Reply(102);
    end
    giq_option(1, NAME, 103, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 104, Node020, NEUTRAL_REACTION);
    giq_option(1, NAME, 105, Node030, NEUTRAL_REACTION);
    if (map_var(0) == 0) then begin
        giq_option(1, NAME, 106, Node040, NEUTRAL_REACTION);
    end
    if (map_var(0) == 1) then begin
        giq_option(1, NAME, 107, Node050, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_HOSTILE_SLAVE_COUNT) == 0) then begin
        giq_option(1, NAME, 108, Node060, NEUTRAL_REACTION);
    end
    else begin
        if (global_var(GVAR_HOSTILE_SLAVE_COUNT) < 12) then begin
            giq_option(1, NAME, 199, Node065, GOOD_REACTION);
        end
    end
    if (global_var(GVAR_MODOC_SPOKE_PROTECTOR) == 1) then begin
        giq_option(1, NAME, 198, Node069, BAD_REACTION);
    end
    if ((global_var(GVAR_LADDIE_STATE) == 2) and (local_var(10) == 0)) then begin
        giq_option(1, NAME, 197, Node075, NEUTRAL_REACTION);
    end
    if ((local_var(10) > 0) and (local_var(10) < 10) and obj_carrying_pid_obj(dude_obj, 305)) then begin
        giq_option(1, NAME, 196, Node076, GOOD_REACTION);
    end
    giq_option(1, NAME, 109, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(110);
    giq_option(1, NAME, 111, Node012, GOOD_REACTION);
    if (dude_iq < 8) then begin
        giq_option(1, NAME, 112, Node013, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 113, Node013, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 114, Node014, GOOD_REACTION);
end

procedure Node012
begin
    Reply(120);
    giq_option(1, NAME, 121, Node015, NEUTRAL_REACTION);
    if (dude_iq < 7) then begin
        giq_option(1, NAME, 122, Node015, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 123, Node015, NEUTRAL_REACTION);
    end
end

procedure Node013
begin
    Reply(130);
    giq_option(1, NAME, 131, Node015, NEUTRAL_REACTION);
    giq_option(1, NAME, 132, Node015, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(140);
    giq_option(1, NAME, 141, Node015, BAD_REACTION);
    giq_option(1, NAME, 142, Node015, BAD_REACTION);
end

procedure Node015
begin
    Reply(150);
    giq_option(1, NAME, 151, Node016, GOOD_REACTION);
    if (dude_iq > 6) then begin
        giq_option(1, NAME, 152, Node017, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 153, Node017, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 154, Node018, BAD_REACTION);
end

procedure Node016
begin
    Reply(160);
    giq_option(1, NAME, 161, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 162, Node010, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(170);
    if (dude_iq > 6) then begin
        giq_option(1, NAME, 171, Node010, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 172, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 173, Node010, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(180);
    if (dude_iq > 7) then begin
        giq_option(1, NAME, 181, Node019, GOOD_REACTION);
    end
    giq_option(1, NAME, 182, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 183, Node010, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(190);
    giq_option(1, NAME, 191, Node010, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(200);
    giq_option(1, NAME, 201, Node021, NEUTRAL_REACTION);
    giq_option(1, NAME, 202, Node024, NEUTRAL_REACTION);
end

procedure Node021
begin
    if (60 < ((dude_charisma * 10) + (dude_skill(SKILL_SPEECH) / 5))) then begin
        Reply(210);
    end
    else begin
        Reply(211);
    end
    if (60 < ((dude_charisma * 10) + (dude_skill(SKILL_SPEECH) / 5))) then begin
        giq_option(1, NAME, 214, Node022, BAD_REACTION);
    end
    else begin
        giq_option(1, NAME, 212, Node023, GOOD_REACTION);
    end
    giq_option(1, NAME, 213, Node024, BAD_REACTION);
end

procedure Node022
begin
    Reply(220);
    giq_option(1, NAME, 221, Node023, NEUTRAL_REACTION);
    giq_option(1, NAME, 222, Node023, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(230);
    giq_option(1, NAME, 231, Node024, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(240);
    giq_option(1, NAME, 241, Node026, BAD_REACTION);
    giq_option(1, NAME, 242, Node025, NEUTRAL_REACTION);
    giq_option(1, NAME, 243, Node021, NEUTRAL_REACTION);
    giq_option(1, NAME, 244, Node010, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(250);
    giq_option(1, NAME, 251, Node010, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(260);
    if (dude_iq > 5) then begin
        giq_option(1, NAME, 261, Node010, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 262, Node010, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(300);
    giq_option(1, NAME, 301, Node031, NEUTRAL_REACTION);
    giq_option(1, NAME, 302, Node032, GOOD_REACTION);
    giq_option(1, NAME, 303, Node033, BAD_REACTION);
end

procedure Node031
begin
    Reply(310);
    giq_option(1, NAME, 311, Node032, NEUTRAL_REACTION);
    giq_option(1, NAME, 312, Node032, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(320);
    giq_option(1, NAME, 321, Node033, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(330);
    giq_option(1, NAME, 331, Node034, BAD_REACTION);
    giq_option(1, NAME, 332, Node035, BAD_REACTION);
end

procedure Node034
begin
    Reply(340);
    giq_option(1, NAME, 341, Node010, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(350);
    giq_option(1, NAME, 351, Node010, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(400);
    giq_option(1, NAME, 401, Node041, NEUTRAL_REACTION);
    giq_option(1, NAME, 402, Node042, BAD_REACTION);
    giq_option(1, NAME, 403, Node043, GOOD_REACTION);
end

procedure Node041
begin
    Reply(410);
    giq_option(1, NAME, 411, Node044, GOOD_REACTION);
    giq_option(1, NAME, 412, Node044, GOOD_REACTION);
end

procedure Node042
begin
    Reply(420);
    giq_option(1, NAME, 421, Node044, GOOD_REACTION);
    giq_option(1, NAME, 422, Node044, GOOD_REACTION);
end

procedure Node043
begin
    Reply(430);
    giq_option(1, NAME, 431, Node044, GOOD_REACTION);
    giq_option(1, NAME, 432, Node044, GOOD_REACTION);
end

procedure Node044
begin
    Reply(440);
    giq_option(1, NAME, 441, Node045, NEUTRAL_REACTION);
    giq_option(1, NAME, 442, Node045, NEUTRAL_REACTION);
    giq_option(1, NAME, 443, Node999, NEUTRAL_REACTION);
end

procedure Node045
begin
    set_map_var(0, 1);
    Reply(450);
    giq_option(1, NAME, 451, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 452, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 453, Node999, NEUTRAL_REACTION);
end

procedure Node050
begin
    Reply(500);
    giq_option(1, NAME, 501, Node051, BAD_REACTION);
    if (global_var(GVAR_MODOC_TANNERY_FLAG) == 2) then begin
        giq_option(1, NAME, 502, Node052, GOOD_REACTION);
    end
    if (global_var(GVAR_MODOC_POST_FLAG) == 2) then begin
        giq_option(1, NAME, 503, Node053, GOOD_REACTION);
    end
    if ((global_var(GVAR_MODOC_TANNERY_FLAG) == 2) and (global_var(GVAR_MODOC_POST_FLAG) == 2)) then begin
        giq_option(1, NAME, 505, Node055, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 504, Node054, BAD_REACTION);
        if (random(0, 100) < (dude_skill(SKILL_SPEECH) + (dude_skill(SKILL_SPEECH) / 20 * dude_charisma) - (30 + ((10 * 2) + 2)) + dude_charisma)) then begin
            giq_option(1, NAME, 505, Node055, NEUTRAL_REACTION);
        end
    end
end

procedure Node051
begin
    Reply(510);
    giq_option(1, NAME, 511, Node010, NEUTRAL_REACTION);
    giq_option(1, NAME, 512, Node999, NEUTRAL_REACTION);
end

procedure Node052
begin
    Reply(520);
    giq_option(1, NAME, 521, Node057, NEUTRAL_REACTION);
    giq_option(1, NAME, 522, Node057, NEUTRAL_REACTION);
end

procedure Node053
begin
    Reply(530);
    giq_option(1, NAME, 531, Node057, NEUTRAL_REACTION);
    giq_option(1, NAME, 532, Node057, NEUTRAL_REACTION);
end

procedure Node054
begin
    Reply(540);
    giq_option(1, NAME, 541, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 542, Node010, NEUTRAL_REACTION);
end

procedure Node055
begin
    Reply(550);
    giq_option(1, NAME, 551, Node056, NEUTRAL_REACTION);
end

procedure Node056
begin
    if (map_var(0) < 3) then begin
        set_map_var(0, 3);
    end
    mark_area_known(MARK_TYPE_TOWN, 2, MARK_STATE_KNOWN);
    Reply(560);
    giq_option(1, NAME, 561, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 562, Node999, NEUTRAL_REACTION);
end

procedure Node057
begin
    Reply(570);
    giq_option(1, NAME, 571, Node056, NEUTRAL_REACTION);
end

procedure Node060
begin
    Reply(600);
    giq_option(1, NAME, 601, NodeQA, NEUTRAL_REACTION);
    giq_option(1, NAME, 602, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 603, Node999, NEUTRAL_REACTION);
end

procedure Node065
begin
    if ((game_time_in_seconds - local_var(8)) < (3600 * 5)) then begin
        Reply(650);
        giq_option(1, NAME, 651, Node999, NEUTRAL_REACTION);
        if (global_var(GVAR_HOSTILE_SLAVE_COUNT) == 11) then begin
            giq_option(1, NAME, 652, Node066, GOOD_REACTION);
        end
    end
    else begin
        set_global_var(GVAR_HOSTILE_SLAVE_COUNT, 12);
        Reply(mstr(653) + dude_name + mstr(654));
        giq_option(1, NAME, 655, Node999, NEUTRAL_REACTION);
        giq_option(1, NAME, 656, Node999, NEUTRAL_REACTION);
    end
end

procedure Node066
begin
    Reply(660);
    giq_option(1, NAME, 661, NodeStartBono, NEUTRAL_REACTION);
end

procedure Node067
begin
    if (global_var(GVAR_HOSTILE_SLAVE_COUNT) != 12) then begin
        set_global_var(GVAR_HOSTILE_SLAVE_COUNT, 12);
        give_exp_points(floor(210 / 5) + (dude_iq * floor(210 / 12)) + (dude_luck * floor(210 / 30)) + (floor(210 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(210 / 5) + (dude_iq * floor(210 / 12)) + (dude_luck * floor(210 / 30)) + (floor(210 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
    end
    Reply(670);
    giq_option(1, NAME, 671, Node068, BAD_REACTION);
    giq_option(1, NAME, 672, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 673, Node999, NEUTRAL_REACTION);
end

procedure Node068
begin
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 3);
    Reply(mstr(680) + dude_name + mstr(681));
    giq_option(1, NAME, 682, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 683, Node999, NEUTRAL_REACTION);
end

procedure Node069
begin
    Reply(690);
    giq_option(1, NAME, 691, Node999, NEUTRAL_REACTION);
end

procedure Node075
begin
    set_local_var(10, 1);
    Reply(750);
    giq_option(1, NAME, 751, Node999, NEUTRAL_REACTION);
end

procedure Node076
begin
    variable LVar0 := 0;
    LVar0 := obj_is_carrying_obj_pid(dude_obj, 305) * 20;
    if ((local_var(10) + obj_is_carrying_obj_pid(dude_obj, 305)) > 10) then begin
        set_local_var(10, local_var(10) + obj_is_carrying_obj_pid(dude_obj, 305));
        give_exp_points(floor(250 / 5) + (dude_iq * floor(250 / 12)) + (dude_luck * floor(250 / 30)) + (floor(250 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(250 / 5) + (dude_iq * floor(250 / 12)) + (dude_luck * floor(250 / 30)) + (floor(250 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
        display_msg(message_str(SCRIPT_STTEXT, 810));
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 50);
        set_global_var(GVAR_TOWN_REP_THE_DEN, global_var(GVAR_TOWN_REP_THE_DEN) + 15);
        if (global_var(GVAR_KARMA_SPASITEL) == 0) then begin
            set_global_var(GVAR_KARMA_SPASITEL, 1);
            give_exp_points(floor(2000 / 5) + (dude_iq * floor(2000 / 12)) + (dude_luck * floor(2000 / 30)) + (floor(2000 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4))));
            display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(2000 / 5) + (dude_iq * floor(2000 / 12)) + (dude_luck * floor(2000 / 30)) + (floor(2000 / 75) * (((dude_luck - 4) * 4) - (difficulty_level * 4)))) + message_str(SCRIPT_STTEXT, 144));
            set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 200);
        end
        set_global_var(GVAR_MODOC_MESSAGE, 1);
        while (obj_is_carrying_obj_pid(dude_obj, 305) != 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 305));
        end
        item_caps_adjust(dude_obj, LVar0);
        play_sfx("LEVELUP");
        Reply(mstr(760) + "" + LVar0 + "" + mstr(762));
        giq_option(1, NAME, 764, Node999, NEUTRAL_REACTION);
    end
    else begin
        set_local_var(10, local_var(10) + obj_is_carrying_obj_pid(dude_obj, 305));
        while (obj_is_carrying_obj_pid(dude_obj, 305) != 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 305));
        end
        set_global_var(GVAR_TOWN_REP_THE_DEN, global_var(GVAR_TOWN_REP_THE_DEN) + 5);
        item_caps_adjust(dude_obj, LVar0);
        Reply(mstr(760) + "" + LVar0 + "" + mstr(761));
        giq_option(1, NAME, 763, Node999, NEUTRAL_REACTION);
    end
end

procedure NodeQA
begin
    set_global_var(GVAR_HOSTILE_SLAVE_COUNT, 1);
    set_local_var(8, game_time_in_seconds);
end

procedure NodeStartBono
begin
    game_ui_disable;
    add_timer_event(self_obj, 1, 3);
end

procedure NodeStartBonoSpeach
begin
    if (global_var(GVAR_HOSTILE_SLAVE_COUNT) == 13) then begin
        fadeOut(700);
        game_ui_enable;
        set_global_var(GVAR_HOSTILE_SLAVE_COUNT, 14);
        anim(dude_obj, 1000, 1);
        fadeIn(700);
        dialogue_system_enter;
    end
    else begin
        fadeOut(700);
        set_global_var(GVAR_HOSTILE_SLAVE_COUNT, 13);
        move_to(dude_obj, 21921, 0);
        anim(dude_obj, 1000, 2);
        fadeIn(700);
        add_timer_event(self_obj, 30, 2);
    end
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end
