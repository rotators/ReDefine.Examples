variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable max_distance;
variable animation_is_called;
variable distance_to_walk;
variable time_to_work;
variable time_to_repose;
variable work_tile_chois;
variable repose_tile_chois;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013a;
procedure Node013b;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node999;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(40, 60));
        set_local_var(5, random(50, 70));
        set_local_var(6, random(-10, 20));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 1);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TARTAR_MEN);
        max_distance := random(15, 20);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(29, 76), 1);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(GVAR_TOWN_REP_ARROYO) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(random(6, 9));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(random(1, 5));
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if ((global_var(GVAR_SLAVE_RUN) == 1) or (global_var(GVAR_PIP_BOY_ANNA_DIARY) == 1)) then begin
        start_gdialog(35, self_obj, -1, -1, -1);
        gsay_start;
        call Node010();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (global_var(GVAR_PLAYER_MARRIED) >= 3) then begin
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 120) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 121) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 122) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 123) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 129) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 391)) then begin
                float_msg(self_obj, message_str(SCRIPT_STTEXT, random(933, 935)), FLOAT_MSG_NORMAL);
            end
            else begin
                if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 394) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(930, 932)), FLOAT_MSG_NORMAL);
                end
            end
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) > 0) then begin
                dude_objective_reputation := (global_var(GVAR_TOWN_REP_ARROYO) * 30) + global_var(GVAR_PLAYER_REPUTATION) - (20 * global_var(GVAR_CHILDKILLER_REPUTATION));
            end
            else begin
                dude_objective_reputation := (global_var(GVAR_TOWN_REP_ARROYO) * 30) + global_var(GVAR_PLAYER_REPUTATION) - (20 * global_var(GVAR_CHILDKILLER_REPUTATION));
            end
            if ((dude_objective_reputation + local_var(6)) >= 300) then begin
                self_subjective_reaction := 1;
            end
            else begin
                if (((dude_objective_reputation + local_var(6)) >= -300) and ((dude_objective_reputation + local_var(6)) < 300)) then begin
                    self_subjective_reaction := 0;
                end
                else begin
                    self_subjective_reaction := -1;
                end
            end
            if (not(anim_busy(self_obj))) then begin
                anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
            end
            if (self_subjective_reaction == 1) then begin
                float_msg(self_obj, mstr(random(1000, 1009)), FLOAT_MSG_GREEN);
            end
            if (self_subjective_reaction == 0) then begin
                float_msg(self_obj, mstr(random(1010, 1019)), FLOAT_MSG_NORMAL);
            end
            if (self_subjective_reaction == -1) then begin
                float_msg(self_obj, mstr(random(1020, 1029)), FLOAT_MSG_RED);
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 1);
        if ((47 == 50) or (47 == 59)) then begin
            set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) - 3);
        end
        else begin
            set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
                if (global_var(GVAR_VAULT_CITIZENSHIP) < get_pc_stat(PCSTAT_level)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 3);
                    end
                    else begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, global_var(GVAR_QUEST_FIND_THOMAS) + 1);
                    end
                    if (global_var(GVAR_QUEST_FIND_THOMAS) >= (2 * get_pc_stat(PCSTAT_level))) then begin
                        set_global_var(GVAR_QUEST_FIND_THOMAS, 0);
                        set_global_var(GVAR_VAULT_CITIZENSHIP, global_var(GVAR_VAULT_CITIZENSHIP) + 1);
                        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
                        display_msg(message_str(SCRIPT_STTEXT, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 245) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(SCRIPT_STTEXT, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((dude_luck - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(206, 209)), FLOAT_MSG_RED);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(SCRIPT_STTEXT, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_STTEXT, 204) + ((dude_skill(SKILL_STEAL) / 2) + (((3 * get_critter_stat(dude_obj, STAT_ag)) + (((dude_luck - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(SCRIPT_STTEXT, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    max_distance := random(15, 20);
    if (random(1, 2) == 1) then begin
        time_to_work := game_time_hour % 100;
        time_to_repose := time_to_work + random(5, 15);
        if (time_to_repose >= 60) then begin
            time_to_repose := random(0, 5);
        end
    end
    else begin
        time_to_repose := game_time_hour % 100;
        time_to_work := time_to_repose + random(2, 6);
        if (time_to_work >= 60) then begin
            time_to_work := random(0, 5);
        end
    end
    animation_is_called := 1;
    add_timer_event(self_obj, 1, 1);
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if (((game_time_hour % 100) >= time_to_work) and ((game_time_hour % 100) < time_to_repose) or (((game_time_hour % 100) >= time_to_work) and (time_to_work > time_to_repose)) or (((game_time_hour % 100) < time_to_work) and (time_to_work > time_to_repose))) then begin
            if ((game_time_hour % 100) >= time_to_repose) then begin
                time_to_repose := time_to_work + random(5, 15);
                if (time_to_repose >= 60) then begin
                    time_to_repose := random(0, 5);
                end
                repose_tile_chois := 0;
            end
            if ((tile_num(self_obj) != 32544) and (tile_num(self_obj) != 29957) and (tile_num(self_obj) != 27559)) then begin
                work_tile_chois := random(1, 3);
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                if (work_tile_chois == 1) then begin
                    if (tile_num(self_obj) != 32544) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), 32544) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 32544), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, 32544, -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                if (work_tile_chois == 2) then begin
                    if (tile_num(self_obj) != 29957) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), 29957) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 29957), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, 29957, -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                if (work_tile_chois == 3) then begin
                    if (tile_num(self_obj) != 27559) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), 27559) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 27559), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, 27559, -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                reg_anim_func(3, 0);
            end
            else begin
                if (tile_num(self_obj) == 32544) then begin
                    anim(self_obj, 1000, 5);
                end
                if (tile_num(self_obj) == 29957) then begin
                    anim(self_obj, 1000, 0);
                end
                if (tile_num(self_obj) == 27559) then begin
                    anim(self_obj, 1000, 5);
                end
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                if (random(1, 2) == 1) then begin
                    reg_anim_animate(self_obj, 0, -1);
                end
                if (random(1, 3) == 1) then begin
                    reg_anim_animate(self_obj, 10, -1);
                end
                reg_anim_animate(self_obj, 11, -1);
                if (random(1, 4) == 1) then begin
                    reg_anim_animate(self_obj, 16, -1);
                    reg_anim_animate(self_obj, 0, -1);
                end
                if (random(1, 2) == 1) then begin
                    reg_anim_animate(self_obj, 0, -1);
                end
                reg_anim_func(3, 0);
            end
        end
        else begin
            if ((game_time_hour % 100) >= time_to_work) then begin
                time_to_work := time_to_repose + random(2, 6);
            end
            if (time_to_work >= 60) then begin
                time_to_work := random(0, 2);
            end
            if (repose_tile_chois == 0) then begin
                repose_tile_chois := random(1, 2);
                if (repose_tile_chois == 1) then begin
                    if (tile_distance(tile_num(self_obj), 29741) >= 30) then begin
                        if (tile_num(self_obj) != tile_num_in_direction(29741, random(0, 5), random(2, 6))) then begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(29741, random(0, 5), random(2, 6))) >= 25) then begin
                                reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), tile_num_in_direction(29741, random(0, 5), random(2, 6))), random(12, 22)), -1);
                            end
                            else begin
                                reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(29741, random(0, 5), random(2, 6)), -1);
                            end
                            reg_anim_func(3, 0);
                        end
                    end
                    else begin
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(5, 15)), 0);
                    end
                end
                else begin
                    if (tile_distance(tile_num(self_obj), 29741) >= 30) then begin
                        if (tile_num(self_obj) != tile_num_in_direction(29741, random(0, 5), random(2, 6))) then begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(29741, random(0, 5), random(2, 6))) >= 25) then begin
                                reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), tile_num_in_direction(29741, random(0, 5), random(2, 6))), random(12, 22)), -1);
                            end
                            else begin
                                reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(29741, random(0, 5), random(2, 6)), -1);
                            end
                            reg_anim_func(3, 0);
                        end
                    end
                    else begin
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(5, 15)), 0);
                    end
                end
            end
        end
        animation_is_called := 0;
    end
end

procedure Node010
begin
    Reply(100);
    giq_option(1, NAME, 101, Node011, NEUTRAL_REACTION);
    if (global_var(GVAR_SLAVE_RUN) == 1) then begin
        giq_option(1, NAME, 102, Node012, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 103, Node999, NEUTRAL_REACTION);
    if (global_var(GVAR_PIP_BOY_ANNA_DIARY) == 1) then begin
        giq_option(1, NAME, 104, Node014, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_PIP_BOY_ANNA_DIARY) == 1) and obj_carrying_pid_obj(dude_obj, 292)) then begin
        if ((global_var(GVAR_TORR_DEAD) + obj_is_carrying_obj_pid(dude_obj, 292)) >= 12) then begin
            giq_option(1, NAME, 105, Node016, NEUTRAL_REACTION);
        end
        else begin
            giq_option(1, NAME, 105, Node015, NEUTRAL_REACTION);
        end
    end
end

procedure Node011
begin
    Reply(110);
    giq_option(1, NAME, 111, Node999, NEUTRAL_REACTION);
    if (global_var(GVAR_SLAVE_RUN) == 1) then begin
        giq_option(1, NAME, 112, Node012, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_PIP_BOY_ANNA_DIARY) == 1) then begin
        giq_option(1, NAME, 104, Node014, NEUTRAL_REACTION);
    end
end

procedure Node012
begin
    Reply(120);
    giq_option(1, NAME, 121, Node013a, NEUTRAL_REACTION);
    if (global_var(GVAR_KILL_EVIL_PLANTS) == 1) then begin
        giq_option(1, NAME, 122, Node013b, NEUTRAL_REACTION);
    end
end

procedure Node013a
begin
    Reply(1301);
    giq_option(1, NAME, 132, Node013b, NEUTRAL_REACTION);
    giq_option(1, NAME, 133, Node999, NEUTRAL_REACTION);
end

procedure Node013b
begin
    set_global_var(GVAR_KILL_EVIL_PLANTS, 2);
    Reply(1302);
    giq_option(1, NAME, 131, Node013a, NEUTRAL_REACTION);
    giq_option(1, NAME, 133, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(140);
    giq_option(1, NAME, 141, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 142, Node017, NEUTRAL_REACTION);
end

procedure Node015
begin
    set_global_var(GVAR_TORR_DEAD, global_var(GVAR_TORR_DEAD) + obj_is_carrying_obj_pid(dude_obj, 292));
    while (obj_is_carrying_obj_pid(dude_obj, 292) != 0) do begin
        rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 292));
    end
    Reply(mstr(150) + (12 - global_var(GVAR_TORR_DEAD)) + mstr(151));
    giq_option(1, NAME, 152, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    set_global_var(GVAR_PIP_BOY_ANNA_DIARY, 2);
    set_global_var(GVAR_TORR_DEAD, global_var(GVAR_TORR_DEAD) + obj_is_carrying_obj_pid(dude_obj, 292));
    while (obj_is_carrying_obj_pid(dude_obj, 292) != 0) do begin
        rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 292));
    end
    Reply(160);
    giq_option(1, NAME, 161, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 162, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    if (global_var(GVAR_PLAYER_REPUTATION) > 0) then begin
        dude_objective_reputation := (global_var(GVAR_TOWN_REP_ARROYO) * 30) + global_var(GVAR_PLAYER_REPUTATION) - (20 * global_var(GVAR_CHILDKILLER_REPUTATION));
    end
    else begin
        dude_objective_reputation := (global_var(GVAR_TOWN_REP_ARROYO) * 30) + global_var(GVAR_PLAYER_REPUTATION) - (20 * global_var(GVAR_CHILDKILLER_REPUTATION));
    end
    if ((dude_objective_reputation + local_var(6)) >= 300) then begin
        self_subjective_reaction := 1;
    end
    else begin
        if (((dude_objective_reputation + local_var(6)) >= -300) and ((dude_objective_reputation + local_var(6)) < 300)) then begin
            self_subjective_reaction := 0;
        end
        else begin
            self_subjective_reaction := -1;
        end
    end
    persuade_chance := floor(((dude_charisma * 10) + dude_skill(SKILL_SPEECH) + local_var(5)) / 5) + (10 * self_subjective_reaction);
    if (random(0, 120) <= persuade_chance) then begin
        Reply(1701);
        giq_option(1, NAME, 171, Node999, NEUTRAL_REACTION);
        giq_option(1, NAME, 173, Node018, NEUTRAL_REACTION);
    end
    else begin
        Reply(1702);
        giq_option(1, NAME, 172, Node999, NEUTRAL_REACTION);
    end
end

procedure Node018
begin
    set_map_var(1, 1);
    set_global_var(GVAR_PIP_BOY_ANNA_DIARY, 2);
end

procedure Node999
begin
end
