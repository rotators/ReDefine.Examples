diff --git a/Mods/Olympus2207/Original/SCEDEASY.ssl b/Mods/Olympus2207/ReDefine/SCEDEASY.ssl
index d8dc286..5c8a8b3 100644
--- a/Mods/Olympus2207/Original/SCEDEASY.ssl
+++ b/Mods/Olympus2207/ReDefine/SCEDEASY.ssl
@@ -59,8 +59,8 @@ end
 
 procedure damage_p_proc
 begin
-    if ((fixed_param != 0) and (metarule(49, target_obj) == 6)) then begin
-        display_msg(message_str(10, 31));
+    if ((fixed_param != 0) and (weapon_dmg_type(target_obj) == 6)) then begin
+        display_msg(message_str(SCRIPT_STTEXT, 31));
     end
 end
 
@@ -74,8 +74,8 @@ begin
         end
         else begin
             set_local_var(4, 0);
-            add_obj_to_inven(dude_obj, create_object_sid(48, 1, 2, -1));
-            display_msg(message_str(10, 32));
+            add_obj_to_inven(dude_obj, create_object(48, 1, 2));
+            display_msg(message_str(SCRIPT_STTEXT, 32));
         end
     end
     if (local_var(4) == 1) then begin
@@ -86,11 +86,11 @@ begin
         if (local_var(0) == 0) then begin
             script_overrides;
             if (source_obj == dude_obj) then begin
-                display_msg(message_str(10, random(110, 113)));
+                display_msg(message_str(SCRIPT_STTEXT, random(110, 113)));
             end
             else begin
-                float_msg(source_obj, message_str(10, random(40, 43)), 12);
-                animate_move_obj_to_tile(critter_source, tile_num_in_direction(tile_num(critter_source), (has_trait(1, critter_source, 10) + 3) % 6, 1), 0 bwor 16);
+                float_msg(source_obj, message_str(SCRIPT_STTEXT, random(40, 43)), FLOAT_MSG_LIGHT_GREY);
+                animate_move_obj_to_tile(critter_source, tile_num_in_direction(tile_num(critter_source), (obj_get_rot(critter_source) + 3) % 6, 1), 0 bwor 16);
             end
         end
     end
@@ -114,22 +114,22 @@ begin
             end
             if ((used_item == 244) or (used_item == 82) and (local_var(6) == 0)) then begin
                 set_local_var(6, 1);
-                display_msg(message_str(10, 39));
+                display_msg(message_str(SCRIPT_STTEXT, 39));
             end
         end
         if (used_item == 48) then begin
             if (local_var(0) == 0) then begin
-                display_msg(message_str(10, 86));
+                display_msg(message_str(SCRIPT_STTEXT, 86));
             end
             else begin
                 if ((local_var(4) == 1) or (local_var(7) == 1)) then begin
-                    display_msg(message_str(10, 88));
+                    display_msg(message_str(SCRIPT_STTEXT, 88));
                 end
                 else begin
                     set_local_var(7, 1);
-                    set_local_var(5, has_skill(dude_obj, 11) + ((get_critter_stat(dude_obj, 6) - 4) * 4));
+                    set_local_var(5, dude_skill(SKILL_TRAPS) + ((dude_luck - 4) * 4));
                     rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 48));
-                    display_msg(message_str(10, 87));
+                    display_msg(message_str(SCRIPT_STTEXT, 87));
                 end
             end
         end
@@ -161,19 +161,19 @@ begin
     if ((action_being_used == 11) and (local_var(7) == 1)) then begin
         script_overrides;
         set_local_var(4, 0);
-        add_obj_to_inven(dude_obj, create_object_sid(48, 1, 2, -1));
-        display_msg(message_str(10, 32));
+        add_obj_to_inven(dude_obj, create_object(48, 1, 2));
+        display_msg(message_str(SCRIPT_STTEXT, 32));
     end
     if ((action_being_used == 11) and (local_var(4) == 1)) then begin
-        if ((has_skill(dude_obj, 11) + get_critter_stat(dude_obj, 1)) >= local_var(5)) then begin
+        if ((dude_skill(SKILL_TRAPS) + dude_perception) >= local_var(5)) then begin
             script_overrides;
             set_local_var(4, 0);
-            add_obj_to_inven(dude_obj, create_object_sid(48, 1, 2, -1));
-            display_msg(message_str(10, 32));
+            add_obj_to_inven(dude_obj, create_object(48, 1, 2));
+            display_msg(message_str(SCRIPT_STTEXT, 32));
             if (local_var(8) == 0) then begin
                 set_local_var(8, 1);
-                give_exp_points(floor(LVar0 / 5) + (get_critter_stat(dude_obj, 4) * floor(LVar0 / 12)) + (get_critter_stat(dude_obj, 6) * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (get_critter_stat(dude_obj, 6) - 4) * 4));
-                display_msg(message_str(10, random(140, 143)) + (floor(LVar0 / 5) + (get_critter_stat(dude_obj, 4) * floor(LVar0 / 12)) + (get_critter_stat(dude_obj, 6) * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (get_critter_stat(dude_obj, 6) - 4) * 4)) + message_str(10, 144));
+                give_exp_points(floor(LVar0 / 5) + (dude_iq * floor(LVar0 / 12)) + (dude_luck * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (dude_luck - 4) * 4));
+                display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(LVar0 / 5) + (dude_iq * floor(LVar0 / 12)) + (dude_luck * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (dude_luck - 4) * 4)) + message_str(SCRIPT_STTEXT, 144));
             end
         end
     end
@@ -194,7 +194,7 @@ begin
     variable LVar0 := 0;
     LVar0 := random(20, 30) * 2;
     if (source_obj != dude_obj) then begin
-        if (has_skill(source_obj, 9) >= local_var(1)) then begin
+        if (has_skill(source_obj, SKILL_LOCKPICK) >= local_var(1)) then begin
             obj_unlock(self_obj);
             set_local_var(0, 1);
         end
@@ -202,39 +202,39 @@ begin
     else begin
         if (local_var(0) == 1) then begin
             if (obj_is_open(self_obj)) then begin
-                display_msg(message_str(10, 94));
+                display_msg(message_str(SCRIPT_STTEXT, 94));
             end
             else begin
                 set_local_var(0, 0);
-                set_local_var(1, random(has_skill(dude_obj, 9) - 10, has_skill(dude_obj, 9) - 1));
-                display_msg(message_str(10, 95));
-                float_msg(self_obj, message_str(10, 119), 9);
+                set_local_var(1, random(dude_skill(SKILL_LOCKPICK) - 10, dude_skill(SKILL_LOCKPICK) - 1));
+                display_msg(message_str(SCRIPT_STTEXT, 95));
+                float_msg(self_obj, message_str(SCRIPT_STTEXT, 119), FLOAT_MSG_WHITE);
             end
         end
         else begin
-            if (has_skill(dude_obj, 9) >= (local_var(1) - level_modifikator)) then begin
-                if (random(0, 100) < (4 + floor(has_skill(dude_obj, 9) / 2) + (2 * ((2 * get_critter_stat(dude_obj, 5)) - 9)) + (2 * (get_critter_stat(dude_obj, 4) - 5)) + floor(has_skill(dude_obj, 13) / 3) + ((get_critter_stat(dude_obj, 6) - 4) * 4) + sucsess_modifikator)) then begin
+            if (dude_skill(SKILL_LOCKPICK) >= (local_var(1) - level_modifikator)) then begin
+                if (random(0, 100) < (4 + floor(dude_skill(SKILL_LOCKPICK) / 2) + (2 * ((2 * get_critter_stat(dude_obj, STAT_ag)) - 9)) + (2 * (dude_iq - 5)) + floor(dude_skill(SKILL_REPAIR) / 3) + ((dude_luck - 4) * 4) + sucsess_modifikator)) then begin
                     obj_unlock(self_obj);
-                    float_msg(self_obj, message_str(10, random(100, 109)), 9);
+                    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(100, 109)), FLOAT_MSG_WHITE);
                     set_local_var(0, 1);
                     if (local_var(2) == 0) then begin
                         set_local_var(2, 1);
-                        give_exp_points(floor(LVar0 / 5) + (get_critter_stat(dude_obj, 4) * floor(LVar0 / 12)) + (get_critter_stat(dude_obj, 6) * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (get_critter_stat(dude_obj, 6) - 4) * 4));
-                        display_msg(message_str(10, random(140, 143)) + (floor(LVar0 / 5) + (get_critter_stat(dude_obj, 4) * floor(LVar0 / 12)) + (get_critter_stat(dude_obj, 6) * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (get_critter_stat(dude_obj, 6) - 4) * 4)) + message_str(10, 144));
+                        give_exp_points(floor(LVar0 / 5) + (dude_iq * floor(LVar0 / 12)) + (dude_luck * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (dude_luck - 4) * 4));
+                        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(LVar0 / 5) + (dude_iq * floor(LVar0 / 12)) + (dude_luck * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (dude_luck - 4) * 4)) + message_str(SCRIPT_STTEXT, 144));
                     end
                 end
                 else begin
-                    if (random(1, 100) <= (random(15, 25) - ((get_critter_stat(dude_obj, 6) - 4) * 4))) then begin
-                        critter_dmg(dude_obj, random(12, 20) - get_critter_stat(dude_obj, 6), 4);
-                        display_msg(message_str(10, random(26, 29)));
+                    if (random(1, 100) <= (random(15, 25) - ((dude_luck - 4) * 4))) then begin
+                        critter_dmg(dude_obj, random(12, 20) - dude_luck, DMG_electrical);
+                        display_msg(message_str(SCRIPT_STTEXT, random(26, 29)));
                     end
                     else begin
-                        display_msg(message_str(10, 114));
+                        display_msg(message_str(SCRIPT_STTEXT, 114));
                     end
                 end
             end
             else begin
-                display_msg(message_str(10, random(120, 123)));
+                display_msg(message_str(SCRIPT_STTEXT, random(120, 123)));
             end
         end
     end
@@ -244,20 +244,20 @@ end
 
 procedure study
 begin
-    if ((get_critter_stat(dude_obj, 4) >= 7) or ((floor(has_skill(dude_obj, 12) / 2) + floor(has_skill(dude_obj, 13) / 2) + floor((get_critter_stat(dude_obj, 6) - 4) * 4 / 2)) >= local_var(1))) then begin
+    if ((dude_iq >= 7) or ((floor(dude_skill(SKILL_SCIENCE) / 2) + floor(dude_skill(SKILL_REPAIR) / 2) + floor((dude_luck - 4) * 4 / 2)) >= local_var(1))) then begin
         if (local_var(6) == 0) then begin
-            display_msg(message_str(10, 124) + local_var(1) + message_str(10, 125) + message_str(10, 38));
+            display_msg(message_str(SCRIPT_STTEXT, 124) + local_var(1) + message_str(SCRIPT_STTEXT, 125) + message_str(SCRIPT_STTEXT, 38));
         end
         else begin
-            display_msg(message_str(10, 124) + local_var(1) + message_str(10, 125) + message_str(10, 38));
+            display_msg(message_str(SCRIPT_STTEXT, 124) + local_var(1) + message_str(SCRIPT_STTEXT, 125) + message_str(SCRIPT_STTEXT, 38));
         end
     end
     else begin
         if (local_var(6) == 0) then begin
-            display_msg(message_str(10, 126) + message_str(10, 38));
+            display_msg(message_str(SCRIPT_STTEXT, 126) + message_str(SCRIPT_STTEXT, 38));
         end
         else begin
-            display_msg(message_str(10, 126));
+            display_msg(message_str(SCRIPT_STTEXT, 126));
         end
     end
 end
@@ -276,10 +276,10 @@ procedure KA_BOOM
 begin
     set_local_var(4, 0);
     if (critter_source == dude_obj) then begin
-        critter_dmg(critter_source, local_var(5) - ((get_critter_stat(dude_obj, 6) - 4) * 4), 4);
+        critter_dmg(critter_source, local_var(5) - ((dude_luck - 4) * 4), DMG_electrical);
     end
     else begin
-        critter_dmg(critter_source, local_var(5) + ((get_critter_stat(dude_obj, 6) - 4) * 4), 4);
+        critter_dmg(critter_source, local_var(5) + ((dude_luck - 4) * 4), DMG_electrical);
     end
     if (not(obj_is_open(self_obj))) then begin
         obj_open(self_obj);
@@ -297,35 +297,35 @@ end
 
 procedure welcome_screen
 begin
-    if ((get_critter_stat(dude_obj, 4) >= 7) or ((floor(has_skill(dude_obj, 12) / 2) + floor(has_skill(dude_obj, 13) / 2) + floor((get_critter_stat(dude_obj, 6) - 4) * 4 / 2)) >= local_var(1))) then begin
-        gsay_reply(10, message_str(10, 33) + local_var(1) + message_str(10, 125));
+    if ((dude_iq >= 7) or ((floor(dude_skill(SKILL_SCIENCE) / 2) + floor(dude_skill(SKILL_REPAIR) / 2) + floor((dude_luck - 4) * 4 / 2)) >= local_var(1))) then begin
+        gsay_reply(SCRIPT_STTEXT, message_str(SCRIPT_STTEXT, 33) + local_var(1) + message_str(SCRIPT_STTEXT, 125));
     end
     else begin
-        gsay_reply(10, 34);
+        gsay_reply(SCRIPT_STTEXT, 34);
     end
-    gsay_option(10, 11, first_step, 50);
-    gsay_option(10, random(12, 14), quitter, 50);
+    giq_option(1, SCRIPT_STTEXT, 11, first_step, NEUTRAL_REACTION);
+    giq_option(1, SCRIPT_STTEXT, random(12, 14), quitter, NEUTRAL_REACTION);
 end
 
 procedure first_step
 begin
     right_variant := random(1, 3);
     variant_position := random(16, 18);
-    gsay_reply(10, 15);
+    gsay_reply(SCRIPT_STTEXT, 15);
     if (right_variant == 1) then begin
-        gsay_option(10, variant_position, second_step, 50);
+        giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
     end
     else begin
-        gsay_option(10, variant_position, shock, 50);
+        giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
     end
     first_position := variant_position;
     if (variant_position == 16) then begin
         variant_position := random(17, 18);
         if (right_variant == 2) then begin
-            gsay_option(10, variant_position, second_step, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
         end
         else begin
-            gsay_option(10, variant_position, shock, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
         end
     end
     else begin
@@ -333,29 +333,29 @@ begin
             if (random(1, 2) == 1) then begin
                 variant_position := 16;
                 if (right_variant == 2) then begin
-                    gsay_option(10, variant_position, second_step, 50);
+                    giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
                 end
                 else begin
-                    gsay_option(10, variant_position, shock, 50);
+                    giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
                 end
             end
             else begin
                 variant_position := 18;
                 if (right_variant == 2) then begin
-                    gsay_option(10, variant_position, second_step, 50);
+                    giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
                 end
                 else begin
-                    gsay_option(10, variant_position, shock, 50);
+                    giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
                 end
             end
         end
         else begin
             variant_position := random(16, 17);
             if (right_variant == 2) then begin
-                gsay_option(10, variant_position, second_step, 50);
+                giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, variant_position, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
             end
         end
     end
@@ -364,141 +364,141 @@ begin
     if (third_position == 33) then begin
         variant_position := 18;
         if (right_variant == 3) then begin
-            gsay_option(10, variant_position, second_step, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
         end
         else begin
-            gsay_option(10, variant_position, shock, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
         end
     end
     if (third_position == 34) then begin
         variant_position := 17;
         if (right_variant == 3) then begin
-            gsay_option(10, variant_position, second_step, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
         end
         else begin
-            gsay_option(10, variant_position, shock, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
         end
     end
     if (third_position == 35) then begin
         variant_position := 16;
         if (right_variant == 3) then begin
-            gsay_option(10, variant_position, second_step, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
         end
         else begin
-            gsay_option(10, variant_position, shock, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
         end
     end
     third_position := variant_position;
-    gsay_option(10, random(12, 14), quitter, 50);
+    giq_option(1, SCRIPT_STTEXT, random(12, 14), quitter, NEUTRAL_REACTION);
 end
 
 procedure second_step
 begin
     second_right_variant := random(1, 2);
-    gsay_reply(10, 19);
+    gsay_reply(SCRIPT_STTEXT, 19);
     if (right_variant == 1) then begin
         if (first_position == 16) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 22, sucsess, 50);
-                gsay_option(10, 23, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 22, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 23, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 22, shock, 50);
-                gsay_option(10, 23, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 22, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 23, sucsess, NEUTRAL_REACTION);
             end
         end
         if (first_position == 17) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 24, sucsess, 50);
-                gsay_option(10, 25, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 24, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 25, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 24, shock, 50);
-                gsay_option(10, 25, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 24, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 25, sucsess, NEUTRAL_REACTION);
             end
         end
         if (first_position == 18) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 20, sucsess, 50);
-                gsay_option(10, 21, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 20, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 21, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 20, shock, 50);
-                gsay_option(10, 21, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 20, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 21, sucsess, NEUTRAL_REACTION);
             end
         end
     end
     if (right_variant == 2) then begin
         if (second_position == 16) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 22, sucsess, 50);
-                gsay_option(10, 23, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 22, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 23, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 22, shock, 50);
-                gsay_option(10, 23, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 22, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 23, sucsess, NEUTRAL_REACTION);
             end
         end
         if (second_position == 17) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 24, sucsess, 50);
-                gsay_option(10, 25, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 24, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 25, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 24, shock, 50);
-                gsay_option(10, 25, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 24, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 25, sucsess, NEUTRAL_REACTION);
             end
         end
         if (second_position == 18) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 20, sucsess, 50);
-                gsay_option(10, 21, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 20, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 21, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 20, shock, 50);
-                gsay_option(10, 21, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 20, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 21, sucsess, NEUTRAL_REACTION);
             end
         end
     end
     if (right_variant == 3) then begin
         if (third_position == 16) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 22, sucsess, 50);
-                gsay_option(10, 23, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 22, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 23, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 22, shock, 50);
-                gsay_option(10, 23, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 22, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 23, sucsess, NEUTRAL_REACTION);
             end
         end
         if (third_position == 17) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 24, sucsess, 50);
-                gsay_option(10, 25, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 24, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 25, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 24, shock, 50);
-                gsay_option(10, 25, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 24, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 25, sucsess, NEUTRAL_REACTION);
             end
         end
         if (third_position == 18) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 20, sucsess, 50);
-                gsay_option(10, 21, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 20, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 21, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 20, shock, 50);
-                gsay_option(10, 21, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 20, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 21, sucsess, NEUTRAL_REACTION);
             end
         end
     end
-    gsay_option(10, random(12, 14), quitter, 50);
+    giq_option(1, SCRIPT_STTEXT, random(12, 14), quitter, NEUTRAL_REACTION);
 end
 
 procedure shock
 begin
-    critter_dmg(dude_obj, random(10, 20) - get_critter_stat(dude_obj, 6), 4);
-    display_msg(message_str(10, random(26, 29)));
+    critter_dmg(dude_obj, random(10, 20) - dude_luck, DMG_electrical);
+    display_msg(message_str(SCRIPT_STTEXT, random(26, 29)));
 end
 
 procedure quitter
@@ -510,12 +510,11 @@ begin
     variable LVar0 := 0;
     LVar0 := random(20, 30) * 2;
     obj_unlock(self_obj);
-    float_msg(self_obj, message_str(10, random(100, 109)), 9);
+    float_msg(self_obj, message_str(SCRIPT_STTEXT, random(100, 109)), FLOAT_MSG_WHITE);
     set_local_var(0, 1);
     if (local_var(2) == 0) then begin
         set_local_var(2, 1);
-        give_exp_points(floor(LVar0 / 5) + (get_critter_stat(dude_obj, 4) * floor(LVar0 / 12)) + (get_critter_stat(dude_obj, 6) * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (get_critter_stat(dude_obj, 6) - 4) * 4));
-        display_msg(message_str(10, random(140, 143)) + (floor(LVar0 / 5) + (get_critter_stat(dude_obj, 4) * floor(LVar0 / 12)) + (get_critter_stat(dude_obj, 6) * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (get_critter_stat(dude_obj, 6) - 4) * 4)) + message_str(10, 144));
+        give_exp_points(floor(LVar0 / 5) + (dude_iq * floor(LVar0 / 12)) + (dude_luck * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (dude_luck - 4) * 4));
+        display_msg(message_str(SCRIPT_STTEXT, random(140, 143)) + (floor(LVar0 / 5) + (dude_iq * floor(LVar0 / 12)) + (dude_luck * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (dude_luck - 4) * 4)) + message_str(SCRIPT_STTEXT, 144));
     end
 end
-
