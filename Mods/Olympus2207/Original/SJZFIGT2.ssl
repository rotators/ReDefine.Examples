variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(7, has_trait(1, self_obj, 10));
        set_local_var(4, random(50, 70));
        set_local_var(5, random(30, 70));
        set_local_var(6, random(-10, 10));
        critter_add_trait(self_obj, 1, 6, 7);
        critter_add_trait(self_obj, 1, 5, 24);
    end
end

procedure critter_p_proc
begin
    if ((global_var(324) == 2) and (elevation(self_obj) != 2)) then begin
        move_to(self_obj, tile_num(self_obj), 2);
    end
    if ((global_var(324) == 4) and (elevation(self_obj) != 0)) then begin
        move_to(self_obj, tile_num(self_obj), 0);
    end
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        add_timer_event(self_obj, random(10, 40), 1);
        animation_is_called := 1;
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(52) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(145, random(6, 9)));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(145, random(1, 5)));
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
    script_overrides;
end

procedure talk_p_proc
begin
    script_overrides;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((52 == 50) or (52 == 59)) then begin
            set_global_var(52, global_var(52) - 3);
        end
        else begin
            set_global_var(52, global_var(52) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    script_overrides;
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    move_to(self_obj, local_var(3), elevation(self_obj));
    anim(self_obj, 1000, local_var(7));
    set_map_var(1, self_obj);
    if (random(0, 100) <= 50) then begin
        if (random(0, 100) <= 50) then begin
            if (random(0, 100) <= 50) then begin
                if (random(0, 100) <= 50) then begin
                    metarule3(107, self_obj, 16777244, 0);
                end
                else begin
                    metarule3(107, self_obj, 16777246, 0);
                end
            end
            else begin
                if (random(0, 100) <= 50) then begin
                    metarule3(107, self_obj, 16777250, 0);
                end
                else begin
                    metarule3(107, self_obj, 16777251, 0);
                end
            end
        end
        else begin
            if (random(0, 100) <= 50) then begin
                if (random(0, 100) <= 50) then begin
                    metarule3(107, self_obj, 16777275, 0);
                end
                else begin
                    metarule3(107, self_obj, 16777276, 0);
                end
            end
            else begin
                if (random(0, 100) <= 50) then begin
                    metarule3(107, self_obj, 16777277, 0);
                end
                else begin
                    metarule3(107, self_obj, 16777281, 0);
                end
            end
        end
    end
    else begin
        if (random(0, 100) <= 50) then begin
            if (random(0, 100) <= 50) then begin
                if (random(0, 100) <= 50) then begin
                    metarule3(107, self_obj, 16777282, 0);
                end
                else begin
                    metarule3(107, self_obj, 16777283, 0);
                end
            end
            else begin
                if (random(0, 100) <= 50) then begin
                    metarule3(107, self_obj, 16777282, 0);
                end
                else begin
                    metarule3(107, self_obj, 16777281, 0);
                end
            end
        end
        else begin
            if (random(0, 100) <= 50) then begin
                if (random(0, 100) <= 50) then begin
                    metarule3(107, self_obj, 16777277, 0);
                end
                else begin
                    metarule3(107, self_obj, 16777276, 0);
                end
            end
            else begin
                if (random(0, 100) <= 50) then begin
                    metarule3(107, self_obj, 16777275, 0);
                end
                else begin
                    metarule3(107, self_obj, 16777251, 0);
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized) and (anim_busy(self_obj) == 0)) then begin
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        if (random(0, 100) <= 50) then begin
            reg_anim_animate(self_obj, 16, -1);
        end
        else begin
            reg_anim_animate(self_obj, 17, -1);
        end
        reg_anim_func(3, 0);
        add_timer_event(map_var(0), 7, 2);
        animation_is_called := 0;
        if (random(0, 100) <= 25) then begin
            float_msg(self_obj, message_str(145, random(10, 15)), 2);
        end
    end
    if ((fixed_param == 2) and not(combat_is_initialized) and (anim_busy(self_obj) == 0)) then begin
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        if (random(0, 100) <= 25) then begin
            reg_anim_animate(self_obj, 20, -1);
            reg_anim_animate(self_obj, 37, -1);
        end
        else begin
            reg_anim_animate(self_obj, 14, -1);
        end
        reg_anim_func(3, 0);
        animation_is_called := 0;
        if (random(0, 100) <= 25) then begin
            float_msg(self_obj, message_str(145, random(16, 19)), 0);
        end
    end
end

