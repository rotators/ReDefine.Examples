variable steal_perk;
variable steal_gloves;
variable barter_mod;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable trading_container;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node010;
procedure Node010a;
procedure Node010b;
procedure Node011;
procedure Node011b;
procedure Node012;
procedure Node014;
procedure Node014a;
procedure Node013;
procedure Node013b;
procedure Node013c;
procedure Node013d;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node023a;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node026a;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node999;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(70, 80));
        set_local_var(5, random(30, 40));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, 1, 6, 8);
        critter_add_trait(self_obj, 1, 5, 26);
        add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(20, 100));
        if (random(0, 100) <= 90) then begin
            add_obj_to_inven(self_obj, create_object_sid(220, 1, 2, -1));
        end
        if (random(0, 100) <= 70) then begin
            add_obj_to_inven(self_obj, create_object_sid(220, 1, 2, -1));
        end
        if (random(0, 100) <= 60) then begin
            add_obj_to_inven(self_obj, create_object_sid(220, 1, 2, -1));
        end
        if (random(0, 100) <= 60) then begin
            add_obj_to_inven(self_obj, create_object_sid(221, 1, 2, -1));
        end
        if (random(0, 100) <= 50) then begin
            add_obj_to_inven(self_obj, create_object_sid(225, 1, 2, -1));
        end
        if (random(0, 100) <= 50) then begin
            add_obj_to_inven(self_obj, create_object_sid(231, 1, 2, -1));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(15, 30), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if ((map_var(3) == 1) and (global_var(148) == 2)) then begin
        set_map_var(3, 0);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(50) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(201, 2));
    end
    else begin
        display_msg(message_str(201, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(201, 1));
    end
    else begin
        display_msg(message_str(201, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if (map_var(3) == 1) then begin
        float_msg(self_obj, message_str(201, random(5, 7)), 0);
    end
    else begin
        start_gdialog(201, self_obj, -1, -1, -1);
        gsay_start;
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((50 == 50) or (50 == 59)) then begin
            set_global_var(50, global_var(50) - 3);
        end
        else begin
            set_global_var(50, global_var(50) - 6);
        end
    end
    set_global_var(118, global_var(118) bwor 1024);
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if (has_skill(dude_obj, 10) >= 100) then begin
            if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
                script_overrides;
                set_sfall_global(13, 1);
            end
            else begin
                if (has_trait(2, dude_obj, 13)) then begin
                    if (global_var(81) < get_pc_stat(1)) then begin
                        if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                            set_global_var(98, global_var(98) + 3);
                        end
                        else begin
                            set_global_var(98, global_var(98) + 1);
                        end
                        if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                            set_global_var(98, 0);
                            set_global_var(81, global_var(81) + 1);
                            critter_mod_skill(dude_obj, 10, 1);
                            display_msg(message_str(10, 410));
                        end
                    end
                end
                steal_perk := 0;
                steal_gloves := 0;
                if (has_trait(0, dude_obj, 37) != 0) then begin
                    steal_perk := steal_perk + 15;
                end
                if (has_trait(0, dude_obj, 33) != 0) then begin
                    steal_perk := steal_perk + 30;
                end
                if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                    steal_gloves := 10;
                end
                if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                    display_msg(message_str(10, random(145, 148)));
                end
                else begin
                    script_overrides;
                    if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                        float_msg(self_obj, message_str(10, random(206, 209)), 2);
                        set_local_var(2, 1);
                    end
                    else begin
                        display_msg(message_str(10, random(200, 203)));
                    end
                end
            end
        end
        else begin
            script_overrides;
            if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                float_msg(self_obj, message_str(10, random(206, 209)), 2);
                set_local_var(2, 1);
            end
            else begin
                display_msg(message_str(10, random(200, 203)));
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (not(metarule(22, 0)) == 1) then begin
        if (not(tile_contains_obj_pid(1, 2, 250))) then begin
            trading_container := create_object_sid(250, 1, 2, -1);
        end
        else begin
            trading_container := tile_contains_pid_obj(1, 2, 250);
        end
        if ((game_time_in_seconds - local_var(8)) >= (3600 * 24 * random(4, 6))) then begin
            move_obj_inven_to_obj(self_obj, trading_container);
            add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(20, 100));
            if (random(0, 100) <= 90) then begin
                add_obj_to_inven(self_obj, create_object_sid(220, 1, 2, -1));
            end
            if (random(0, 100) <= 70) then begin
                add_obj_to_inven(self_obj, create_object_sid(220, 1, 2, -1));
            end
            if (random(0, 100) <= 60) then begin
                add_obj_to_inven(self_obj, create_object_sid(220, 1, 2, -1));
            end
            if (random(0, 100) <= 60) then begin
                add_obj_to_inven(self_obj, create_object_sid(221, 1, 2, -1));
            end
            if (random(0, 100) <= 50) then begin
                add_obj_to_inven(self_obj, create_object_sid(225, 1, 2, -1));
            end
            if (random(0, 100) <= 50) then begin
                add_obj_to_inven(self_obj, create_object_sid(231, 1, 2, -1));
            end
            if (random(0, 100) <= 40) then begin
                add_obj_to_inven(self_obj, create_object_sid(226, 1, 2, -1));
            end
            if (random(0, 100) <= 35) then begin
                add_obj_to_inven(self_obj, create_object_sid(222, 1, 2, -1));
            end
            if (random(0, 100) <= 30) then begin
                add_obj_to_inven(self_obj, create_object_sid(229, 1, 2, -1));
            end
            if (random(0, 100) <= 20) then begin
                add_obj_to_inven(self_obj, create_object_sid(232, 1, 2, -1));
            end
            if (random(0, 100) <= 50) then begin
                add_obj_to_inven(self_obj, create_object_sid(228, 1, 2, -1));
            end
            if (random(0, 100) <= 60) then begin
                add_obj_to_inven(self_obj, create_object_sid(239, 1, 2, -1));
            end
            if (random(0, 100) <= 60) then begin
                add_obj_to_inven(self_obj, create_object_sid(238, 1, 2, -1));
            end
            if (get_pc_stat(1) <= 6) then begin
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object_sid(226, 1, 2, -1));
                end
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object_sid(225, 1, 2, -1));
                end
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object_sid(227, 1, 2, -1));
                end
            end
            else begin
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object_sid(226, 1, 2, -1));
                end
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object_sid(225, 1, 2, -1));
                end
                if (random(0, 100) <= 33) then begin
                    add_obj_to_inven(self_obj, create_object_sid(227, 1, 2, -1));
                end
                else begin
                    add_obj_to_inven(self_obj, create_object_sid(221, 1, 2, -1));
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        anim(self_obj, 1000, 3);
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 11, -1);
        reg_anim_func(3, 0);
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    set_local_var(7, 1);
    gsay_reply(201, 10);
    gsay_option(201, message_str(201, 11) + obj_name(dude_obj) + message_str(201, 12), Node002, 50);
end

procedure Node002
begin
    gsay_reply(201, 20);
    gsay_option(201, 21, Node003, 50);
end

procedure Node003
begin
    gsay_reply(201, 30);
    gsay_option(201, 31, Node004, 50);
    gsay_option(201, 32, Node010, 50);
end

procedure Node004
begin
    gsay_reply(201, 40);
    gsay_option(201, 41, Node999, 50);
end

procedure Node010
begin
    gsay_reply(201, 100);
    if (get_critter_stat(dude_obj, 35) < get_critter_stat(dude_obj, 7)) then begin
        gsay_option(201, 101, Node011, 50);
    end
    if (global_var(148) == 1) then begin
        if (global_var(285) == 2) then begin
            gsay_option(201, 103, Node028, 50);
        end
        else begin
            gsay_option(201, 102, Node015, 50);
        end
    end
    gsay_option(201, 104, NodeBarter, 50);
    gsay_option(201, 105, Node033, 50);
    if (critter_state(dude_obj) bwand (16 bwor 32)) then begin
        gsay_option(201, 108, Node011b, 50);
    end
    if (critter_state(dude_obj) bwand (4 bwor 8)) then begin
        gsay_option(201, 109, Node011b, 50);
    end
    if ((global_var(217) == 0) and (global_var(202) == 1)) then begin
        gsay_option(201, 106, Node010a, 50);
    end
    gsay_option(201, 107, Node999, 50);
end

procedure Node010a
begin
    gsay_reply(201, 113);
    gsay_option(201, 114, Node010b, 50);
    gsay_option(201, 115, Node999, 50);
end

procedure Node010b
begin
    set_global_var(217, 1);
    gsay_reply(201, 116);
    gsay_option(201, 117, Node999, 50);
end

procedure Node011
begin
    gsay_reply(201, 110);
    if (global_var(258) == 1) then begin
        gsay_option(201, 111, Node012, 50);
    end
    else begin
        gsay_option(201, 112, Node013, 50);
    end
end

procedure Node011b
begin
    gsay_reply(201, 118);
    if (global_var(258) == 1) then begin
        gsay_option(201, 111, Node012, 50);
    end
    else begin
        gsay_option(201, 112, Node013b, 50);
    end
end

procedure Node012
begin
    gsay_reply(201, 120);
    gsay_option(201, 121, Node014a, 50);
end

procedure Node014
begin
    critter_heal(dude_obj, get_critter_stat(dude_obj, 7) - get_critter_stat(dude_obj, 35));
    if (critter_state(dude_obj) bwand (16 bwor 32)) then begin
        game_time_advance(game_ticks(3600 * random(3, 5)));
        critter_injure(dude_obj, 16 bwor 8388608);
        critter_injure(dude_obj, 32 bwor 8388608);
    end
    if (critter_state(dude_obj) bwand (4 bwor 8)) then begin
        game_time_advance(game_ticks(3600 * random(6, 9)));
        critter_injure(dude_obj, 4 bwor 8388608);
        critter_injure(dude_obj, 8 bwor 8388608);
    end
    fadeIn(700);
    gsay_reply(201, 140);
    gsay_option(201, 141, Node010, 50);
    gsay_option(201, 142, Node999, 50);
end

procedure Node014a
begin
    fadeOut(700);
    call Node014();
end

procedure Node013
begin
    gsay_reply(201, 130);
    gsay_option(201, 131, Node010, 50);
    gsay_option(201, 132, Node999, 50);
end

procedure Node013b
begin
    gsay_reply(201, 133);
    gsay_option(201, 134, Node013c, 50);
    gsay_option(201, 135, Node999, 50);
end

procedure Node013c
begin
    if (critter_state(dude_obj) bwand (16 bwor 32)) then begin
        gsay_reply(201, message_str(201, 136) + 400 + message_str(201, 137));
    end
    else begin
        if (critter_state(dude_obj) bwand (4 bwor 8)) then begin
            gsay_reply(201, message_str(201, 136) + 600 + message_str(201, 137));
        end
    end
    if ((critter_state(dude_obj) bwand (16 bwor 32)) and (item_caps_total(dude_obj) >= 400)) then begin
        gsay_option(201, 138, Node013d, 50);
    end
    if ((critter_state(dude_obj) bwand (4 bwor 8)) and (item_caps_total(dude_obj) >= 600)) then begin
        gsay_option(201, 138, Node013d, 50);
    end
    gsay_option(201, 139, Node999, 50);
end

procedure Node013d
begin
    if (critter_state(dude_obj) bwand (16 bwor 32)) then begin
        item_caps_adjust(dude_obj, -400);
        item_caps_adjust(self_obj, 400);
    end
    else begin
        if (critter_state(dude_obj) bwand (4 bwor 8)) then begin
            item_caps_adjust(dude_obj, -600);
            item_caps_adjust(self_obj, 600);
        end
    end
    gsay_reply(201, 143);
    gsay_option(201, 144, Node014a, 50);
end

procedure Node015
begin
    gsay_reply(201, 150);
    if (get_critter_stat(dude_obj, 4) > 7) then begin
        gsay_option(201, 151, Node016, 50);
    end
    gsay_option(201, 152, Node027, 50);
    gsay_option(201, 153, Node018, 50);
end

procedure Node016
begin
    gsay_reply(201, 160);
    gsay_option(201, 161, Node017, 50);
end

procedure Node017
begin
    gsay_reply(201, 170);
    gsay_option(201, 171, Node018, 50);
end

procedure Node018
begin
    gsay_reply(201, 180);
    gsay_option(201, 181, Node019, 50);
end

procedure Node019
begin
    gsay_reply(201, 190);
    gsay_option(201, 191, Node022, 50);
    gsay_option(201, 192, Node020, 50);
    gsay_option(201, 193, Node020, 50);
    gsay_option(201, 194, Node021, 50);
end

procedure Node020
begin
    gsay_reply(201, 200);
    gsay_option(201, 201, Node999, 50);
end

procedure Node021
begin
    gsay_reply(201, 210);
    gsay_option(201, 211, Node020, 50);
    gsay_option(201, 212, Node022, 50);
    if (has_skill(dude_obj, 14) > 65) then begin
        gsay_option(201, 213, Node025, 50);
    end
end

procedure Node022
begin
    gsay_reply(201, 220);
    gsay_option(201, 221, Node023a, 50);
end

procedure Node023
begin
    critter_dmg(dude_obj, get_critter_stat(dude_obj, 35) / 3, 0);
    fadeIn(700);
    gsay_reply(201, 230);
    gsay_option(201, 231, Node024, 50);
end

procedure Node023a
begin
    fadeOut(700);
    call Node023();
end

procedure Node024
begin
    if (map_var(3) == 0) then begin
        set_map_var(3, 1);
    end
    gsay_reply(201, 240);
    gsay_option(201, 241, Node999, 50);
end

procedure Node025
begin
    gsay_reply(201, 250);
    gsay_option(201, 251, Node026a, 50);
end

procedure Node026
begin
    critter_dmg(dude_obj, get_critter_stat(dude_obj, 35) / 3, 0);
    fadeIn(700);
    gsay_reply(201, 260);
    gsay_option(201, 261, Node024, 50);
end

procedure Node026a
begin
    fadeOut(700);
    call Node026();
end

procedure Node027
begin
    gsay_reply(201, 270);
    gsay_option(201, 271, Node017, 50);
end

procedure Node028
begin
    gsay_reply(201, 280);
    if ((has_skill(dude_obj, 7) > 40) and (local_var(14) == 0)) then begin
        gsay_option(201, 281, Node029, 50);
    end
    if ((has_skill(dude_obj, 14) > 70) and (local_var(14) == 0)) then begin
        gsay_option(201, 282, Node031, 50);
    end
    gsay_option(201, 283, Node032, 50);
end

procedure Node029
begin
    gsay_reply(201, 290);
    gsay_option(201, 291, Node030, 50);
end

procedure Node030
begin
    set_local_var(14, 1);
    critter_mod_skill(dude_obj, 7, 66);
    play_sfx("LEVELUP");
    display_msg(message_str(10, 407));
    gsay_reply(201, 300);
    gsay_option(201, 301, Node999, 50);
end

procedure Node031
begin
    gsay_reply(201, 310);
    gsay_option(201, 311, Node030, 50);
end

procedure Node032
begin
    gsay_reply(201, 320);
    gsay_option(201, 321, Node999, 50);
end

procedure Node033
begin
    gsay_reply(201, 330);
    gsay_option(201, 331, Node999, 50);
end

procedure Node999
begin
    already_talk := 0;
end

procedure NodeBarter
begin
    set_local_var(8, game_time_in_seconds);
    barter_mod := 50 * (0 - 1);
    gdialog_mod_barter(barter_mod);
    call Node010();
end

