variable animation_is_called;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure talk_p_proc;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(7, has_trait(1, self_obj, 10));
        set_local_var(4, random(70, 80));
        set_local_var(5, random(0, 100));
        set_local_var(6, random(-5, 5));
        if (cur_map_index == 65) then begin
            critter_add_trait(self_obj, 1, 6, 21);
            add_obj_to_inven(self_obj, create_object_sid(490, 1, 2, -1));
            wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 490));
        end
        else begin
            critter_add_trait(self_obj, 1, 6, 38);
        end
        critter_add_trait(self_obj, 1, 5, 71);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0) and not(combat_is_initialized)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, 2, 1);
    end
    if ((local_var(2) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(2, 2);
        attack_setup(self_obj, dude_obj);
    end
    if (cur_map_index == 65) then begin
        if (has_trait(1, self_obj, 6) != 21) then begin
            critter_add_trait(self_obj, 1, 6, 21);
        end
        if (local_var(8) == 0) then begin
            set_local_var(8, 1);
            add_obj_to_inven(self_obj, create_object_sid(490, 1, 2, -1));
            wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 490));
            add_obj_to_inven(self_obj, create_object_sid(490, 1, 2, -1));
            wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 490));
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure destroy_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    script_overrides;
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    anim(self_obj, 1000, local_var(7));
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (has_trait(1, self_obj, 10) != rotation_to_tile(tile_num(self_obj), tile_num(dude_obj))) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        end
        animation_is_called := 0;
    end
end

procedure talk_p_proc
begin
end

