variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable speach_floater;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure Node055;
procedure Node056;
procedure Node057;
procedure Node060;
procedure Node065;
procedure Node066;
procedure Node067;
procedure Node068;
procedure Node069;
procedure Node075;
procedure Node076;
procedure NodeQA;
procedure NodeStartBono;
procedure NodeStartBonoSpeach;
procedure Node999;
procedure Node998;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(65, 75));
        set_local_var(5, random(40, 50));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, 1, 6, 5);
        critter_add_trait(self_obj, 1, 5, 19);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(29, 76), 1);
    end
    if (float_is_called == 0) then begin
        speach_floater := speach_floater + 1;
        float_is_called := 1;
        if ((global_var(126) == 13) and (speach_floater < 12)) then begin
            add_timer_event(self_obj, random(30, 40), 2);
        end
        else begin
            if (speach_floater == 12) then begin
                speach_floater := 0;
                call NodeStartBonoSpeach();
            end
        end
    end
    if ((global_var(126) == 11) and (local_var(9) == 0)) then begin
        set_local_var(9, 1);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(49) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(124, 2));
    end
    else begin
        display_msg(message_str(124, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(124, 1));
    end
    else begin
        display_msg(message_str(124, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if ((global_var(200) == 4) and (metarule(17, 2) == 1)) then begin
        float_msg(self_obj, message_str(124, random(500, 505)), 8);
    end
    else begin
        start_gdialog(124, self_obj, 4, 7, -1);
        gsay_start;
        if (global_var(126) == 14) then begin
            call Node067();
        end
        else begin
            if (local_var(7) == 0) then begin
                call Node001();
            end
            else begin
                call Node010();
            end
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((49 == 50) or (49 == 59)) then begin
            set_global_var(49, global_var(49) - 3);
        end
        else begin
            set_global_var(49, global_var(49) - 6);
        end
    end
    set_global_var(69, global_var(69) bwor 256);
    if (not(metarule(17, 2) == 1)) then begin
        mark_area_known(0, 2, 1);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        anim(self_obj, 1000, 2);
        if (random(0, 100) <= 40) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            if (random(0, 100) <= 60) then begin
                reg_anim_animate(self_obj, 11, -1);
            end
            else begin
                reg_anim_animate(self_obj, 16, -1);
            end
            reg_anim_func(3, 0);
        end
        float_msg(self_obj, message_str(124, 800 + speach_floater), 0);
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
        call NodeStartBonoSpeach();
    end
end

procedure Node001
begin
    gsay_reply(124, 10);
    giq_option(1, 124, 11, Node002, 50);
    gsay_option(124, 12, Node999, 50);
end

procedure Node002
begin
    gsay_reply(124, 20);
    gsay_option(124, 21, Node003, 50);
    giq_option(1, 124, 22, Node004, 51);
    gsay_option(124, 23, Node999, 50);
end

procedure Node003
begin
    gsay_reply(124, 30);
    giq_option(1, 124, 31, Node005, 50);
end

procedure Node004
begin
    gsay_reply(124, 40);
    gsay_option(124, 41, Node005, 50);
end

procedure Node005
begin
    set_local_var(7, 1);
    gsay_reply(124, 50);
    gsay_option(124, message_str(124, 51) + obj_name(dude_obj) + message_str(124, 52), Node006, 50);
    gsay_option(124, 53, Node999, 50);
end

procedure Node006
begin
    already_talk := 1;
    gsay_reply(124, 60);
    giq_option(1, 124, 61, Node010, 49);
    gsay_option(124, 62, Node999, 50);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        gsay_reply(124, message_str(124, 100) + obj_name(dude_obj) + message_str(124, 101));
    end
    else begin
        gsay_reply(124, 102);
    end
    giq_option(1, 124, 103, Node011, 50);
    giq_option(1, 124, 104, Node020, 50);
    giq_option(1, 124, 105, Node030, 50);
    if (map_var(0) == 0) then begin
        giq_option(1, 124, 106, Node040, 50);
    end
    if (map_var(0) == 1) then begin
        gsay_option(124, 107, Node050, 50);
    end
    if (global_var(126) == 0) then begin
        giq_option(1, 124, 108, Node060, 50);
    end
    else begin
        if (global_var(126) < 12) then begin
            giq_option(1, 124, 199, Node065, 49);
        end
    end
    if (global_var(130) == 1) then begin
        giq_option(1, 124, 198, Node069, 51);
    end
    if ((global_var(127) == 2) and (local_var(10) == 0)) then begin
        gsay_option(124, 197, Node075, 50);
    end
    if ((local_var(10) > 0) and (local_var(10) < 10) and obj_carrying_pid_obj(dude_obj, 305)) then begin
        giq_option(1, 124, 196, Node076, 49);
    end
    gsay_option(124, 109, Node999, 50);
end

procedure Node011
begin
    gsay_reply(124, 110);
    giq_option(1, 124, 111, Node012, 49);
    if (get_critter_stat(dude_obj, 4) < 8) then begin
        giq_option(1, 124, 112, Node013, 50);
    end
    else begin
        giq_option(1, 124, 113, Node013, 50);
    end
    giq_option(1, 124, 114, Node014, 49);
end

procedure Node012
begin
    gsay_reply(124, 120);
    gsay_option(124, 121, Node015, 50);
    if (get_critter_stat(dude_obj, 4) < 7) then begin
        giq_option(1, 124, 122, Node015, 50);
    end
    else begin
        giq_option(1, 124, 123, Node015, 50);
    end
end

procedure Node013
begin
    gsay_reply(124, 130);
    gsay_option(124, 131, Node015, 50);
    gsay_option(124, 132, Node015, 50);
end

procedure Node014
begin
    gsay_reply(124, 140);
    giq_option(1, 124, 141, Node015, 51);
    giq_option(1, 124, 142, Node015, 51);
end

procedure Node015
begin
    gsay_reply(124, 150);
    giq_option(1, 124, 151, Node016, 49);
    if (get_critter_stat(dude_obj, 4) > 6) then begin
        giq_option(1, 124, 152, Node017, 50);
    end
    else begin
        giq_option(1, 124, 153, Node017, 50);
    end
    giq_option(1, 124, 154, Node018, 51);
end

procedure Node016
begin
    gsay_reply(124, 160);
    giq_option(1, 124, 161, Node010, 50);
    giq_option(1, 124, 162, Node010, 50);
end

procedure Node017
begin
    gsay_reply(124, 170);
    if (get_critter_stat(dude_obj, 4) > 6) then begin
        giq_option(1, 124, 171, Node010, 50);
    end
    giq_option(1, 124, 172, Node010, 50);
    giq_option(1, 124, 173, Node010, 50);
end

procedure Node018
begin
    gsay_reply(124, 180);
    if (get_critter_stat(dude_obj, 4) > 7) then begin
        giq_option(1, 124, 181, Node019, 49);
    end
    giq_option(1, 124, 182, Node010, 50);
    giq_option(1, 124, 183, Node010, 50);
end

procedure Node019
begin
    gsay_reply(124, 190);
    giq_option(1, 124, 191, Node010, 50);
end

procedure Node020
begin
    gsay_reply(124, 200);
    gsay_option(124, 201, Node021, 50);
    gsay_option(124, 202, Node024, 50);
end

procedure Node021
begin
    if (60 < ((get_critter_stat(dude_obj, 3) * 10) + (has_skill(dude_obj, 14) / 5))) then begin
        gsay_reply(124, 210);
    end
    else begin
        gsay_reply(124, 211);
    end
    if (60 < ((get_critter_stat(dude_obj, 3) * 10) + (has_skill(dude_obj, 14) / 5))) then begin
        giq_option(1, 124, 214, Node022, 51);
    end
    else begin
        giq_option(1, 124, 212, Node023, 49);
    end
    giq_option(1, 124, 213, Node024, 51);
end

procedure Node022
begin
    gsay_reply(124, 220);
    gsay_option(124, 221, Node023, 50);
    gsay_option(124, 222, Node023, 50);
end

procedure Node023
begin
    gsay_reply(124, 230);
    gsay_option(124, 231, Node024, 50);
end

procedure Node024
begin
    gsay_reply(124, 240);
    giq_option(1, 124, 241, Node026, 51);
    giq_option(1, 124, 242, Node025, 50);
    gsay_option(124, 243, Node021, 50);
    giq_option(1, 124, 244, Node010, 50);
end

procedure Node025
begin
    gsay_reply(124, 250);
    giq_option(1, 124, 251, Node010, 50);
end

procedure Node026
begin
    gsay_reply(124, 260);
    if (get_critter_stat(dude_obj, 4) > 5) then begin
        giq_option(1, 124, 261, Node010, 50);
    end
    giq_option(1, 124, 262, Node010, 50);
end

procedure Node030
begin
    gsay_reply(124, 300);
    giq_option(1, 124, 301, Node031, 50);
    giq_option(1, 124, 302, Node032, 49);
    giq_option(1, 124, 303, Node033, 51);
end

procedure Node031
begin
    gsay_reply(124, 310);
    gsay_option(124, 311, Node032, 50);
    gsay_option(124, 312, Node032, 50);
end

procedure Node032
begin
    gsay_reply(124, 320);
    gsay_option(124, 321, Node033, 50);
end

procedure Node033
begin
    gsay_reply(124, 330);
    giq_option(1, 124, 331, Node034, 51);
    giq_option(1, 124, 332, Node035, 51);
end

procedure Node034
begin
    gsay_reply(124, 340);
    giq_option(1, 124, 341, Node010, 50);
end

procedure Node035
begin
    gsay_reply(124, 350);
    giq_option(1, 124, 351, Node010, 50);
end

procedure Node040
begin
    gsay_reply(124, 400);
    giq_option(1, 124, 401, Node041, 50);
    giq_option(1, 124, 402, Node042, 51);
    giq_option(1, 124, 403, Node043, 49);
end

procedure Node041
begin
    gsay_reply(124, 410);
    giq_option(1, 124, 411, Node044, 49);
    giq_option(1, 124, 412, Node044, 49);
end

procedure Node042
begin
    gsay_reply(124, 420);
    giq_option(1, 124, 421, Node044, 49);
    giq_option(1, 124, 422, Node044, 49);
end

procedure Node043
begin
    gsay_reply(124, 430);
    giq_option(1, 124, 431, Node044, 49);
    giq_option(1, 124, 432, Node044, 49);
end

procedure Node044
begin
    gsay_reply(124, 440);
    giq_option(1, 124, 441, Node045, 50);
    gsay_option(124, 442, Node045, 50);
    gsay_option(124, 443, Node999, 50);
end

procedure Node045
begin
    set_map_var(0, 1);
    gsay_reply(124, 450);
    giq_option(1, 124, 451, Node010, 50);
    gsay_option(124, 452, Node999, 50);
    gsay_option(124, 453, Node999, 50);
end

procedure Node050
begin
    gsay_reply(124, 500);
    giq_option(1, 124, 501, Node051, 51);
    if (global_var(124) == 2) then begin
        giq_option(1, 124, 502, Node052, 49);
    end
    if (global_var(125) == 2) then begin
        giq_option(1, 124, 503, Node053, 49);
    end
    if ((global_var(124) == 2) and (global_var(125) == 2)) then begin
        giq_option(1, 124, 505, Node055, 50);
    end
    else begin
        giq_option(1, 124, 504, Node054, 51);
        if (random(0, 100) < (has_skill(dude_obj, 14) + (has_skill(dude_obj, 14) / 20 * get_critter_stat(dude_obj, 3)) - (30 + ((10 * 2) + 2)) + get_critter_stat(dude_obj, 3))) then begin
            giq_option(1, 124, 505, Node055, 50);
        end
    end
end

procedure Node051
begin
    gsay_reply(124, 510);
    giq_option(1, 124, 511, Node010, 50);
    gsay_option(124, 512, Node999, 50);
end

procedure Node052
begin
    gsay_reply(124, 520);
    giq_option(1, 124, 521, Node057, 50);
    giq_option(1, 124, 522, Node057, 50);
end

procedure Node053
begin
    gsay_reply(124, 530);
    giq_option(1, 124, 531, Node057, 50);
    giq_option(1, 124, 532, Node057, 50);
end

procedure Node054
begin
    gsay_reply(124, 540);
    giq_option(1, 124, 541, Node999, 50);
    giq_option(1, 124, 542, Node010, 50);
end

procedure Node055
begin
    gsay_reply(124, 550);
    gsay_option(124, 551, Node056, 50);
end

procedure Node056
begin
    if (map_var(0) < 3) then begin
        set_map_var(0, 3);
    end
    mark_area_known(0, 2, 1);
    gsay_reply(124, 560);
    gsay_option(124, 561, Node999, 50);
    gsay_option(124, 562, Node999, 50);
end

procedure Node057
begin
    gsay_reply(124, 570);
    gsay_option(124, 571, Node056, 50);
end

procedure Node060
begin
    gsay_reply(124, 600);
    gsay_option(124, 601, NodeQA, 50);
    gsay_option(124, 602, Node999, 50);
    gsay_option(124, 603, Node999, 50);
end

procedure Node065
begin
    if ((game_time_in_seconds - local_var(8)) < (3600 * 5)) then begin
        gsay_reply(124, 650);
        gsay_option(124, 651, Node999, 50);
        if (global_var(126) == 11) then begin
            giq_option(1, 124, 652, Node066, 49);
        end
    end
    else begin
        set_global_var(126, 12);
        gsay_reply(124, message_str(124, 653) + obj_name(dude_obj) + message_str(124, 654));
        gsay_option(124, 655, Node999, 50);
        gsay_option(124, 656, Node999, 50);
    end
end

procedure Node066
begin
    gsay_reply(124, 660);
    gsay_option(124, 661, NodeStartBono, 50);
end

procedure Node067
begin
    if (global_var(126) != 12) then begin
        set_global_var(126, 12);
        give_exp_points(floor(210 / 5) + (get_critter_stat(dude_obj, 4) * floor(210 / 12)) + (get_critter_stat(dude_obj, 6) * floor(210 / 30)) + (floor(210 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(210 / 5) + (get_critter_stat(dude_obj, 4) * floor(210 / 12)) + (get_critter_stat(dude_obj, 6) * floor(210 / 30)) + (floor(210 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
    end
    gsay_reply(124, 670);
    giq_option(1, 124, 671, Node068, 51);
    gsay_option(124, 672, Node999, 50);
    gsay_option(124, 673, Node999, 50);
end

procedure Node068
begin
    set_global_var(0, global_var(0) - 3);
    gsay_reply(124, message_str(124, 680) + obj_name(dude_obj) + message_str(124, 681));
    gsay_option(124, 682, Node999, 50);
    gsay_option(124, 683, Node999, 50);
end

procedure Node069
begin
    gsay_reply(124, 690);
    gsay_option(124, 691, Node999, 50);
end

procedure Node075
begin
    set_local_var(10, 1);
    gsay_reply(124, 750);
    gsay_option(124, 751, Node999, 50);
end

procedure Node076
begin
    variable LVar0 := 0;
    LVar0 := obj_is_carrying_obj_pid(dude_obj, 305) * 20;
    if ((local_var(10) + obj_is_carrying_obj_pid(dude_obj, 305)) > 10) then begin
        set_local_var(10, local_var(10) + obj_is_carrying_obj_pid(dude_obj, 305));
        give_exp_points(floor(250 / 5) + (get_critter_stat(dude_obj, 4) * floor(250 / 12)) + (get_critter_stat(dude_obj, 6) * floor(250 / 30)) + (floor(250 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(250 / 5) + (get_critter_stat(dude_obj, 4) * floor(250 / 12)) + (get_critter_stat(dude_obj, 6) * floor(250 / 30)) + (floor(250 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        display_msg(message_str(10, 810));
        set_global_var(0, global_var(0) + 50);
        set_global_var(49, global_var(49) + 15);
        if (global_var(256) == 0) then begin
            set_global_var(256, 1);
            give_exp_points(floor(2000 / 5) + (get_critter_stat(dude_obj, 4) * floor(2000 / 12)) + (get_critter_stat(dude_obj, 6) * floor(2000 / 30)) + (floor(2000 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
            display_msg(message_str(10, random(140, 143)) + (floor(2000 / 5) + (get_critter_stat(dude_obj, 4) * floor(2000 / 12)) + (get_critter_stat(dude_obj, 6) * floor(2000 / 30)) + (floor(2000 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
            set_global_var(0, global_var(0) + 200);
        end
        set_global_var(131, 1);
        while (obj_is_carrying_obj_pid(dude_obj, 305) != 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 305));
        end
        item_caps_adjust(dude_obj, LVar0);
        play_sfx("LEVELUP");
        gsay_reply(124, message_str(124, 760) + "" + LVar0 + "" + message_str(124, 762));
        gsay_option(124, 764, Node999, 50);
    end
    else begin
        set_local_var(10, local_var(10) + obj_is_carrying_obj_pid(dude_obj, 305));
        while (obj_is_carrying_obj_pid(dude_obj, 305) != 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 305));
        end
        set_global_var(49, global_var(49) + 5);
        item_caps_adjust(dude_obj, LVar0);
        gsay_reply(124, message_str(124, 760) + "" + LVar0 + "" + message_str(124, 761));
        gsay_option(124, 763, Node999, 50);
    end
end

procedure NodeQA
begin
    set_global_var(126, 1);
    set_local_var(8, game_time_in_seconds);
end

procedure NodeStartBono
begin
    game_ui_disable;
    add_timer_event(self_obj, 1, 3);
end

procedure NodeStartBonoSpeach
begin
    if (global_var(126) == 13) then begin
        fadeOut(700);
        game_ui_enable;
        set_global_var(126, 14);
        anim(dude_obj, 1000, 1);
        fadeIn(700);
        dialogue_system_enter;
    end
    else begin
        fadeOut(700);
        set_global_var(126, 13);
        move_to(dude_obj, 21921, 0);
        anim(dude_obj, 1000, 2);
        fadeIn(700);
        add_timer_event(self_obj, 30, 2);
    end
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

