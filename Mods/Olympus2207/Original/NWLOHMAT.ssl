variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable stuff_container;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node010;
procedure Node018;
procedure Node011;
procedure Node012;
procedure Node016;
procedure Node019;
procedure Node014;
procedure Node015;
procedure Node013;
procedure Node017;
procedure Node017a;
procedure Node017b;
procedure Node017c;
procedure NodeIsGoingHome;
procedure Node999;
procedure Node998;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(5, random(40, 50));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, 1, 6, 313);
        critter_add_trait(self_obj, 1, 5, 68);
        set_local_var(9, 6);
        add_obj_to_inven(self_obj, create_object_sid(516, 1, 2, -1));
        wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 516));
    end
end

procedure critter_p_proc
begin
    if (animation_is_called == 0) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(20, 40), 1);
    end
    if ((global_var(267) == 1) and (anim_busy(self_obj) == 0)) then begin
        if ((tile_distance(tile_num(dude_obj), tile_num(self_obj)) > local_var(9)) and (tile_distance(tile_num(dude_obj), tile_num(self_obj)) <= (local_var(9) + (local_var(9) / 3)))) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(local_var(9) - 2, local_var(9))), 0);
        end
        else begin
            if (tile_distance(tile_num(dude_obj), tile_num(self_obj)) > (local_var(9) + (local_var(9) / 3))) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(local_var(9) + 1, local_var(9) + 3)), 1);
            end
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(50) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if ((local_var(7) == 0) and (global_var(267) == 0)) then begin
        display_msg(message_str(204, 2));
    end
    else begin
        display_msg(message_str(204, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if ((local_var(7) == 0) and (global_var(267) == 0)) then begin
        display_msg(message_str(204, 1));
    end
    else begin
        display_msg(message_str(204, 3));
    end
end

procedure pickup_p_proc
begin
    script_overrides;
end

procedure push_p_proc
begin
    if (global_var(267) == 0) then begin
        script_overrides;
    end
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    start_gdialog(204, self_obj, -1, -1, -1);
    gsay_start;
    if (global_var(267) == 0) then begin
        call Node001();
    end
    else begin
        call Node010();
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((50 == 50) or (50 == 59)) then begin
            set_global_var(50, global_var(50) - 3);
        end
        else begin
            set_global_var(50, global_var(50) - 6);
        end
    end
    set_global_var(119, global_var(119) bwor 8388608);
    if (global_var(267) == 1) then begin
        set_global_var(267, 0);
    end
    if (not(tile_contains_obj_pid(2, 2, 250))) then begin
        stuff_container := create_object_sid(250, 2, 2, -1);
    end
    else begin
        stuff_container := tile_contains_pid_obj(2, 2, 250);
    end
    move_obj_inven_to_obj(self_obj, stuff_container);
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        script_overrides;
    end
    if (action_being_used == 12) then begin
        script_overrides;
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if ((local_var(4) == 1) and (local_var(2) == 0)) then begin
        set_local_var(2, 1);
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if ((global_var(267) == 1) and (anim_busy(self_obj) == 0)) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(2, 6)), 0);
        end
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    gsay_reply(204, 10);
    gsay_option(204, 11, Node002, 50);
    if (has_skill(dude_obj, 17) >= 70) then begin
        gsay_option(204, 12, Node003, 50);
    end
    if (has_skill(dude_obj, 17) <= 20) then begin
        gsay_option(204, 13, Node004, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 315)) then begin
        gsay_option(204, 14, Node005, 50);
    end
    gsay_option(204, 15, Node006, 50);
    gsay_option(204, 16, Node999, 50);
end

procedure Node002
begin
    gsay_reply(204, 20);
    if (has_skill(dude_obj, 17) >= 70) then begin
        gsay_option(204, 21, Node003, 50);
    end
    if (has_skill(dude_obj, 17) <= 20) then begin
        gsay_option(204, 22, Node004, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 315)) then begin
        gsay_option(204, 23, Node005, 50);
    end
    gsay_option(204, 24, Node006, 50);
    gsay_option(204, 25, Node999, 50);
end

procedure Node003
begin
    gsay_reply(204, 30);
    gsay_option(204, 31, Node007, 50);
end

procedure Node004
begin
    gsay_reply(204, 40);
    gsay_option(204, 41, Node999, 50);
    gsay_option(204, 42, Node008, 50);
end

procedure Node005
begin
    set_global_var(267, 1);
    set_local_var(8, game_time_in_seconds);
    rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 315));
    party_add(self_obj);
    gsay_reply(204, 50);
    gsay_option(204, 51, Node999, 50);
end

procedure Node006
begin
    gsay_reply(204, 61);
    gsay_option(204, 62, Node999, 50);
    gsay_option(204, 63, Node004, 50);
end

procedure Node007
begin
    set_global_var(267, 1);
    set_local_var(8, game_time_in_seconds);
    party_add(self_obj);
    gsay_reply(204, 70);
    gsay_option(204, 71, Node999, 50);
end

procedure Node008
begin
    gsay_reply(204, 80);
    gsay_option(204, 81, Node998, 50);
end

procedure Node010
begin
    if (global_var(267) == 1) then begin
        if ((game_time_in_seconds - local_var(8)) <= (3600 * 24)) then begin
            gsay_reply(204, 100);
        end
        if (((game_time_in_seconds - local_var(8)) > (3600 * 24)) and ((game_time_in_seconds - local_var(8)) <= (3600 * 24 * 10))) then begin
            gsay_reply(204, 101);
        end
        if (((game_time_in_seconds - local_var(8)) > (3600 * 24 * 10)) and ((game_time_in_seconds - local_var(8)) <= (3600 * 24 * 30))) then begin
            gsay_reply(204, 102);
        end
        if (((game_time_in_seconds - local_var(8)) > (3600 * 24 * 30)) and ((game_time_in_seconds - local_var(8)) <= (3600 * 24 * 120))) then begin
            gsay_reply(204, 103);
        end
        if ((game_time_in_seconds - local_var(8)) > (3600 * 24 * 120)) then begin
            gsay_reply(204, 104);
        end
        gsay_option(204, 107, Node018, 50);
    end
    if (global_var(267) == 2) then begin
        gsay_reply(204, 105);
        gsay_option(204, 108, Node014, 50);
    end
    if (global_var(267) == 3) then begin
        gsay_reply(204, 106);
        gsay_option(204, 109, Node014, 50);
    end
    gsay_option(204, 119, Node999, 50);
end

procedure Node018
begin
    gsay_reply(204, 180);
    gsay_option(204, 181, Node011, 50);
    if (cur_map_index != 31) then begin
        gsay_option(204, 182, Node012, 50);
    end
    gsay_option(204, 183, Node013, 50);
    if (((game_time_in_seconds - local_var(8)) > (3600 * 24 * 30)) and (has_skill(dude_obj, 17) >= 35)) then begin
        gsay_option(204, 184, Node015, 50);
    end
    gsay_option(204, 185, Node999, 50);
end

procedure Node011
begin
    party_remove(self_obj);
    set_global_var(267, 2);
    if ((game_time_in_seconds - local_var(8)) <= (3600 * 24 * 30)) then begin
        gsay_reply(204, 110);
    end
    if (((game_time_in_seconds - local_var(8)) > (3600 * 24 * 30)) and ((game_time_in_seconds - local_var(8)) <= (3600 * 24 * 120))) then begin
        gsay_reply(204, 111);
    end
    if ((game_time_in_seconds - local_var(8)) > (3600 * 24 * 120)) then begin
        gsay_reply(204, 113);
    end
    gsay_option(204, 114, Node999, 50);
end

procedure Node012
begin
    gsay_reply(204, 120);
    gsay_option(204, 121, Node016, 50);
    gsay_option(204, 122, Node016, 50);
    gsay_option(204, 123, Node019, 50);
    gsay_option(204, 124, Node010, 50);
end

procedure Node016
begin
    party_remove(self_obj);
    set_global_var(267, 3);
    if ((game_time_in_seconds - local_var(8)) <= (3600 * 24 * 30)) then begin
        gsay_reply(204, 160);
    end
    if (((game_time_in_seconds - local_var(8)) > (3600 * 24 * 30)) and ((game_time_in_seconds - local_var(8)) <= (3600 * 24 * 120))) then begin
        gsay_reply(204, 161);
    end
    if ((game_time_in_seconds - local_var(8)) > (3600 * 24 * 120)) then begin
        gsay_reply(204, 162);
    end
    gsay_option(204, 163, NodeIsGoingHome, 50);
end

procedure Node019
begin
    party_remove(self_obj);
    set_global_var(267, 3);
    gsay_reply(204, 190);
    gsay_option(204, 191, Node999, 50);
end

procedure Node014
begin
    set_global_var(267, 1);
    party_add(self_obj);
    gsay_reply(204, 140);
    gsay_option(204, 141, Node999, 50);
end

procedure Node015
begin
    variable LVar0 := 0;
    LVar0 := random(1, 6);
    if (LVar0 == 1) then begin
        gsay_reply(204, 150);
    end
    if (LVar0 == 2) then begin
        gsay_reply(204, 151);
    end
    if (LVar0 == 3) then begin
        gsay_reply(204, 152);
    end
    if (LVar0 == 4) then begin
        gsay_reply(204, 153);
    end
    if (LVar0 == 5) then begin
        gsay_reply(204, 154);
    end
    if (LVar0 == 6) then begin
        gsay_reply(204, 155);
    end
    gsay_option(204, 156, Node018, 50);
end

procedure Node013
begin
    gsay_reply(204, 130);
    gsay_option(204, 131, Node017a, 50);
    gsay_option(204, 132, Node017b, 50);
    gsay_option(204, 133, Node017c, 50);
end

procedure Node017
begin
    gsay_reply(204, 170);
    gsay_option(204, 171, Node999, 50);
end

procedure Node017a
begin
    set_local_var(9, 3);
    call Node017();
end

procedure Node017b
begin
    set_local_var(9, 6);
    call Node017();
end

procedure Node017c
begin
    set_local_var(9, 10);
    call Node017();
end

procedure NodeIsGoingHome
begin
    set_global_var(267, 4);
    move_to(self_obj, 1, 2);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
    set_local_var(4, 1);
end

