variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable trading_container;
variable trading_container2;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node999;
procedure Node998;
procedure NodeBarter;
procedure Fight;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(75, 85));
        set_local_var(5, random(55, 65));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, 1, 6, 7);
        critter_add_trait(self_obj, 1, 5, 25);
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(438, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(238, 1, 2, -1), random(1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(213, 1, 2, -1), random(1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(233, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(420, 1, 2, -1));
        end
        if (random(0, 100) <= 9) then begin
            add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object_sid(218, 1, 2, -1));
        end
        if (random(0, 100) <= 6) then begin
            add_obj_to_inven(self_obj, create_object_sid(440, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(244, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(428, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(422, 1, 2, -1));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object_sid(423, 1, 2, -1));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object_sid(426, 1, 2, -1));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object_sid(433, 1, 2, -1));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object_sid(421, 1, 2, -1));
        end
        if (random(0, 100) <= 40) then begin
            add_obj_to_inven(self_obj, create_object_sid(164, 1, 2, -1));
            add_mult_objs_to_inven(self_obj, create_object_sid(2, 1, 2, -1), random(21, 38));
        end
        else begin
            if (random(0, 100) <= 40) then begin
                add_obj_to_inven(self_obj, create_object_sid(150, 1, 2, -1));
            end
            else begin
                add_obj_to_inven(self_obj, create_object_sid(159, 1, 2, -1));
            end
            add_mult_objs_to_inven(self_obj, create_object_sid(22, 1, 2, -1), random(2, 4));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object_sid(112, 1, 2, -1));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(109, 1, 2, -1));
        end
        if (random(0, 100) <= 33) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(5, 20));
        end
        if (random(0, 100) <= 25) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(411, 1, 2, -1), random(3, 7));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(233, 1, 2, -1));
        end
        if (random(0, 100) <= 9) then begin
            add_obj_to_inven(self_obj, create_object_sid(243, 1, 2, -1));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object_sid(237, 1, 2, -1));
        end
        if (random(0, 100) <= 7) then begin
            add_obj_to_inven(self_obj, create_object_sid(234, 1, 2, -1));
        end
        if (random(0, 100) <= 6) then begin
            add_obj_to_inven(self_obj, create_object_sid(232, 1, 2, -1));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 10) then begin
        if ((local_var(8) == 0) and (obj_can_see_obj(self_obj, dude_obj) == 1) and not((obj_item_subtype(critter_inven_obj(dude_obj, 1)) != 3) and (obj_item_subtype(critter_inven_obj(dude_obj, 2)) != 3))) then begin
            float_msg(self_obj, message_str(160, 5), 0);
            metarule3(108, tile_num(self_obj), elevation(self_obj), 0);
            set_local_var(8, 1);
            add_timer_event(self_obj, random(90, 140), 3);
        end
        if ((local_var(8) == 2) and (obj_can_see_obj(self_obj, dude_obj) == 1) and not((obj_item_subtype(critter_inven_obj(dude_obj, 1)) != 3) and (obj_item_subtype(critter_inven_obj(dude_obj, 2)) != 3)) and not(combat_is_initialized)) then begin
            float_msg(self_obj, message_str(160, 6), 2);
            attack_setup(self_obj, dude_obj);
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(52) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(160, 2));
    end
    else begin
        display_msg(message_str(160, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(160, 1));
    end
    else begin
        display_msg(message_str(160, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    start_gdialog(160, self_obj, -1, -1, -1);
    gsay_start;
    if (global_var(328) == 1) then begin
        call Node036();
    end
    else begin
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    set_global_var(69, global_var(69) bwor 32768);
    if (global_var(140) == 1) then begin
        set_global_var(140, 0);
    end
    if (((global_var(69) bwand 65536) != 0) and ((global_var(69) bwand 131072) != 0) and ((global_var(69) bwand 32768) != 0) and ((global_var(69) bwand 16384) != 0) and (global_var(257) == 0)) then begin
        set_global_var(257, 1);
        set_global_var(52, 25);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((52 == 50) or (52 == 59)) then begin
            set_global_var(52, global_var(52) - 3);
        end
        else begin
            set_global_var(52, global_var(52) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (tile_num(self_obj) != local_var(3)) then begin
        move_to(self_obj, local_var(3), elevation(self_obj));
        anim(self_obj, 1000, 3);
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
        set_local_var(8, 2);
    end
end

procedure Node001
begin
    set_local_var(7, 1);
    already_talk := 1;
    gsay_reply(160, 10);
    gsay_option(160, 11, Node002, 50);
    gsay_option(160, 12, Node002, 50);
    gsay_option(160, 13, Node002, 50);
    gsay_option(160, 14, Node002, 50);
    gsay_option(160, 15, Node002, 50);
end

procedure Node002
begin
    gsay_reply(160, 20);
    gsay_option(160, 21, Node005, 50);
    gsay_option(160, 22, Node003, 50);
    gsay_option(160, 23, Node004, 50);
    gsay_option(160, 24, Node006, 50);
end

procedure Node003
begin
    set_local_var(8, 2);
    gsay_reply(160, 30);
    gsay_option(160, 31, Node998, 50);
end

procedure Node004
begin
    set_local_var(8, 2);
    gsay_reply(160, 40);
    gsay_option(160, 41, Node010, 50);
    gsay_option(160, 42, Node999, 50);
end

procedure Node005
begin
    set_local_var(8, 2);
    gsay_reply(160, 50);
    gsay_option(160, 51, Node010, 50);
    gsay_option(160, 52, Node999, 50);
end

procedure Node006
begin
    set_local_var(8, 2);
    gsay_reply(160, 60);
    gsay_option(160, 61, Node010, 50);
    gsay_option(160, 62, Node999, 50);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        gsay_reply(160, 1002);
    end
    else begin
        gsay_reply(160, 1001);
    end
    gsay_option(160, 101, Node011, 50);
    gsay_option(160, 102, Node013, 50);
    if ((global_var(140) == 1) or (global_var(140) == 2)) then begin
        gsay_option(160, 103, Node025, 50);
    end
    if ((global_var(132) == 1) and (global_var(140) < 3) and (local_var(9) == 0)) then begin
        gsay_option(160, 104, Node032, 50);
    end
    gsay_option(160, 105, Node999, 50);
end

procedure Node011
begin
    gsay_reply(160, 110);
    gsay_option(160, 111, Node013, 50);
    gsay_option(160, 112, Node012, 50);
    gsay_option(160, 113, Node003, 50);
end

procedure Node012
begin
    gsay_reply(160, 120);
    gsay_option(160, 121, Node010, 50);
    gsay_option(160, 122, Node003, 50);
    gsay_option(160, 123, Node999, 50);
end

procedure Node013
begin
    gsay_reply(160, 130);
    gsay_option(160, 131, Node018, 50);
    gsay_option(160, 132, Node031, 50);
    gsay_option(160, 133, Node014, 50);
    if (global_var(140) == 0) then begin
        gsay_option(160, 134, Node019, 50);
    end
    gsay_option(160, 135, Node010, 50);
    gsay_option(160, 136, Node999, 50);
end

procedure Node014
begin
    gsay_reply(160, 140);
    gsay_option(160, 141, Node015, 50);
    gsay_option(160, 142, Node016, 50);
    gsay_option(160, 143, Node010, 50);
end

procedure Node015
begin
    gsay_reply(160, 150);
    gsay_option(160, 151, Node017, 50);
    gsay_option(160, 152, Node016, 50);
    gsay_option(160, 153, Node010, 50);
end

procedure Node016
begin
    gsay_reply(160, 160);
    gsay_option(160, 161, Node017, 50);
    gsay_option(160, 162, Node999, 50);
end

procedure Node017
begin
    gsay_reply(160, 170);
    gsay_option(160, 171, Node018, 50);
    gsay_option(160, 172, Node031, 50);
    gsay_option(160, 173, Node020, 50);
    gsay_option(160, 174, Node014, 50);
    gsay_option(160, 175, Node010, 50);
end

procedure Node018
begin
    gsay_reply(160, 180);
    gsay_option(160, 181, Node031, 50);
    gsay_option(160, 182, Node014, 50);
    gsay_option(160, 183, Node010, 50);
end

procedure Node019
begin
    gsay_reply(160, 190);
    gsay_option(160, 191, Node021, 50);
end

procedure Node020
begin
    gsay_reply(160, 200);
    gsay_option(160, 201, Node010, 50);
end

procedure Node021
begin
    gsay_reply(160, 210);
    gsay_option(160, 211, Node022, 50);
end

procedure Node022
begin
    gsay_reply(160, 220);
    gsay_option(160, 221, Node024, 50);
    gsay_option(160, 222, Node023, 50);
end

procedure Node023
begin
    gsay_reply(160, 230);
    gsay_option(160, 231, Node999, 50);
end

procedure Node024
begin
    if (global_var(140) == 0) then begin
        set_global_var(140, 1);
    end
    gsay_reply(160, 240);
    gsay_option(160, 241, Node999, 50);
end

procedure Node025
begin
    gsay_reply(160, 250);
    if (((global_var(69) bwand 16777216) != 0) or (global_var(140) == 2)) then begin
        gsay_option(160, 251, Node027, 50);
    end
    gsay_option(160, 252, Node026, 50);
    if (global_var(326) == 1) then begin
        gsay_option(160, 253, Node030, 50);
    end
    gsay_option(160, 254, Node999, 50);
end

procedure Node026
begin
    gsay_reply(160, 260);
    gsay_option(160, 261, Node999, 50);
end

procedure Node027
begin
    gsay_reply(160, 270);
    if (global_var(327) == 1) then begin
        gsay_option(160, 271, Node029, 50);
    end
    gsay_option(160, 272, Node028, 50);
end

procedure Node028
begin
    gsay_reply(160, 280);
    gsay_option(160, 281, Node999, 50);
end

procedure Node029
begin
    if (local_var(9) == 1) then begin
        if (global_var(140) == 2) then begin
            set_global_var(140, 3);
            give_exp_points(floor(863 / 5) + (get_critter_stat(dude_obj, 4) * floor(863 / 12)) + (get_critter_stat(dude_obj, 6) * floor(863 / 30)) + (floor(863 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
            display_msg(message_str(10, random(140, 143)) + (floor(863 / 5) + (get_critter_stat(dude_obj, 4) * floor(863 / 12)) + (get_critter_stat(dude_obj, 6) * floor(863 / 30)) + (floor(863 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        end
        add_obj_to_inven(dude_obj, create_object_sid(240, 1, 2, -1));
        gsay_reply(160, 2901);
    end
    else begin
        set_local_var(9, 1);
        if (global_var(140) == 2) then begin
            set_global_var(140, 3);
            give_exp_points(floor(863 / 5) + (get_critter_stat(dude_obj, 4) * floor(863 / 12)) + (get_critter_stat(dude_obj, 6) * floor(863 / 30)) + (floor(863 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
            display_msg(message_str(10, random(140, 143)) + (floor(863 / 5) + (get_critter_stat(dude_obj, 4) * floor(863 / 12)) + (get_critter_stat(dude_obj, 6) * floor(863 / 30)) + (floor(863 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        end
        add_obj_to_inven(dude_obj, create_object_sid(240, 1, 2, -1));
        add_obj_to_inven(dude_obj, create_object_sid(341, 1, 2, -1));
        gsay_reply(160, 2902);
    end
    gsay_option(160, 291, Node999, 50);
end

procedure Node030
begin
    gsay_reply(160, 300);
    gsay_option(160, 301, Node999, 50);
end

procedure Node031
begin
    gsay_reply(160, 310);
    gsay_option(160, 311, Node018, 50);
    gsay_option(160, 312, Node014, 50);
end

procedure Node032
begin
    gsay_reply(160, 320);
    if (has_skill(dude_obj, 14) >= 55) then begin
        gsay_option(160, 321, Node033, 50);
    end
    if (global_var(140) == 1) then begin
        gsay_option(160, 322, Node034, 50);
    end
    if (global_var(140) == 0) then begin
        gsay_option(160, 323, Node035, 50);
    end
    gsay_option(160, 324, Node999, 50);
end

procedure Node033
begin
    set_local_var(9, 1);
    add_obj_to_inven(dude_obj, create_object_sid(341, 1, 2, -1));
    gsay_reply(160, 330);
    gsay_option(160, 331, Node999, 50);
end

procedure Node034
begin
    if (global_var(140) == 0) then begin
        set_global_var(140, 1);
    end
    gsay_reply(160, 340);
    gsay_option(160, 341, Node999, 50);
end

procedure Node035
begin
    gsay_reply(160, 350);
    gsay_option(160, 351, Node021, 50);
end

procedure Node036
begin
    gsay_reply(160, 360);
    gsay_option(160, 361, Node010, 50);
    gsay_option(160, 362, Node999, 50);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

procedure Fight
begin
    critter_add_trait(self_obj, 1, 6, random(29, 32));
    set_local_var(2, 1);
end

