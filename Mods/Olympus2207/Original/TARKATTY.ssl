variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable max_distance;
variable animation_is_called;
variable distance_to_walk;
variable time_to_sleep;
variable time_to_play;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node999;
procedure Node998;


procedure start
begin
    if (local_var(1) == 0) then begin
        if (random(0, 100) <= 25) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(410, 1, 2, -1), random(1, 4));
        end
        if (random(0, 100) <= 15) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(411, 1, 2, -1), random(1, 4));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(416, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(417, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(418, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(424, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(422, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(432, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(429, 1, 2, -1));
        end
        if (random(0, 100) <= 25) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(213, 1, 2, -1), random(1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(217, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(108, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(39, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(220, 1, 2, -1));
        end
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(20, 25));
        set_local_var(5, random(40, 60));
        set_local_var(6, random(10, 30));
        critter_add_trait(self_obj, 1, 6, 1);
        critter_add_trait(self_obj, 1, 5, 2);
        max_distance := random(6, 8);
    end
end

procedure critter_p_proc
begin
    if (animation_is_called == 0) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(19, 56), 1);
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(68, 2));
    end
    else begin
        display_msg(message_str(68, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(68, 1));
    end
    else begin
        display_msg(message_str(68, 3));
    end
end

procedure pickup_p_proc
begin
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    start_gdialog(68, self_obj, -1, -1, -1);
    gsay_start;
    call Node010();
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        steal_perk := 0;
        steal_gloves := 0;
        if (has_trait(0, dude_obj, 37) != 0) then begin
            steal_perk := steal_perk + 15;
        end
        if (has_trait(0, dude_obj, 33) != 0) then begin
            steal_perk := steal_perk + 30;
        end
        if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
            steal_gloves := 10;
        end
        if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
            display_msg(message_str(10, random(145, 148)));
        end
        else begin
            script_overrides;
            display_msg(message_str(10, random(200, 203)));
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    max_distance := random(6, 8);
    if ((game_time_hour <= time_to_play) and (game_time_hour > time_to_sleep) and (tile_num(self_obj) != local_var(3))) then begin
        move_to(self_obj, local_var(3), elevation(self_obj));
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 49, -1);
        reg_anim_func(3, 0);
        critter_injure(self_obj, 2);
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        distance_to_walk := random(4, 7);
        if (tile_distance(tile_num(self_obj), local_var(3)) < max_distance) then begin
            if (distance_to_walk < 7) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                if (random(1, 4) == 1) then begin
                    reg_anim_animate(self_obj, random(10, 11), -1);
                end
                if (random(1, 3) == 1) then begin
                    reg_anim_animate(self_obj, random(16, 18), -1);
                end
                reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), distance_to_walk), -1);
                if (random(1, 3) == 1) then begin
                    reg_anim_animate(self_obj, 10, -1);
                end
                reg_anim_animate(self_obj, 0, -1);
                reg_anim_func(3, 0);
            end
            else begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                if (random(1, 4) == 1) then begin
                    reg_anim_animate(self_obj, random(10, 11), -1);
                end
                if (random(1, 3) == 1) then begin
                    reg_anim_animate(self_obj, random(16, 18), -1);
                end
                reg_anim_obj_run_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), distance_to_walk), -1);
                if (random(1, 3) == 1) then begin
                    reg_anim_animate(self_obj, 10, -1);
                end
                reg_anim_animate(self_obj, 0, -1);
                reg_anim_func(3, 0);
            end
        end
        else begin
            if (tile_num(self_obj) != local_var(3)) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                if (tile_distance(tile_num(self_obj), local_var(3)) >= 25) then begin
                    reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), local_var(3)), random(12, 22)), -1);
                end
                else begin
                    reg_anim_obj_move_to_tile(self_obj, local_var(3), -1);
                end
                reg_anim_func(3, 0);
            end
        end
        animation_is_called := 0;
    end
end

procedure Node010
begin
    if (global_var(27) != 2) then begin
        if (global_var(29) == 0) then begin
            gsay_reply(68, obj_name(dude_obj) + message_str(68, 100));
        end
        else begin
            if (global_var(29) == 1) then begin
                gsay_reply(68, obj_name(dude_obj) + message_str(68, 101));
            end
            else begin
                gsay_reply(68, 108);
            end
        end
        gsay_option(68, 102, Node999, 50);
        if ((global_var(27) == 1) and (obj_carrying_pid_obj(dude_obj, 290) == 0)) then begin
            gsay_option(68, 106, Node012, 50);
        end
        if (global_var(29) == 0) then begin
            gsay_option(68, 109, Node017, 50);
        end
        if (global_var(29) == 1) then begin
            gsay_option(68, 107, Node014, 50);
        end
    end
    else begin
        if (global_var(29) == 0) then begin
            gsay_reply(68, obj_name(dude_obj) + message_str(68, 101));
            gsay_option(68, 103, Node999, 50);
            gsay_option(68, 104, Node011, 50);
            gsay_option(68, 105, Node013, 50);
            if (obj_carrying_pid_obj(dude_obj, 434)) then begin
                gsay_option(68, 113, Node016, 50);
            end
        end
        else begin
            if (global_var(29) == 1) then begin
                gsay_reply(68, obj_name(dude_obj) + message_str(68, 100));
                gsay_option(68, 102, Node999, 50);
                gsay_option(68, 107, Node014, 50);
            end
            else begin
                gsay_reply(68, 108);
                gsay_option(68, 102, Node999, 50);
            end
        end
    end
end

procedure Node011
begin
    gsay_reply(68, 110);
    gsay_option(68, 111, Node999, 50);
    gsay_option(68, 112, Node013, 50);
    if (obj_carrying_pid_obj(dude_obj, 434)) then begin
        gsay_option(68, 113, Node016, 50);
    end
end

procedure Node012
begin
    if (global_var(29) == 0) then begin
        gsay_reply(68, 1202);
        gsay_option(68, 122, Node017, 50);
    end
    else begin
        gsay_reply(68, 1201);
        gsay_option(68, 121, Node999, 50);
    end
end

procedure Node013
begin
    if (global_var(29) == 0) then begin
        set_global_var(29, 1);
    end
    gsay_reply(68, message_str(68, 130) + obj_name(dude_obj) + message_str(68, 131));
    gsay_option(68, 132, Node999, 50);
    gsay_option(68, 133, Node999, 50);
    gsay_option(68, 134, Node999, 50);
end

procedure Node014
begin
    gsay_reply(68, 140);
    gsay_option(68, 141, Node999, 50);
    if (obj_carrying_pid_obj(dude_obj, 226)) then begin
        gsay_option(68, 142, Node015, 50);
    end
end

procedure Node015
begin
    rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 226));
    if (global_var(7) == 0) then begin
        set_global_var(0, global_var(0) + 5);
        give_exp_points(floor(340 / 5) + (get_critter_stat(dude_obj, 4) * floor(340 / 12)) + (get_critter_stat(dude_obj, 6) * floor(340 / 30)) + (floor(340 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(340 / 5) + (get_critter_stat(dude_obj, 4) * floor(340 / 12)) + (get_critter_stat(dude_obj, 6) * floor(340 / 30)) + (floor(340 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
    end
    else begin
        set_global_var(0, global_var(0) + 5);
        give_exp_points(floor(340 / 5) + (get_critter_stat(dude_obj, 4) * floor(340 / 12)) + (get_critter_stat(dude_obj, 6) * floor(340 / 30)) + (floor(340 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(340 / 5) + (get_critter_stat(dude_obj, 4) * floor(340 / 12)) + (get_critter_stat(dude_obj, 6) * floor(340 / 30)) + (floor(340 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
    end
    if (global_var(29) != 2) then begin
        set_global_var(29, 2);
    end
    set_global_var(68, global_var(68) + 10);
    gsay_reply(68, 150);
    gsay_option(68, 151, Node999, 50);
    gsay_option(68, 152, Node999, 50);
    gsay_option(68, 153, Node999, 50);
end

procedure Node016
begin
    if (global_var(29) == 0) then begin
        set_global_var(29, 1);
    end
    rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 434));
    set_global_var(0, global_var(0) + 7);
    set_global_var(68, global_var(68) + 15);
    gsay_reply(68, message_str(68, 130) + obj_name(dude_obj) + message_str(68, 131));
    gsay_option(68, 132, Node999, 50);
    gsay_option(68, 133, Node999, 50);
    gsay_option(68, 134, Node999, 50);
end

procedure Node017
begin
    gsay_reply(68, obj_name(dude_obj) + message_str(68, 101));
    gsay_option(68, 103, Node999, 50);
    gsay_option(68, 104, Node011, 50);
    gsay_option(68, 105, Node013, 50);
    if (obj_carrying_pid_obj(dude_obj, 434)) then begin
        gsay_option(68, 113, Node016, 50);
    end
end

procedure Node999
begin
end

procedure Node998
begin
    critter_add_trait(self_obj, 1, 6, 300);
    set_local_var(2, 1);
    set_global_var(68, global_var(68) - 25);
end

