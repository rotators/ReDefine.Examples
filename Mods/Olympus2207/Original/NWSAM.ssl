variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable trading_container;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node053a;
procedure Node053b;
procedure Node054;
procedure Node055;
procedure Node056;
procedure Node057;
procedure Node057a;
procedure Node058;
procedure Node059;
procedure Node060;
procedure Node061;
procedure Node062;
procedure Node063;
procedure Node064;
procedure Node065;
procedure Node065a;
procedure Node066;
procedure Node067;
procedure Node068;
procedure Node069;
procedure Node070;
procedure Node071;
procedure Node072;
procedure Node073;
procedure Node074;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(60, 70));
        set_local_var(5, random(30, 40));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, 1, 6, 8);
        critter_add_trait(self_obj, 1, 5, 19);
        if (random(0, 100) <= 40) then begin
            add_obj_to_inven(self_obj, create_object_sid(146, 1, 2, -1));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(65, 1, 2, -1));
        end
        if (random(0, 100) <= 40) then begin
            add_obj_to_inven(self_obj, create_object_sid(108, 1, 2, -1));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(139, 1, 2, -1));
        end
        if (random(0, 100) <= 40) then begin
            add_obj_to_inven(self_obj, create_object_sid(214, 1, 2, -1));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(63, 1, 2, -1));
        end
        if (random(0, 100) <= 60) then begin
            add_obj_to_inven(self_obj, create_object_sid(67, 1, 2, -1));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(132, 1, 2, -1));
        end
        if (random(0, 100) <= 50) then begin
            add_obj_to_inven(self_obj, create_object_sid(147, 1, 2, -1));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(38, 1, 2, -1));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object_sid(226, 1, 2, -1));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object_sid(225, 1, 2, -1));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object_sid(227, 1, 2, -1));
        end
        if (random(0, 100) <= 70) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(2, 1, 2, -1), random(5, 40));
        end
        if (random(0, 100) <= 70) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(5, 1, 2, -1), random(5, 40));
        end
        if (random(0, 100) <= 50) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(7, 1, 2, -1), random(5, 40));
        end
        if (random(0, 100) <= 50) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(9, 1, 2, -1), random(5, 40));
        end
        if (random(0, 100) <= 70) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(14, 1, 2, -1), random(5, 40));
        end
        if (random(0, 100) <= 50) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(33, 1, 2, -1), random(1, 3));
        end
        if (random(0, 100) <= 50) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(25, 1, 2, -1), random(2, 6));
        end
        if (random(0, 100) <= 70) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(20, 1, 2, -1), random(5, 40));
        end
        item_caps_adjust(self_obj, random(10, 30));
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(20, 80), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(50) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(190, 2));
    end
    else begin
        display_msg(message_str(190, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(190, 1));
    end
    else begin
        display_msg(message_str(190, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if (local_var(10) == 1) then begin
        float_msg(self_obj, message_str(190, random(751, 753)), 0);
    end
    else begin
        start_gdialog(190, self_obj, 4, 10, -1);
        gsay_start;
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((50 == 50) or (50 == 59)) then begin
            set_global_var(50, global_var(50) - 3);
        end
        else begin
            set_global_var(50, global_var(50) - 6);
        end
    end
    if (global_var(151) == 1) then begin
        set_global_var(151, 0);
    end
    set_global_var(69, global_var(69) bwor 536870912);
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (global_var(279) == 1) then begin
        move_to(self_obj, 1, 2);
    end
    if (local_var(10) == 1) then begin
        move_to(self_obj, 30303, elevation(self_obj));
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if (local_var(10) == 1) then begin
            if (tile_distance(tile_num(self_obj), 30303) < 4) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 3)), 0);
            end
            else begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), 30303, random(2, 3)), 0);
            end
        end
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    set_local_var(7, 1);
    already_talk := 1;
    gsay_reply(190, 10);
    gsay_option(190, 11, Node002, 50);
    giq_option(1, 190, 12, Node003, 51);
end

procedure Node002
begin
    gsay_reply(190, 20);
    gsay_option(190, 21, Node010, 50);
end

procedure Node003
begin
    gsay_reply(190, 30);
    gsay_option(190, 31, Node010, 50);
    gsay_option(190, 32, Node004, 50);
end

procedure Node004
begin
    gsay_reply(190, 40);
    gsay_option(190, 41, Node010, 50);
    gsay_option(190, 42, Node010, 50);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        if (global_var(221) == 3) then begin
            gsay_reply(190, 1002);
        end
        else begin
            if (global_var(221) == 2) then begin
                gsay_reply(190, 1003);
            end
            else begin
                if (global_var(221) == 1) then begin
                    gsay_reply(190, 1004);
                end
                else begin
                    gsay_reply(190, 1001);
                end
            end
        end
    end
    else begin
        gsay_reply(190, 1000);
    end
    if (not(global_var(221) == 3)) then begin
        gsay_option(190, 101, Node054, 50);
        giq_option(1, 190, 103, Node011, 49);
        gsay_option(190, 104, Node019, 50);
        gsay_option(190, 105, Node020, 50);
    end
    if (global_var(151) == 1) then begin
        gsay_option(190, 102, Node051, 50);
    end
    if ((global_var(143) == 1) and (global_var(208) == 0)) then begin
        gsay_option(190, 106, Node023, 50);
    end
    if (global_var(144) == 1) then begin
        giq_option(1, 190, 107, Node058, 51);
    end
    if (global_var(144) == 2) then begin
        gsay_option(190, 108, Node059, 50);
    end
    gsay_option(190, 109, Node999, 50);
end

procedure Node011
begin
    gsay_reply(190, 110);
    gsay_option(190, 111, Node012, 50);
    gsay_option(190, 112, Node016, 50);
    gsay_option(190, 113, Node015, 50);
    gsay_option(190, 114, Node020, 50);
    gsay_option(190, 115, Node010, 50);
end

procedure Node012
begin
    gsay_reply(190, 120);
    gsay_option(190, 121, Node020, 50);
    gsay_option(190, 122, Node015, 50);
    gsay_option(190, 123, Node013, 50);
    gsay_option(190, 124, Node010, 50);
end

procedure Node013
begin
    gsay_reply(190, 130);
    gsay_option(190, 131, Node018, 50);
    gsay_option(190, 132, Node014, 50);
    gsay_option(190, 133, Node010, 50);
end

procedure Node014
begin
    gsay_reply(190, 140);
    gsay_option(190, 141, Node018, 50);
    gsay_option(190, 142, Node015, 50);
    gsay_option(190, 143, Node010, 50);
end

procedure Node015
begin
    gsay_reply(190, 150);
    gsay_option(190, 151, Node018, 50);
    gsay_option(190, 152, Node010, 50);
end

procedure Node016
begin
    gsay_reply(190, 160);
    gsay_option(190, 161, Node021, 50);
    gsay_option(190, 162, Node023, 50);
    gsay_option(190, 163, Node017, 50);
    gsay_option(190, 164, Node010, 50);
end

procedure Node017
begin
    gsay_reply(190, 170);
    gsay_option(190, 171, Node018, 50);
end

procedure Node018
begin
    gsay_reply(190, 180);
    gsay_option(190, 181, Node022, 50);
    gsay_option(190, 182, Node021, 50);
    gsay_option(190, 183, Node010, 50);
end

procedure Node019
begin
    gsay_reply(190, 190);
    gsay_option(190, 191, Node023, 50);
    gsay_option(190, 192, Node020, 50);
    gsay_option(190, 193, Node010, 50);
end

procedure Node020
begin
    gsay_reply(190, 200);
    gsay_option(190, 201, Node010, 50);
end

procedure Node021
begin
    gsay_reply(190, 210);
    gsay_option(190, 211, Node018, 50);
    gsay_option(190, 212, Node023, 50);
    gsay_option(190, 213, Node022, 50);
    gsay_option(190, 214, Node010, 50);
end

procedure Node022
begin
    gsay_reply(190, 220);
    giq_option(1, 190, 221, Node023, 51);
    if (global_var(369) == 0) then begin
        giq_option(1, 190, 222, Node027, 49);
    end
    gsay_option(190, 223, Node010, 50);
end

procedure Node023
begin
    if (global_var(143) < 2) then begin
        gsay_reply(190, 2301);
    end
    else begin
        if ((global_var(143) == 2) and (local_var(8) == 0)) then begin
            gsay_reply(190, 2302);
        end
        else begin
            gsay_reply(190, 2303);
        end
    end
    if (global_var(143) != 2) then begin
        gsay_option(190, 231, Node024, 50);
    end
    if (global_var(143) == 1) then begin
        gsay_option(190, 232, Node025, 50);
    end
    gsay_option(190, 233, Node010, 50);
end

procedure Node024
begin
    gsay_reply(190, 240);
    if (global_var(143) == 1) then begin
        giq_option(1, 190, 241, Node025, 51);
    end
    gsay_option(190, 242, Node010, 50);
end

procedure Node025
begin
    gsay_reply(190, 250);
    gsay_option(190, 251, Node010, 50);
    if (has_skill(dude_obj, 14) >= 75) then begin
        giq_option(1, 190, 252, Node026, 49);
    end
    if ((get_critter_stat(dude_obj, 34) == 1) and (global_var(223) == 1)) then begin
        gsay_option(190, 253, Node047, 50);
    end
end

procedure Node026
begin
    set_local_var(9, 1);
    set_global_var(208, 1);
    gsay_reply(190, 260);
    giq_option(1, 190, 261, Node010, 49);
    gsay_option(190, 262, Node999, 50);
end

procedure Node027
begin
    gsay_reply(190, 270);
    if (global_var(143) != 2) then begin
        gsay_option(190, 271, Node028, 50);
    end
    if ((global_var(143) == 2) and (local_var(8) == 0)) then begin
        gsay_option(190, 272, Node029, 50);
    end
    if ((global_var(143) == 2) and (local_var(8) == 1)) then begin
        giq_option(1, 190, 273, Node030, 51);
    end
end

procedure Node028
begin
    gsay_reply(190, 280);
    gsay_option(190, 281, Node023, 50);
    gsay_option(190, 282, Node010, 50);
    gsay_option(190, 283, Node999, 50);
end

procedure Node029
begin
    set_global_var(369, 1);
    gsay_reply(190, 290);
    gsay_option(190, 291, Node010, 50);
end

procedure Node030
begin
    gsay_reply(190, 300);
    gsay_option(190, 301, Node031, 50);
end

procedure Node031
begin
    gsay_reply(190, 310);
    gsay_option(190, 311, Node033, 50);
    gsay_option(190, 312, Node037, 50);
    giq_option(1, 190, 313, Node032, 51);
    if ((has_skill(dude_obj, 6) >= 75) or (has_skill(dude_obj, 7) >= 75)) then begin
        giq_option(1, 190, 314, Node050, 49);
    end
    if ((has_skill(dude_obj, 13) >= 75) or (has_skill(dude_obj, 12) >= 75)) then begin
        giq_option(1, 190, 315, Node040, 49);
    end
    gsay_option(190, 316, Node041, 50);
end

procedure Node032
begin
    gsay_reply(190, 320);
    gsay_option(190, 321, Node010, 50);
end

procedure Node033
begin
    gsay_reply(190, 330);
    if ((get_critter_stat(dude_obj, 0) >= 8) and (get_critter_stat(dude_obj, 5) >= 8)) then begin
        giq_option(1, 190, 331, Node034, 49);
    end
    else begin
        giq_option(1, 190, 332, Node035, 49);
    end
    gsay_option(190, 333, Node010, 50);
end

procedure Node034
begin
    gsay_reply(190, 340);
    gsay_option(190, 341, Node036, 50);
end

procedure Node035
begin
    gsay_reply(190, 350);
    gsay_option(190, 351, Node010, 50);
end

procedure Node036
begin
    set_global_var(369, 1);
    set_local_var(9, 1);
    gsay_reply(190, 360);
    gsay_option(190, 361, Node010, 50);
end

procedure Node037
begin
    gsay_reply(190, 370);
    if ((get_critter_stat(dude_obj, 4) >= 8) and (get_critter_stat(dude_obj, 1) >= 8)) then begin
        giq_option(1, 190, 371, Node038, 49);
    end
    else begin
        giq_option(1, 190, 372, Node039, 49);
    end
    gsay_option(190, 373, Node010, 50);
end

procedure Node038
begin
    gsay_reply(190, 380);
    gsay_option(190, 381, Node036, 50);
end

procedure Node039
begin
    gsay_reply(190, 390);
    gsay_option(190, 391, Node010, 50);
end

procedure Node040
begin
    gsay_reply(190, 400);
    gsay_option(190, 401, Node036, 50);
end

procedure Node041
begin
    gsay_reply(190, 410);
    giq_option(1, 190, 411, Node042, 51);
end

procedure Node042
begin
    gsay_reply(190, 420);
    if (item_caps_total(dude_obj) >= 200) then begin
        giq_option(1, 190, 421, Node043, 49);
    end
    giq_option(1, 190, 422, Node044, 51);
end

procedure Node043
begin
    item_caps_adjust(dude_obj, -200);
    item_caps_adjust(self_obj, 200);
    gsay_reply(190, 430);
    gsay_option(190, 431, Node046, 50);
end

procedure Node044
begin
    gsay_reply(190, 440);
    gsay_option(190, 441, Node045, 50);
end

procedure Node045
begin
    gsay_reply(190, 450);
    gsay_option(190, 451, Node999, 50);
end

procedure Node046
begin
    set_global_var(369, 1);
    gsay_reply(190, 460);
    gsay_option(190, 461, Node010, 50);
end

procedure Node047
begin
    gsay_reply(190, 470);
    giq_option(1, 190, 471, Node048, 51);
end

procedure Node048
begin
    gsay_reply(190, 480);
    gsay_option(190, 481, Node049, 50);
end

procedure Node049
begin
    set_local_var(8, 1);
    set_global_var(208, 1);
    set_global_var(0, global_var(0) - 7);
    gsay_reply(190, 490);
    gsay_option(190, 491, Node010, 50);
end

procedure Node050
begin
    gsay_reply(190, 500);
    gsay_option(190, 501, Node036, 50);
end

procedure Node051
begin
    gsay_reply(190, 510);
    gsay_option(190, 511, Node010, 50);
    if (global_var(203) == 5) then begin
        gsay_option(190, 512, Node052, 50);
    end
end

procedure Node052
begin
    gsay_reply(190, 520);
    giq_option(1, 190, 521, Node053, 49);
end

procedure Node053
begin
    if (global_var(151) < 2) then begin
        set_global_var(151, 2);
        give_exp_points(floor(518 / 5) + (get_critter_stat(dude_obj, 4) * floor(518 / 12)) + (get_critter_stat(dude_obj, 6) * floor(518 / 30)) + (floor(518 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(518 / 5) + (get_critter_stat(dude_obj, 4) * floor(518 / 12)) + (get_critter_stat(dude_obj, 6) * floor(518 / 30)) + (floor(518 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        set_global_var(50, global_var(50) + 3);
    end
    gsay_reply(190, 530);
    gsay_option(190, 531, Node053a, 50);
    gsay_option(190, 532, Node053b, 50);
    if (global_var(221) == 3) then begin
        gsay_option(190, 533, Node999, 50);
    end
end

procedure Node053a
begin
    item_caps_adjust(dude_obj, 200);
end

procedure Node053b
begin
    set_global_var(0, global_var(0) + 20);
    display_msg(message_str(190, 750));
end

procedure Node054
begin
    gsay_reply(190, 540);
    if (global_var(151) == 0) then begin
        gsay_option(190, 541, Node055, 50);
    end
    gsay_option(190, 542, Node010, 50);
end

procedure Node055
begin
    gsay_reply(190, 550);
    gsay_option(190, 551, Node056, 50);
end

procedure Node056
begin
    gsay_reply(190, 560);
    gsay_option(190, 561, Node010, 50);
    gsay_option(190, 562, Node057, 50);
end

procedure Node057
begin
    set_global_var(151, 1);
    gsay_reply(190, 570);
    if (not(metarule(17, 5) == 1) or not(metarule(17, 10) == 1)) then begin
        gsay_option(190, 571, Node057a, 50);
    end
    else begin
        gsay_option(190, 572, Node999, 50);
    end
end

procedure Node057a
begin
    mark_area_known(0, 10, 1);
    mark_area_known(0, 5, 1);
end

procedure Node058
begin
    gsay_reply(190, 580);
    gsay_option(190, 581, Node010, 50);
    gsay_option(190, 582, Node999, 50);
end

procedure Node059
begin
    if (global_var(221) == 3) then begin
        gsay_reply(190, 590);
    end
    if (global_var(221) == 2) then begin
        gsay_reply(190, 591);
    end
    if (global_var(221) == 1) then begin
        gsay_reply(190, 592);
    end
    if (global_var(221) == 3) then begin
        gsay_option(190, 593, Node060, 50);
    end
    if (global_var(221) == 2) then begin
        gsay_option(190, 594, Node073, 50);
    end
    if (global_var(221) == 1) then begin
        gsay_option(190, 595, Node074, 50);
    end
    gsay_option(190, 596, Node999, 50);
end

procedure Node060
begin
    gsay_reply(190, 600);
    giq_option(1, 190, 601, Node061, 51);
    giq_option(1, 190, 602, Node072, 49);
    gsay_option(190, 603, Node066, 50);
end

procedure Node061
begin
    gsay_reply(190, 610);
    giq_option(1, 190, 611, Node062, 49);
    gsay_option(190, 612, Node063, 50);
    giq_option(1, 190, 613, Node063, 51);
    giq_option(1, 190, 614, Node065, 51);
end

procedure Node062
begin
    gsay_reply(190, 620);
    gsay_option(190, 621, Node999, 50);
    gsay_option(190, 622, Node999, 50);
end

procedure Node063
begin
    set_local_var(10, 1);
    gsay_reply(190, 630);
    gsay_option(190, 631, Node999, 50);
    gsay_option(190, 632, Node064, 50);
end

procedure Node064
begin
    set_local_var(10, 1);
    gsay_reply(190, 640);
    gsay_option(190, 641, Node999, 50);
end

procedure Node065
begin
    set_global_var(279, 1);
    set_global_var(0, global_var(0) - 5);
    gsay_reply(190, 650);
    gsay_option(190, 651, Node065a, 50);
    gsay_option(190, 652, Node065a, 50);
end

procedure Node065a
begin
    fadeOut(700);
    move_to(self_obj, 1, 2);
    fadeIn(700);
end

procedure Node066
begin
    gsay_reply(190, 660);
    giq_option(1, 190, 661, Node067, 51);
    gsay_option(190, 662, Node069, 50);
end

procedure Node067
begin
    gsay_reply(190, 670);
    gsay_option(190, 671, Node068, 50);
    gsay_option(190, 672, Node063, 50);
end

procedure Node068
begin
    gsay_reply(190, 680);
    gsay_option(190, 681, Node999, 50);
end

procedure Node069
begin
    gsay_reply(190, 690);
    gsay_option(190, 691, Node071, 50);
    gsay_option(190, 692, Node070, 50);
    gsay_option(190, 693, Node999, 50);
end

procedure Node070
begin
    gsay_reply(190, 700);
    gsay_option(190, 701, Node063, 50);
end

procedure Node071
begin
    gsay_reply(190, 710);
    gsay_option(190, 711, Node063, 50);
    gsay_option(190, 712, Node999, 50);
end

procedure Node072
begin
    gsay_reply(190, 720);
    gsay_option(190, 721, Node999, 50);
end

procedure Node073
begin
    gsay_reply(190, 730);
    gsay_option(190, 731, Node999, 50);
end

procedure Node074
begin
    gsay_reply(190, 740);
    gsay_option(190, 741, Node999, 50);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

