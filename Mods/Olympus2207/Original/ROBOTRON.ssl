variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node010;
procedure Node011;
procedure Node012;
procedure NodePartyIn;
procedure NodeInParty;
procedure NodeDistance;
procedure NodeSD;
procedure NodeMD;
procedure NodeLD;
procedure NodePartyOut;
procedure NodeOutParty;
procedure NodeTalk;
procedure NodeHowToSpeak;
procedure NodeHTS0;
procedure NodeHTS1;
procedure NodeHTS2;
procedure NodeHTS3;
procedure NodeAmmo;
procedure Node999;
procedure Node998;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(90, 95));
        set_local_var(5, random(10, 20));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, 1, 6, 300);
        critter_add_trait(self_obj, 1, 5, 46);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if (global_var(266) == 1) then begin
        if (local_var(10) == 0) then begin
            if ((tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 3) and (tile_distance(tile_num(dude_obj), tile_num(self_obj)) <= 7)) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(2, 4)), 0);
            end
            else begin
                if (tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 7) then begin
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(2, 4)), 1);
                end
            end
        end
        if (local_var(10) == 1) then begin
            if ((tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 6) and (tile_distance(tile_num(dude_obj), tile_num(self_obj)) <= 10)) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 5)), 0);
            end
            else begin
                if (tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 10) then begin
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 5)), 1);
                end
            end
        end
        if (local_var(10) == 2) then begin
            if ((tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 10) and (tile_distance(tile_num(dude_obj), tile_num(self_obj)) <= 16)) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(4, 6)), 0);
            end
            else begin
                if (tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 16) then begin
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(4, 6)), 1);
                end
            end
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (local_var(2) == 1) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(328, 2));
    end
    else begin
        display_msg(message_str(328, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(328, 1));
    end
    else begin
        display_msg(message_str(328, 3));
    end
end

procedure pickup_p_proc
begin
end

procedure push_p_proc
begin
    if (global_var(266) != 1) then begin
        script_overrides;
    end
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if (local_var(9) < 3) then begin
        if (local_var(7) == 0) then begin
            start_gdialog(328, self_obj, -1, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
        else begin
            display_msg(message_str(328, 14));
        end
    end
    else begin
        start_gdialog(328, self_obj, -1, -1, -1);
        gsay_start;
        if (global_var(266) == 1) then begin
            call NodeInParty();
        end
        if (global_var(266) == 2) then begin
            call NodeOutParty();
        end
        if (global_var(266) == 0) then begin
            call Node010();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (global_var(266) == 1) then begin
        set_global_var(266, 0);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
    script_overrides;
    if ((obj_pid(obj_being_used_with) == 23) and (local_var(9) < 3)) then begin
        rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 23));
        set_local_var(9, local_var(9) + 1);
        if (local_var(9) < 3) then begin
            display_msg(message_str(328, 15));
        end
        else begin
            display_msg(message_str(328, 16));
        end
    end
    else begin
        display_msg(message_str(10, random(60, 69)));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    gsay_reply(328, 10);
    if (get_critter_stat(dude_obj, 4) <= 3) then begin
        gsay_option(328, 11, Node002, 50);
    end
    else begin
        gsay_option(328, 12, Node002, 50);
    end
    gsay_option(328, 13, Node999, 50);
end

procedure Node002
begin
    gsay_reply(328, 20);
    if (get_critter_stat(dude_obj, 4) <= 3) then begin
        gsay_option(328, message_str(328, 21) + obj_name(dude_obj) + message_str(328, 22), Node003, 50);
    end
    else begin
        gsay_option(328, message_str(328, 23) + obj_name(dude_obj) + message_str(328, 24), Node003, 50);
    end
end

procedure Node003
begin
    set_local_var(7, 1);
    gsay_reply(328, message_str(328, 30) + obj_name(dude_obj) + message_str(328, 31));
    if (get_critter_stat(dude_obj, 4) <= 3) then begin
        gsay_option(328, 32, Node999, 50);
    end
    else begin
        gsay_option(328, 33, Node999, 50);
    end
end

procedure Node010
begin
    already_talk := 1;
    gsay_reply(328, 100);
    if (get_critter_stat(dude_obj, 4) <= 3) then begin
        gsay_option(328, 101, Node011, 50);
    end
    else begin
        gsay_option(328, 102, Node011, 50);
    end
    gsay_option(328, 103, Node012, 50);
    gsay_option(328, 104, Node999, 50);
end

procedure Node011
begin
    gsay_reply(328, 110);
    gsay_option(328, 111, NodePartyIn, 50);
    gsay_option(328, 112, Node999, 50);
end

procedure Node012
begin
    gsay_reply(328, 120);
    gsay_option(328, 121, Node011, 50);
    gsay_option(328, 122, Node011, 50);
    gsay_option(328, 123, Node999, 50);
end

procedure NodePartyIn
begin
    set_global_var(266, 1);
    party_add(self_obj);
    set_local_var(10, 1);
    if (local_var(8) == 0) then begin
        gsay_reply(328, 500);
    end
    if (local_var(8) == 1) then begin
        gsay_reply(328, 501);
    end
    if (local_var(8) == 2) then begin
        gsay_reply(328, 502);
    end
    if (local_var(8) == 3) then begin
        gsay_reply(328, 503);
    end
    gsay_option(328, 504, NodeInParty, 50);
end

procedure NodeInParty
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        if (local_var(8) == 0) then begin
            gsay_reply(328, 510);
        end
        if (local_var(8) == 1) then begin
            gsay_reply(328, 511);
        end
        if (local_var(8) == 2) then begin
            gsay_reply(328, 512);
        end
        if (local_var(8) == 3) then begin
            gsay_reply(328, 513);
        end
    end
    else begin
        if (local_var(8) == 0) then begin
            gsay_reply(328, 514);
        end
        if (local_var(8) == 1) then begin
            gsay_reply(328, 515);
        end
        if (local_var(8) == 2) then begin
            gsay_reply(328, 516);
        end
        if (local_var(8) == 3) then begin
            gsay_reply(328, 517);
        end
    end
    gsay_option(328, 518, NodeDistance, 50);
    gsay_option(328, 519, NodePartyOut, 50);
    gsay_option(328, 520, NodeTalk, 50);
    if (obj_carrying_pid_obj(dude_obj, 28)) then begin
        gsay_option(328, 522, NodeAmmo, 50);
    end
    gsay_option(328, 521, Node999, 50);
end

procedure NodeDistance
begin
    if (local_var(8) == 0) then begin
        gsay_reply(328, 530);
    end
    if (local_var(8) == 1) then begin
        gsay_reply(328, 531);
    end
    if (local_var(8) == 2) then begin
        gsay_reply(328, 532);
    end
    if (local_var(8) == 3) then begin
        gsay_reply(328, 533);
    end
    gsay_option(328, 534, NodeSD, 50);
    gsay_option(328, 535, NodeMD, 50);
    gsay_option(328, 536, NodeLD, 50);
    gsay_option(328, 537, NodeInParty, 50);
end

procedure NodeSD
begin
    set_local_var(10, 0);
    if (local_var(8) == 0) then begin
        gsay_reply(328, 540);
    end
    if (local_var(8) == 1) then begin
        gsay_reply(328, 541);
    end
    if (local_var(8) == 2) then begin
        gsay_reply(328, 542);
    end
    if (local_var(8) == 3) then begin
        gsay_reply(328, 543);
    end
    gsay_option(328, 544, NodeInParty, 50);
    gsay_option(328, 545, Node999, 50);
end

procedure NodeMD
begin
    set_local_var(10, 1);
    if (local_var(8) == 0) then begin
        gsay_reply(328, 550);
    end
    if (local_var(8) == 1) then begin
        gsay_reply(328, 551);
    end
    if (local_var(8) == 2) then begin
        gsay_reply(328, 552);
    end
    if (local_var(8) == 3) then begin
        gsay_reply(328, 553);
    end
    gsay_option(328, 554, NodeInParty, 50);
    gsay_option(328, 555, Node999, 50);
end

procedure NodeLD
begin
    set_local_var(10, 2);
    if (local_var(8) == 0) then begin
        gsay_reply(328, 560);
    end
    if (local_var(8) == 1) then begin
        gsay_reply(328, 561);
    end
    if (local_var(8) == 2) then begin
        gsay_reply(328, 562);
    end
    if (local_var(8) == 3) then begin
        gsay_reply(328, 563);
    end
    gsay_option(328, 564, NodeInParty, 50);
    gsay_option(328, 565, Node999, 50);
end

procedure NodePartyOut
begin
    party_remove(self_obj);
    set_global_var(266, 2);
    if (local_var(8) == 0) then begin
        gsay_reply(328, 570);
    end
    if (local_var(8) == 1) then begin
        gsay_reply(328, 571);
    end
    if (local_var(8) == 2) then begin
        gsay_reply(328, 572);
    end
    if (local_var(8) == 3) then begin
        gsay_reply(328, 573);
    end
    gsay_option(328, 574, NodePartyIn, 50);
    gsay_option(328, 575, Node999, 50);
end

procedure NodeOutParty
begin
    if (local_var(8) == 0) then begin
        gsay_reply(328, 580);
    end
    if (local_var(8) == 1) then begin
        gsay_reply(328, 581);
    end
    if (local_var(8) == 2) then begin
        gsay_reply(328, 582);
    end
    if (local_var(8) == 3) then begin
        gsay_reply(328, 583);
    end
    gsay_option(328, 584, NodePartyIn, 50);
    gsay_option(328, 585, Node999, 50);
end

procedure NodeTalk
begin
    if (local_var(8) == 0) then begin
        gsay_reply(328, 590);
    end
    if (local_var(8) == 1) then begin
        gsay_reply(328, 591);
    end
    if (local_var(8) == 2) then begin
        gsay_reply(328, 592);
    end
    if (local_var(8) == 3) then begin
        gsay_reply(328, 593);
    end
    gsay_option(328, 594, NodeHowToSpeak, 50);
    gsay_option(328, 595, NodeInParty, 50);
    gsay_option(328, 596, Node999, 50);
end

procedure NodeHowToSpeak
begin
    gsay_reply(328, 600);
    gsay_option(328, 601, NodeHTS0, 50);
    gsay_option(328, 602, NodeHTS1, 50);
    gsay_option(328, 603, NodeHTS2, 50);
    gsay_option(328, 604, NodeHTS3, 50);
end

procedure NodeHTS0
begin
    set_local_var(8, 0);
    critter_add_trait(self_obj, 1, 5, 77);
    call NodeInParty();
end

procedure NodeHTS1
begin
    set_local_var(8, 1);
    critter_add_trait(self_obj, 1, 5, 48);
    call NodeInParty();
end

procedure NodeHTS2
begin
    set_local_var(8, 2);
    critter_add_trait(self_obj, 1, 5, 53);
    call NodeInParty();
end

procedure NodeHTS3
begin
    set_local_var(8, 3);
    critter_add_trait(self_obj, 1, 5, 58);
    call NodeInParty();
end

procedure NodeAmmo
begin
    add_obj_to_inven(self_obj, create_object_sid(28, 1, 2, -1));
    rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 28));
    if (local_var(8) == 0) then begin
        gsay_reply(328, 610);
    end
    if (local_var(8) == 1) then begin
        gsay_reply(328, 611);
    end
    if (local_var(8) == 2) then begin
        gsay_reply(328, 612);
    end
    if (local_var(8) == 3) then begin
        gsay_reply(328, 613);
    end
    gsay_option(328, 614, NodeInParty, 50);
    gsay_option(328, 615, Node999, 50);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
end

