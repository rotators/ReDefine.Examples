variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable max_distance;
variable animation_is_called;
variable floater_is_called;
variable distance_to_walk;
variable time_to_work;
variable time_to_repose;
variable work_tile_chois;
variable repose_tile_chois;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(30, 50));
        set_local_var(5, random(30, 60));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, 1, 6, 22);
        max_distance := random(15, 20);
        if (random(0, 100) <= 33) then begin
            if (random(0, 100) <= 15) then begin
                add_obj_to_inven(self_obj, create_object_sid(414, 1, 2, -1));
            end
            if (random(0, 100) <= 10) then begin
                add_mult_objs_to_inven(self_obj, create_object_sid(238, 1, 2, -1), random(1, 2));
            end
            if (random(0, 100) <= 10) then begin
                add_mult_objs_to_inven(self_obj, create_object_sid(213, 1, 2, -1), random(1, 2));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object_sid(420, 1, 2, -1));
            end
            if (random(0, 100) <= 8) then begin
                add_obj_to_inven(self_obj, create_object_sid(218, 1, 2, -1));
            end
            if (random(0, 100) <= 7) then begin
                add_obj_to_inven(self_obj, create_object_sid(70, 1, 2, -1));
            end
            if (random(0, 100) <= 6) then begin
                add_obj_to_inven(self_obj, create_object_sid(106, 1, 2, -1));
            end
            if (random(0, 100) <= 5) then begin
                add_obj_to_inven(self_obj, create_object_sid(244, 1, 2, -1));
            end
            if (random(0, 100) <= 5) then begin
                add_obj_to_inven(self_obj, create_object_sid(242, 1, 2, -1));
            end
            if (random(0, 100) <= 5) then begin
                add_obj_to_inven(self_obj, create_object_sid(422, 1, 2, -1));
            end
            if (random(0, 100) <= 4) then begin
                add_obj_to_inven(self_obj, create_object_sid(423, 1, 2, -1));
            end
            if (random(0, 100) <= 3) then begin
                add_obj_to_inven(self_obj, create_object_sid(426, 1, 2, -1));
            end
            if (random(0, 100) <= 2) then begin
                add_obj_to_inven(self_obj, create_object_sid(433, 1, 2, -1));
            end
            if (random(0, 100) <= 2) then begin
                add_obj_to_inven(self_obj, create_object_sid(421, 1, 2, -1));
            end
        end
        else begin
            if (random(0, 100) <= 50) then begin
                if (random(0, 100) <= 20) then begin
                    add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(1, 10));
                end
                if (random(0, 100) <= 15) then begin
                    add_mult_objs_to_inven(self_obj, create_object_sid(238, 1, 2, -1), random(1, 2));
                end
                if (random(0, 100) <= 15) then begin
                    add_mult_objs_to_inven(self_obj, create_object_sid(213, 1, 2, -1), random(1, 2));
                end
                if (random(0, 100) <= 15) then begin
                    add_obj_to_inven(self_obj, create_object_sid(35, 1, 2, -1));
                end
                if (random(0, 100) <= 14) then begin
                    add_obj_to_inven(self_obj, create_object_sid(65, 1, 2, -1));
                end
                if (random(0, 100) <= 13) then begin
                    add_obj_to_inven(self_obj, create_object_sid(218, 1, 2, -1));
                end
                if (random(0, 100) <= 12) then begin
                    add_obj_to_inven(self_obj, create_object_sid(70, 1, 2, -1));
                end
                if (random(0, 100) <= 11) then begin
                    add_obj_to_inven(self_obj, create_object_sid(106, 1, 2, -1));
                end
                if (random(0, 100) <= 10) then begin
                    add_obj_to_inven(self_obj, create_object_sid(244, 1, 2, -1));
                end
                if (random(0, 100) <= 10) then begin
                    add_obj_to_inven(self_obj, create_object_sid(242, 1, 2, -1));
                end
                if (random(0, 100) <= 10) then begin
                    add_obj_to_inven(self_obj, create_object_sid(414, 1, 2, -1));
                end
                if (random(0, 100) <= 10) then begin
                    add_obj_to_inven(self_obj, create_object_sid(422, 1, 2, -1));
                end
                if (random(0, 100) <= 9) then begin
                    add_obj_to_inven(self_obj, create_object_sid(423, 1, 2, -1));
                end
                if (random(0, 100) <= 8) then begin
                    add_obj_to_inven(self_obj, create_object_sid(426, 1, 2, -1));
                end
                if (random(0, 100) <= 7) then begin
                    add_obj_to_inven(self_obj, create_object_sid(433, 1, 2, -1));
                end
                if (random(0, 100) <= 6) then begin
                    add_obj_to_inven(self_obj, create_object_sid(421, 1, 2, -1));
                end
                if (random(0, 100) <= 5) then begin
                    add_obj_to_inven(self_obj, create_object_sid(427, 1, 2, -1));
                end
                if (random(0, 100) <= 4) then begin
                    add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
                end
                if (random(0, 100) <= 3) then begin
                    add_obj_to_inven(self_obj, create_object_sid(74, 1, 2, -1));
                end
            end
            else begin
                if (random(0, 100) <= 15) then begin
                    add_obj_to_inven(self_obj, create_object_sid(438, 1, 2, -1));
                end
                if (random(0, 100) <= 10) then begin
                    add_mult_objs_to_inven(self_obj, create_object_sid(238, 1, 2, -1), random(1, 2));
                end
                if (random(0, 100) <= 10) then begin
                    add_mult_objs_to_inven(self_obj, create_object_sid(213, 1, 2, -1), random(1, 2));
                end
                if (random(0, 100) <= 10) then begin
                    add_obj_to_inven(self_obj, create_object_sid(233, 1, 2, -1));
                end
                if (random(0, 100) <= 10) then begin
                    add_obj_to_inven(self_obj, create_object_sid(420, 1, 2, -1));
                end
                if (random(0, 100) <= 9) then begin
                    add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
                end
                if (random(0, 100) <= 8) then begin
                    add_obj_to_inven(self_obj, create_object_sid(218, 1, 2, -1));
                end
                if (random(0, 100) <= 6) then begin
                    add_obj_to_inven(self_obj, create_object_sid(440, 1, 2, -1));
                end
                if (random(0, 100) <= 5) then begin
                    add_obj_to_inven(self_obj, create_object_sid(244, 1, 2, -1));
                end
                if (random(0, 100) <= 5) then begin
                    add_obj_to_inven(self_obj, create_object_sid(428, 1, 2, -1));
                end
                if (random(0, 100) <= 5) then begin
                    add_obj_to_inven(self_obj, create_object_sid(422, 1, 2, -1));
                end
                if (random(0, 100) <= 4) then begin
                    add_obj_to_inven(self_obj, create_object_sid(423, 1, 2, -1));
                end
                if (random(0, 100) <= 3) then begin
                    add_obj_to_inven(self_obj, create_object_sid(426, 1, 2, -1));
                end
                if (random(0, 100) <= 2) then begin
                    add_obj_to_inven(self_obj, create_object_sid(433, 1, 2, -1));
                end
                if (random(0, 100) <= 2) then begin
                    add_obj_to_inven(self_obj, create_object_sid(421, 1, 2, -1));
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(39, 89), 1);
    end
    if (floater_is_called == 0) then begin
        floater_is_called := 1;
        add_timer_event(self_obj, random(300, 700), 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(54) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(239, random(6, 9)));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(239, random(1, 5)));
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if (global_var(0) > 0) then begin
        dude_objective_reputation := (global_var(54) * 30) + global_var(0) - (20 * global_var(1));
    end
    else begin
        dude_objective_reputation := (global_var(54) * 30) + global_var(0) - (20 * global_var(1));
    end
    if ((dude_objective_reputation + local_var(6)) >= 300) then begin
        self_subjective_reaction := 1;
    end
    else begin
        if (((dude_objective_reputation + local_var(6)) >= -300) and ((dude_objective_reputation + local_var(6)) < 300)) then begin
            self_subjective_reaction := 0;
        end
        else begin
            self_subjective_reaction := -1;
        end
    end
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if (self_subjective_reaction == 1) then begin
        float_msg(self_obj, message_str(239, random(1000, 1009)), 3);
    end
    if (self_subjective_reaction == 0) then begin
        float_msg(self_obj, message_str(239, random(1010, 1019)), 0);
    end
    if (self_subjective_reaction == -1) then begin
        float_msg(self_obj, message_str(239, random(1020, 1029)), 2);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((54 == 50) or (54 == 59)) then begin
            set_global_var(54, global_var(54) - 3);
        end
        else begin
            set_global_var(54, global_var(54) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    max_distance := random(15, 20);
    if (random(0, 100) <= 70) then begin
        time_to_work := game_time_hour % 100;
        time_to_repose := time_to_work + random(10, 15);
        if (time_to_repose >= 60) then begin
            time_to_repose := random(0, 5);
        end
    end
    else begin
        time_to_repose := game_time_hour % 100;
        time_to_work := time_to_repose + random(3, 5);
        if (time_to_work >= 60) then begin
            time_to_work := random(0, 5);
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if (((game_time_hour % 100) >= time_to_work) and ((game_time_hour % 100) < time_to_repose) or (((game_time_hour % 100) >= time_to_work) and (time_to_work > time_to_repose)) or (((game_time_hour % 100) < time_to_work) and (time_to_work > time_to_repose))) then begin
            if ((game_time_hour % 100) >= time_to_repose) then begin
                time_to_repose := time_to_work + random(5, 15);
                if (time_to_repose >= 60) then begin
                    time_to_repose := random(0, 5);
                end
                repose_tile_chois := 0;
            end
            if ((tile_num(self_obj) != 12896) and (tile_num(self_obj) != 12306) and (tile_num(self_obj) != 15712)) then begin
                work_tile_chois := random(1, 6);
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                if (work_tile_chois == 1) then begin
                    if (tile_num(self_obj) != 12896) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), 12896) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 12896), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, 12896, -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                if (work_tile_chois == 2) then begin
                    if (tile_num(self_obj) != 12306) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), 12306) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 12306), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, 12306, -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                if (work_tile_chois == 3) then begin
                    if (tile_num(self_obj) != 15712) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), 15712) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 15712), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, 15712, -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                if (work_tile_chois == 4) then begin
                    if (tile_num(self_obj) != 17899) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), 17899) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 17899), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, 17899, -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                if (work_tile_chois == 5) then begin
                    if (tile_num(self_obj) != 16689) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), 16689) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 16689), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, 16689, -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                if (work_tile_chois == 6) then begin
                    if (tile_num(self_obj) != 13271) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), 13271) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 13271), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, 13271, -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                reg_anim_func(3, 0);
            end
            else begin
                if (tile_num(self_obj) == 12896) then begin
                    anim(self_obj, 1000, 5);
                end
                if (tile_num(self_obj) == 12306) then begin
                    anim(self_obj, 1000, 5);
                end
                if (tile_num(self_obj) == 15712) then begin
                    anim(self_obj, 1000, 2);
                end
                if (tile_num(self_obj) == 17899) then begin
                    anim(self_obj, 1000, 5);
                end
                if (tile_num(self_obj) == 16689) then begin
                    anim(self_obj, 1000, 1);
                end
                if (tile_num(self_obj) == 13271) then begin
                    anim(self_obj, 1000, 5);
                end
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                if (random(1, 2) == 1) then begin
                    reg_anim_animate(self_obj, 0, -1);
                end
                if (random(1, 3) == 1) then begin
                    reg_anim_animate(self_obj, 10, -1);
                end
                reg_anim_animate(self_obj, 11, -1);
                if (random(1, 4) == 1) then begin
                    reg_anim_animate(self_obj, 16, -1);
                    reg_anim_animate(self_obj, 0, -1);
                end
                if (random(1, 2) == 1) then begin
                    reg_anim_animate(self_obj, 0, -1);
                end
                reg_anim_func(3, 0);
            end
        end
        else begin
            if ((game_time_hour % 100) >= time_to_work) then begin
                time_to_work := time_to_repose + random(2, 6);
            end
            if (time_to_work >= 60) then begin
                time_to_work := random(0, 2);
            end
            if (repose_tile_chois == 0) then begin
                repose_tile_chois := random(1, 2);
            end
            if (repose_tile_chois == 1) then begin
                if (tile_distance(tile_num(self_obj), 14283) >= 30) then begin
                    if (tile_num(self_obj) != tile_num_in_direction(14283, random(0, 5), random(3, 9))) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), tile_num_in_direction(14283, random(0, 5), random(3, 9))) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), tile_num_in_direction(14283, random(0, 5), random(3, 9))), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(14283, random(0, 5), random(3, 9)), -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                else begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(floor(max_distance / 3), max_distance)), -1);
                    if (random(0, 100) <= 50) then begin
                        reg_anim_animate(self_obj, 10, -1);
                    end
                    if (random(0, 100) <= 50) then begin
                        reg_anim_animate(self_obj, 0, -1);
                    end
                    reg_anim_func(3, 0);
                end
            end
            if (repose_tile_chois == 2) then begin
                if (tile_distance(tile_num(self_obj), 9697) >= 30) then begin
                    if (tile_num(self_obj) != tile_num_in_direction(9697, random(0, 5), random(3, 9))) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), tile_num_in_direction(9697, random(0, 5), random(3, 9))) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), tile_num_in_direction(9697, random(0, 5), random(3, 9))), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(9697, random(0, 5), random(3, 9)), -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                else begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(floor(max_distance / 3), max_distance)), -1);
                    if (random(0, 100) <= 50) then begin
                        reg_anim_animate(self_obj, 10, -1);
                    end
                    if (random(0, 100) <= 50) then begin
                        reg_anim_animate(self_obj, 0, -1);
                    end
                    reg_anim_func(3, 0);
                end
            end
        end
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        if (obj_on_screen(self_obj)) then begin
            if ((global_var(118) bwand 67108864) != 0) then begin
                float_msg(self_obj, message_str(239, random(1045, 1049)), 0);
            end
            else begin
                if (global_var(309) == 1) then begin
                    float_msg(self_obj, message_str(239, random(1050, 1054)), 0);
                end
                else begin
                    if (global_var(309) == 2) then begin
                        float_msg(self_obj, message_str(239, random(1055, 1059)), 0);
                    end
                    else begin
                        float_msg(self_obj, message_str(239, random(1040, 1044)), 0);
                    end
                end
            end
        end
        floater_is_called := 0;
    end
end

