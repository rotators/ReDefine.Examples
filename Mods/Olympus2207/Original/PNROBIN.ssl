variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable want_to_know;
variable apples_qty;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node020;
procedure Node030;
procedure Node031;
procedure Node040;
procedure Node050;
procedure Node051;
procedure NodeQA;
procedure Node060;
procedure Node061;
procedure Node062;
procedure Node063;
procedure Node064;
procedure NodeRenessance;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(80, 90));
        set_local_var(5, random(30, 40));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, 1, 6, 5);
        critter_add_trait(self_obj, 1, 5, 10);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(49) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(127, 2));
    end
    else begin
        display_msg(message_str(127, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(127, 1));
    end
    else begin
        display_msg(message_str(127, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    start_gdialog(127, self_obj, -1, -1, -1);
    gsay_start;
    if (local_var(7) == 0) then begin
        call Node001();
    end
    else begin
        call Node010();
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((49 == 50) or (49 == 59)) then begin
            set_global_var(49, global_var(49) - 3);
        end
        else begin
            set_global_var(49, global_var(49) - 6);
        end
    end
    set_global_var(69, global_var(69) bwor 2048);
    if (global_var(124) == 1) then begin
        set_global_var(124, 0);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        apples_qty := 6;
    end
    else begin
        apples_qty := 4;
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    gsay_reply(127, 10);
    gsay_option(127, 11, Node002, 50);
    gsay_option(127, message_str(127, 12) + obj_name(dude_obj) + message_str(127, 13), Node002, 50);
    gsay_option(127, 14, Node999, 50);
end

procedure Node002
begin
    gsay_reply(127, 20);
    gsay_option(127, 21, Node003, 50);
    gsay_option(127, 22, Node003, 50);
    gsay_option(127, 23, Node999, 50);
end

procedure Node003
begin
    gsay_reply(127, 30);
    gsay_option(127, 31, Node004, 50);
    gsay_option(127, 32, Node005, 50);
end

procedure Node004
begin
    gsay_reply(127, 40);
    gsay_option(127, 41, Node006, 50);
end

procedure Node005
begin
    gsay_reply(127, 50);
    gsay_option(127, 51, Node006, 50);
end

procedure Node006
begin
    set_local_var(7, 1);
    already_talk := 1;
    gsay_reply(127, 60);
    gsay_option(127, 61, Node010, 50);
    gsay_option(127, 62, Node999, 50);
    gsay_option(127, 63, Node999, 50);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        gsay_reply(127, 100);
    end
    else begin
        gsay_reply(127, random(101, 102));
    end
    gsay_option(127, 103, Node011, 50);
    gsay_option(127, 104, Node030, 50);
    gsay_option(127, 105, Node040, 50);
    gsay_option(127, 125, Node020, 50);
    if (global_var(124) == 0) then begin
        if (map_var(0) == 1) then begin
            gsay_option(127, 106, Node050, 50);
        end
        else begin
            gsay_option(127, 107, Node050, 50);
        end
    end
    if (global_var(124) == 1) then begin
        gsay_option(127, 108, Node060, 50);
    end
    gsay_option(127, 109, Node999, 50);
end

procedure Node011
begin
    if (want_to_know == 0) then begin
        want_to_know := 1;
        gsay_reply(127, 111);
    end
    else begin
        gsay_reply(127, 112);
    end
    if (local_var(8) == 0) then begin
        gsay_option(127, 113, NodeRenessance, 50);
    end
    gsay_option(127, 114, Node012, 50);
    gsay_option(127, 115, Node013, 50);
    gsay_option(127, 116, Node014, 50);
    gsay_option(127, 117, Node010, 50);
    gsay_option(127, 118, Node999, 50);
end

procedure Node012
begin
    if (random(0, 100) < (has_skill(dude_obj, 14) + (has_skill(dude_obj, 14) / 20 * get_critter_stat(dude_obj, 3)) - (30 + ((10 * 1) + 1)) + get_critter_stat(dude_obj, 3))) then begin
        gsay_reply(127, 120);
        gsay_option(127, 121, Node011, 50);
        gsay_option(127, 122, Node999, 50);
    end
    else begin
        gsay_reply(127, 123);
        gsay_option(127, 124, Node011, 50);
    end
end

procedure Node013
begin
    gsay_reply(127, 130);
    gsay_option(127, 131, Node011, 50);
end

procedure Node014
begin
    if (65 < ((get_critter_stat(dude_obj, 3) * 10) + (has_skill(dude_obj, 14) / 5))) then begin
        gsay_reply(127, 140);
        gsay_option(127, 141, Node011, 50);
    end
    else begin
        gsay_reply(127, 142);
        gsay_option(127, 143, Node011, 50);
        gsay_option(127, 144, Node011, 50);
    end
end

procedure Node020
begin
    if (local_var(9) == 0) then begin
        set_local_var(9, 1);
        mark_area_known(0, 4, 1);
        gsay_reply(127, 200);
        gsay_option(127, 201, Node010, 50);
        gsay_option(127, 202, Node999, 50);
    end
    else begin
        gsay_reply(127, 203);
        gsay_option(127, 204, Node010, 50);
        gsay_option(127, 205, Node999, 50);
    end
end

procedure Node030
begin
    if (70 < ((get_critter_stat(dude_obj, 3) * 10) + (has_skill(dude_obj, 14) / 5))) then begin
        gsay_reply(127, 300);
        gsay_option(127, 301, Node031, 50);
    end
    else begin
        gsay_reply(127, 302);
        gsay_option(127, 303, Node010, 50);
        gsay_option(127, 304, Node999, 50);
    end
end

procedure Node031
begin
    gsay_reply(127, 310);
    gsay_option(127, 311, Node010, 50);
end

procedure Node040
begin
    if (50 < ((get_critter_stat(dude_obj, 3) * 10) + (has_skill(dude_obj, 14) / 5))) then begin
        gsay_reply(127, 400);
        gsay_option(127, 401, Node999, 50);
    end
    else begin
        gsay_reply(127, 402);
        gsay_option(127, 403, Node010, 50);
    end
end

procedure Node050
begin
    if (map_var(0) == 1) then begin
        gsay_reply(127, 500);
        gsay_option(127, 501, Node051, 50);
    end
    else begin
        gsay_reply(127, 502);
        gsay_option(127, 503, Node051, 50);
        gsay_option(127, 504, Node999, 50);
    end
end

procedure Node051
begin
    gsay_reply(127, message_str(127, 510) + apples_qty + message_str(127, 517));
    gsay_option(127, 511, NodeQA, 50);
    gsay_option(127, 512, Node999, 50);
end

procedure NodeQA
begin
    set_global_var(124, 1);
    gsay_reply(127, 513);
    gsay_option(127, 514, Node999, 50);
    gsay_option(127, 515, Node999, 50);
    gsay_option(127, 516, Node999, 50);
end

procedure Node060
begin
    gsay_reply(127, 600);
    if (obj_carrying_pid_obj(dude_obj, 336)) then begin
        gsay_option(127, 604, Node999, 50);
    end
    else begin
        gsay_option(127, 601, Node061, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 336) and (obj_is_carrying_obj_pid(dude_obj, 238) >= apples_qty)) then begin
        gsay_option(127, 602, Node062, 50);
    end
    gsay_option(127, 603, Node999, 50);
end

procedure Node061
begin
    if (52 < ((get_critter_stat(dude_obj, 3) * 10) + (has_skill(dude_obj, 14) / 5))) then begin
        gsay_reply(127, 610);
        gsay_option(127, 611, Node999, 50);
    end
    else begin
        gsay_reply(127, 612);
        gsay_option(127, 613, Node999, 50);
        gsay_option(127, 614, Node999, 50);
    end
end

procedure Node062
begin
    variable LVar0 := 0;
    while (LVar0 < apples_qty) do begin
        LVar0 := LVar0 + 1;
        rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 238));
    end
    rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 336));
    set_global_var(124, 2);
    give_exp_points(floor(245 / 5) + (get_critter_stat(dude_obj, 4) * floor(245 / 12)) + (get_critter_stat(dude_obj, 6) * floor(245 / 30)) + (floor(245 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
    display_msg(message_str(10, random(140, 143)) + (floor(245 / 5) + (get_critter_stat(dude_obj, 4) * floor(245 / 12)) + (get_critter_stat(dude_obj, 6) * floor(245 / 30)) + (floor(245 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
    gsay_reply(127, 620);
    gsay_option(127, 621, Node063, 50);
    gsay_option(127, 622, Node064, 50);
end

procedure Node063
begin
    add_obj_to_inven(dude_obj, create_object_sid(63, 1, 2, -1));
    gsay_reply(127, 630);
    gsay_option(127, 631, Node999, 50);
    gsay_option(127, 632, Node999, 50);
end

procedure Node064
begin
    gsay_reply(127, message_str(127, 640) + obj_name(dude_obj) + message_str(127, 641));
    gsay_option(127, 642, Node999, 50);
end

procedure NodeRenessance
begin
    if ((local_var(8) == 0) and (global_var(269) < 4)) then begin
        set_local_var(8, 1);
        set_global_var(269, global_var(269) + 1);
        if (global_var(269) == 1) then begin
            gsay_reply(10, 910);
            gsay_option(10, 911, Node010, 50);
        end
        else begin
            if (global_var(269) == 2) then begin
                gsay_reply(10, 912);
                gsay_option(10, 913, Node010, 50);
            end
            else begin
                if (global_var(269) == 3) then begin
                    gsay_reply(10, 914);
                    gsay_option(10, 915, Node010, 50);
                end
                else begin
                    gsay_reply(10, 916);
                    gsay_option(10, 917, Node010, 50);
                end
            end
        end
    end
    else begin
        gsay_reply(10, random(918, 921));
        gsay_option(10, random(922, 923), Node010, 50);
    end
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

