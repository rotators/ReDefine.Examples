variable dude_objective_reputation;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node999a;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(70, 80));
        set_local_var(5, random(30, 40));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, 1, 6, 11);
        critter_add_trait(self_obj, 1, 5, 32);
        if (random(0, 100) <= 75) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(1, 40));
        end
        if (random(0, 100) <= 45) then begin
            add_obj_to_inven(self_obj, create_object_sid(415, 1, 2, -1));
        end
        if (random(0, 100) <= 40) then begin
            add_obj_to_inven(self_obj, create_object_sid(419, 1, 2, -1));
        end
        if (random(0, 100) <= 30) then begin
            add_obj_to_inven(self_obj, create_object_sid(434, 1, 2, -1));
        end
        if (random(0, 100) <= 20) then begin
            add_obj_to_inven(self_obj, create_object_sid(145, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(223, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(39, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(82, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(228, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(410, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(431, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(110, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(323, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(239, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(235, 1, 2, -1));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(15, 30), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if (local_var(11) == 1) then begin
        if ((tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 6) and (tile_distance(tile_num(dude_obj), tile_num(self_obj)) <= 10)) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 5)), 0);
        end
        else begin
            if (tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 10) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 5)), 1);
            end
        end
    end
    if ((global_var(343) == 0) and (local_var(11) == 1)) then begin
        set_local_var(11, 0);
    end
    if ((global_var(191) == 2) and (cur_map_index == 61) and (global_var(343) == 1) and (anim_busy(self_obj) == 0)) then begin
        fadeOut(300);
        animate_move_obj_to_tile(self_obj, tile_num(self_obj), 0);
        set_global_var(343, 0);
        party_remove(self_obj);
        critter_add_trait(self_obj, 1, 6, 11);
        set_local_var(11, 0);
        move_to(self_obj, 17663, elevation(self_obj));
        anim(self_obj, 1000, 4);
        fadeIn(400);
    end
    if ((global_var(191) == 2) and (cur_map_index == 61) and (tile_num(self_obj) != 17663) and (anim_busy(self_obj) == 0)) then begin
        move_to(self_obj, 17663, elevation(self_obj));
        anim(self_obj, 1000, 4);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(51) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(220, 2));
    end
    else begin
        display_msg(message_str(220, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(220, 1));
    end
    else begin
        display_msg(message_str(220, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
    script_overrides;
end

procedure talk_p_proc
begin
    if (local_var(11) == 1) then begin
        if (global_var(236) == 1) then begin
            float_msg(self_obj, message_str(220, random(389, 391)), 0);
        end
        else begin
            float_msg(self_obj, message_str(220, random(383, 388)), 0);
        end
    end
    else begin
        if (cur_map_index == 61) then begin
            float_msg(self_obj, message_str(220, random(383, 385)), 0);
        end
        else begin
            if (local_var(7) == 1) then begin
                if (not(anim_busy(self_obj))) then begin
                    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
                end
            end
            start_gdialog(220, self_obj, -1, -1, -1);
            gsay_start;
            if (local_var(7) == 0) then begin
                call Node001();
            end
            else begin
                call Node010();
            end
            gsay_end;
            end_dialogue;
        end
    end
end

procedure destroy_p_proc
begin
    set_global_var(118, global_var(118) bwor 32768);
    if (global_var(343) == 1) then begin
        set_global_var(343, 0);
    end
    if (global_var(160) == 1) then begin
        set_global_var(160, 0);
    end
    if (global_var(191) == 1) then begin
        set_global_var(191, 0);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((51 == 50) or (51 == 59)) then begin
            set_global_var(51, global_var(51) - 3);
        end
        else begin
            set_global_var(51, global_var(51) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
    if ((obj_pid(obj_being_used_with) == 343) and (local_var(11) == 0)) then begin
        script_overrides;
        rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 343));
        party_add(self_obj);
        set_local_var(11, 1);
        set_global_var(343, 1);
        play_sfx("HMXXXXAO");
        display_msg(message_str(10, 382));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (not(metarule(22, 0)) == 1) then begin
        if ((tile_num(self_obj) != local_var(3)) and (local_var(11) == 0) and (cur_map_index != 61)) then begin
            move_to(self_obj, local_var(3), elevation(self_obj));
        end
        if (cur_map_index == 61) then begin
            set_global_var(344, self_obj);
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if (tile_num(self_obj) == local_var(3)) then begin
            anim(self_obj, 1000, 0);
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 11, -1);
            if (random(0, 100) <= 50) then begin
                reg_anim_animate(self_obj, 0, -1);
            end
            reg_anim_func(3, 0);
        end
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    gsay_reply(220, 10);
    gsay_option(220, 11, Node002, 50);
    gsay_option(220, 12, Node002, 50);
    gsay_option(220, 13, Node002, 50);
end

procedure Node002
begin
    gsay_reply(220, 20);
    gsay_option(220, 21, Node003, 50);
    gsay_option(220, 22, Node004, 50);
    gsay_option(220, 23, Node005, 50);
    gsay_option(220, 24, Node006, 50);
end

procedure Node003
begin
    gsay_reply(220, 30);
    gsay_option(220, 31, Node004, 50);
    gsay_option(220, 32, Node005, 50);
    gsay_option(220, 33, Node006, 50);
end

procedure Node004
begin
    gsay_reply(220, 40);
    gsay_option(220, 41, Node005, 50);
    gsay_option(220, 42, Node006, 50);
    gsay_option(220, 43, Node007, 50);
end

procedure Node005
begin
    gsay_reply(220, 50);
    gsay_option(220, 51, Node009, 50);
    gsay_option(220, 52, Node007, 50);
    gsay_option(220, 53, Node008, 50);
end

procedure Node006
begin
    gsay_reply(220, 60);
    gsay_option(220, 61, Node009, 50);
    gsay_option(220, 62, Node007, 50);
    gsay_option(220, 63, Node008, 50);
end

procedure Node007
begin
    add_obj_to_inven(dude_obj, create_object_sid(236, 1, 2, -1));
    gsay_reply(220, 70);
    gsay_option(220, 71, Node009, 50);
    gsay_option(220, 72, Node008, 50);
end

procedure Node008
begin
    gsay_reply(220, 80);
    gsay_option(220, 81, Node998, 50);
end

procedure Node009
begin
    set_local_var(7, 1);
    already_talk := 1;
    gsay_reply(220, 90);
    gsay_option(220, message_str(220, 91) + obj_name(dude_obj) + message_str(220, 92), Node011, 50);
    gsay_option(220, 93, Node013, 50);
    gsay_option(220, 94, Node014, 50);
    gsay_option(220, 95, Node015, 50);
    gsay_option(220, 96, Node016, 50);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        if (global_var(227) == 2) then begin
            gsay_reply(220, 1001);
        end
        else begin
            gsay_reply(220, 1003);
        end
    end
    else begin
        gsay_reply(220, 1002);
    end
    gsay_option(220, 101, Node017, 50);
    gsay_option(220, 102, Node018, 50);
    gsay_option(220, 103, Node022, 50);
    if (global_var(160) == 1) then begin
        gsay_option(220, 104, Node028, 50);
    end
    if (global_var(160) == 2) then begin
        gsay_option(220, 105, NodeBarter, 50);
    end
    if ((global_var(191) == 1) and (global_var(236) != -1)) then begin
        gsay_option(220, 106, Node036, 50);
    end
    gsay_option(220, 109, Node999, 50);
end

procedure Node011
begin
    gsay_reply(220, 110);
    gsay_option(220, 111, Node010, 50);
    gsay_option(220, 112, Node012, 50);
    gsay_option(220, 113, Node999, 50);
end

procedure Node012
begin
    gsay_reply(220, 120);
    gsay_option(220, 121, Node010, 50);
    gsay_option(220, 122, Node999, 50);
end

procedure Node013
begin
    gsay_reply(220, 130);
    gsay_option(220, 131, Node010, 50);
    gsay_option(220, 132, Node999, 50);
end

procedure Node014
begin
    gsay_reply(220, 140);
    gsay_option(220, 141, Node010, 50);
    gsay_option(220, 142, Node999, 50);
end

procedure Node015
begin
    gsay_reply(220, 150);
    gsay_option(220, 151, Node010, 50);
    gsay_option(220, 152, Node999, 50);
end

procedure Node016
begin
    gsay_reply(220, 160);
    gsay_option(220, 161, Node010, 50);
    gsay_option(220, 162, Node999, 50);
end

procedure Node017
begin
    gsay_reply(220, 170);
    gsay_option(220, 171, Node018, 50);
    gsay_option(220, 172, Node022, 50);
    gsay_option(220, 173, Node999, 50);
end

procedure Node018
begin
    gsay_reply(220, 180);
    gsay_option(220, 181, Node019, 50);
    gsay_option(220, 182, Node021, 50);
end

procedure Node019
begin
    gsay_reply(220, 190);
    gsay_option(220, 191, Node020, 50);
    gsay_option(220, 192, Node032, 50);
end

procedure Node020
begin
    gsay_reply(220, 200);
    gsay_option(220, 201, Node022, 50);
    gsay_option(220, 202, Node021, 50);
    gsay_option(220, 203, Node010, 50);
end

procedure Node021
begin
    gsay_reply(220, 210);
    gsay_option(220, 211, Node022, 50);
    gsay_option(220, 212, Node010, 50);
end

procedure Node022
begin
    gsay_reply(220, 220);
    gsay_option(220, 221, Node024, 50);
    if ((global_var(285) == 2) and (global_var(157) > 0) and (local_var(9) == 0)) then begin
        gsay_option(220, 222, Node035, 50);
    end
    if ((has_skill(dude_obj, 12) >= 50) and (has_skill(dude_obj, 13) >= 50) and (local_var(10) == 0)) then begin
        gsay_option(220, 223, Node033, 50);
    end
end

procedure Node023
begin
    add_obj_to_inven(dude_obj, create_object_sid(96, 1, 2, -1));
    gsay_reply(220, 230);
    gsay_option(220, 231, Node010, 50);
end

procedure Node024
begin
    if (global_var(160) != 2) then begin
        gsay_reply(220, 2401);
    end
    else begin
        gsay_reply(220, 2402);
    end
    if (global_var(160) == 0) then begin
        gsay_option(220, 241, Node026, 50);
    end
    if (global_var(160) != 2) then begin
        gsay_option(220, 242, Node025, 50);
    end
    gsay_option(220, 243, Node010, 50);
end

procedure Node025
begin
    gsay_reply(220, 250);
    if (global_var(160) == 0) then begin
        gsay_option(220, 251, Node026, 50);
    end
    gsay_option(220, 252, Node010, 50);
end

procedure Node026
begin
    if (global_var(160) == 0) then begin
        set_global_var(160, 1);
    end
    gsay_reply(220, 260);
    gsay_option(220, 261, Node027, 50);
end

procedure Node027
begin
    gsay_reply(220, 270);
    gsay_option(220, 271, Node010, 50);
    gsay_option(220, 272, Node999, 50);
end

procedure Node028
begin
    gsay_reply(220, 280);
    gsay_option(220, 281, Node029, 50);
    if (obj_carrying_pid_obj(dude_obj, 325)) then begin
        gsay_option(220, 282, Node030, 50);
    end
end

procedure Node029
begin
    gsay_reply(220, 290);
    gsay_option(220, 291, Node999, 50);
end

procedure Node030
begin
    variable LVar0 := 0;
    if (global_var(160) != 2) then begin
        set_global_var(160, 2);
        give_exp_points(floor(690 / 5) + (get_critter_stat(dude_obj, 4) * floor(690 / 12)) + (get_critter_stat(dude_obj, 6) * floor(690 / 30)) + (floor(690 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(690 / 5) + (get_critter_stat(dude_obj, 4) * floor(690 / 12)) + (get_critter_stat(dude_obj, 6) * floor(690 / 30)) + (floor(690 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        add_obj_to_inven(dude_obj, create_object_sid(313, 1, 2, -1));
        set_global_var(51, global_var(51) + 4);
        add_obj_to_inven(self_obj, create_object_sid(145, 1, 2, -1));
        add_obj_to_inven(self_obj, create_object_sid(157, 1, 2, -1));
        add_obj_to_inven(self_obj, create_object_sid(97, 1, 2, -1));
        add_obj_to_inven(self_obj, create_object_sid(158, 1, 2, -1));
        add_obj_to_inven(self_obj, create_object_sid(89, 1, 2, -1));
        add_obj_to_inven(self_obj, create_object_sid(58, 1, 2, -1));
        add_mult_objs_to_inven(self_obj, create_object_sid(235, 1, 2, -1), random(0, 2));
        add_mult_objs_to_inven(self_obj, create_object_sid(211, 1, 2, -1), random(6, 8));
        add_mult_objs_to_inven(self_obj, create_object_sid(212, 1, 2, -1), random(3, 5));
        LVar0 := obj_carrying_pid_obj(dude_obj, 325);
        if (LVar0) then begin
            rm_obj_from_inven(dude_obj, LVar0);
            destroy_object(LVar0);
        end
    end
    gsay_reply(220, 300);
    gsay_option(220, 301, Node031, 50);
end

procedure Node031
begin
    gsay_reply(220, 310);
    gsay_option(220, 311, NodeBarter, 50);
    gsay_option(220, 312, Node999, 50);
end

procedure Node032
begin
    gsay_reply(220, 320);
    gsay_option(220, 321, Node010, 50);
end

procedure Node033
begin
    set_local_var(10, 1);
    gsay_reply(220, 330);
    gsay_option(220, 331, Node034, 50);
end

procedure Node034
begin
    give_exp_points(floor(100 / 5) + (get_critter_stat(dude_obj, 4) * floor(100 / 12)) + (get_critter_stat(dude_obj, 6) * floor(100 / 30)) + (floor(100 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
    display_msg(message_str(10, random(140, 143)) + (floor(100 / 5) + (get_critter_stat(dude_obj, 4) * floor(100 / 12)) + (get_critter_stat(dude_obj, 6) * floor(100 / 30)) + (floor(100 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
    gsay_reply(220, 340);
    gsay_option(220, 341, Node999, 50);
end

procedure Node035
begin
    set_local_var(9, 1);
    gsay_reply(220, 350);
    gsay_option(220, 351, Node023, 50);
end

procedure Node036
begin
    gsay_reply(220, 360);
    gsay_option(220, 361, Node037, 50);
    if (has_skill(dude_obj, 14) >= 70) then begin
        gsay_option(220, 362, Node038, 50);
    end
    gsay_option(220, 363, Node999, 50);
end

procedure Node037
begin
    set_global_var(236, -1);
    gsay_reply(220, 370);
    gsay_option(220, 371, Node010, 50);
    gsay_option(220, 372, Node999, 50);
end

procedure Node038
begin
    set_global_var(236, 1);
    set_local_var(11, 1);
    set_global_var(343, 1);
    gsay_reply(220, 380);
    gsay_option(220, 381, Node999a, 50);
end

procedure Node999a
begin
    already_talk := 0;
    party_add(self_obj);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    if (cur_map_index == 33) then begin
        set_map_var(0, 1);
    end
    else begin
        set_local_var(2, 1);
    end
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

