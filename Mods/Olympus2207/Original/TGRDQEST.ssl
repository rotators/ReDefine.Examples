variable dude_objective_reputation;
variable self_subjective_reaction;
variable steal_perk;
variable steal_gloves;
variable event_is_called;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node017;
procedure Node018;
procedure NodeBad;
procedure Node999;
procedure Node998;

variable i;


procedure start
begin
    if (local_var(1) == 0) then begin
        if (random(0, 100) <= 30) then begin
            add_obj_to_inven(self_obj, create_object_sid(176, 1, 2, -1));
            add_mult_objs_to_inven(self_obj, create_object_sid(11, 1, 2, -1), random(0, 2));
            wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 176));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(153, 1, 2, -1));
            add_mult_objs_to_inven(self_obj, create_object_sid(19, 1, 2, -1), random(1, 2));
            wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 153));
        end
        if (random(0, 100) <= 5) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(221, 1, 2, -1), random(1, 2));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(64, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(103, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(222, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(1, 30));
        end
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(90, 95));
        set_local_var(5, random(40, 100));
        critter_add_trait(self_obj, 1, 6, 3);
        critter_add_trait(self_obj, 1, 5, 5);
    end
end

procedure critter_p_proc
begin
    if (map_var(1) == 1) then begin
        set_map_var(1, 2);
        dialogue_system_enter;
    end
    if ((local_var(7) == 0) and (map_var(1) == 2) and (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 4) and (global_var(34) != 2)) then begin
        if (not(anim_busy(self_obj))) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        end
        move_to(dude_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)), 1), elevation(self_obj));
        anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), self_obj));
        dialogue_system_enter;
    end
    if ((global_var(6) == 1) and (global_var(34) == 0) and (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 4)) then begin
        dialogue_system_enter;
    end
    if (event_is_called == 0) then begin
        event_is_called := 1;
        add_timer_event(self_obj, random(150, 450), 1);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(59) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(79, random(6, 9)));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(79, random(1, 5)));
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
    script_overrides;
    if (global_var(6) == 0) then begin
        script_overrides;
        float_msg(self_obj, message_str(79, random(1030, 1039)), 0);
    end
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), self_obj));
    if ((global_var(34) == 2) and (global_var(31) != 2) and (local_var(8) == 0)) then begin
        start_gdialog(79, self_obj, -1, -1, -1);
        gsay_start;
        call Node017();
        gsay_end;
        end_dialogue;
    end
    else begin
        if ((global_var(34) != 2) or (global_var(31) != 2) and (local_var(8) == 0)) then begin
            move_to(dude_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)), 1), elevation(self_obj));
            start_gdialog(79, self_obj, -1, -1, -1);
            gsay_start;
            call Node010();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (global_var(6) == 0) then begin
                float_msg(self_obj, message_str(79, random(1040, 1049)), 0);
            end
            else begin
                if (global_var(0) > 0) then begin
                    dude_objective_reputation := (global_var(59) * 30) + global_var(0) - (20 * global_var(1));
                end
                else begin
                    dude_objective_reputation := (global_var(59) * 30) + global_var(0) - (20 * global_var(1));
                end
                if ((dude_objective_reputation + local_var(6)) >= 300) then begin
                    self_subjective_reaction := 1;
                end
                else begin
                    if (((dude_objective_reputation + local_var(6)) >= -300) and ((dude_objective_reputation + local_var(6)) < 300)) then begin
                        self_subjective_reaction := 0;
                    end
                    else begin
                        self_subjective_reaction := -1;
                    end
                end
                if (not(anim_busy(self_obj))) then begin
                    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
                end
                if (self_subjective_reaction == 1) then begin
                    float_msg(self_obj, message_str(79, random(1000, 1009)), 3);
                end
                if (self_subjective_reaction == 0) then begin
                    float_msg(self_obj, message_str(79, random(1010, 1019)), 0);
                end
                if (self_subjective_reaction == -1) then begin
                    float_msg(self_obj, message_str(79, random(1020, 1029)), 2);
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (global_var(34) == 1) then begin
        set_global_var(34, 2);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        if (random(1, 2) == 1) then begin
            display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + (30 - get_critter_stat(dude_obj, 4) - (2 * get_critter_stat(dude_obj, 1))) + message_str(10, 205));
        end
        else begin
            display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) - (30 - get_critter_stat(dude_obj, 4) - (2 * get_critter_stat(dude_obj, 1))) + message_str(10, 205));
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (not(metarule(22, 0)) == 1) then begin
        set_local_var(7, 0);
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if (not(combat_is_initialized)) then begin
            float_msg(self_obj, message_str(79, random(1050, 1051)), 0);
        end
        event_is_called := 0;
    end
    if (fixed_param == 2) then begin
        game_ui_disable;
        add_timer_event(self_obj, 20, 3);
        metarule(43, self_obj);
        i := 2;
    end
    if (fixed_param == 3) then begin
        i := i + 1;
        if (i < 9) then begin
            add_timer_event(self_obj, 20, 3);
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 16, -1);
            reg_anim_func(3, 0);
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(dude_obj, 14, -1);
            reg_anim_func(3, 0);
            play_sfx("HMXXXXZQ");
            play_sfx("HMXXXXAO");
            float_msg(self_obj, message_str(79, 1060 + i), 2);
            if (get_critter_stat(dude_obj, 35) > 5) then begin
                critter_dmg(dude_obj, random(1, 3), 0);
            end
        end
        if (i == 9) then begin
            i := 0;
            rm_timer_event(self_obj);
            add_timer_event(self_obj, random(150, 450), 1);
            event_is_called := 1;
            set_local_var(7, 1);
            game_ui_enable;
            dialogue_system_enter;
        end
    end
end

procedure Node010
begin
    if (local_var(7) == 1) then begin
        gsay_reply(79, 160);
        gsay_option(79, 161, Node999, 50);
        gsay_option(79, 132, Node998, 50);
    end
    else begin
        if (global_var(34) == 0) then begin
            gsay_reply(79, 100);
            gsay_option(79, 102, Node011, 50);
            gsay_option(79, 103, Node013, 50);
        end
        else begin
            gsay_reply(79, 101);
            gsay_option(79, 104, NodeBad, 50);
            if (obj_carrying_pid_obj(dude_obj, 297)) then begin
                gsay_option(79, 105, Node014, 50);
            end
        end
    end
    set_local_var(7, 2);
end

procedure Node011
begin
    set_global_var(34, 1);
    set_map_var(1, 2);
    add_mult_objs_to_inven(dude_obj, create_object_sid(434, 1, 2, -1), 11);
    gsay_reply(79, 110);
    gsay_option(79, 111, Node999, 50);
    gsay_option(79, 112, Node012, 50);
end

procedure Node012
begin
    gsay_reply(79, 120);
    gsay_option(79, 111, Node999, 50);
end

procedure Node013
begin
    play_sfx("HMXXXXAQ");
    play_sfx("HMXXXXAP");
    gsay_reply(79, 130);
    gsay_option(79, 131, Node011, 50);
    gsay_option(79, 132, Node998, 50);
end

procedure Node014
begin
    if (global_var(34) != 2) then begin
        set_global_var(34, 2);
        give_exp_points(floor(180 / 5) + (get_critter_stat(dude_obj, 4) * floor(180 / 12)) + (get_critter_stat(dude_obj, 6) * floor(180 / 30)) + (floor(180 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(180 / 5) + (get_critter_stat(dude_obj, 4) * floor(180 / 12)) + (get_critter_stat(dude_obj, 6) * floor(180 / 30)) + (floor(180 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
    end
    rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 297));
    add_obj_to_inven(self_obj, create_object_sid(297, 1, 2, -1));
    gsay_reply(79, 140);
    gsay_option(79, 141, Node015, 50);
    gsay_option(79, 142, Node999, 50);
    gsay_option(79, 143, Node999, 50);
end

procedure Node015
begin
    gsay_reply(79, 150);
    gsay_option(79, 142, Node999, 50);
    gsay_option(79, 143, Node999, 50);
end

procedure Node017
begin
    gsay_reply(79, 170);
    gsay_option(79, 171, Node018, 50);
    gsay_option(79, 172, Node999, 50);
end

procedure Node018
begin
    add_obj_to_inven(dude_obj, create_object_sid(414, 1, 2, -1));
    set_local_var(8, 1);
    gsay_reply(79, 180);
    gsay_option(79, 181, Node999, 50);
end

procedure NodeBad
begin
    event_is_called := 1;
    rm_timer_event(self_obj);
    game_ui_disable;
    add_timer_event(self_obj, 5, 2);
end

procedure Node999
begin
end

procedure Node998
begin
    attack_setup(self_obj, dude_obj);
end

