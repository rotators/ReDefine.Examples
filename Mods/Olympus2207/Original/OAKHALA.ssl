variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(60, 70));
        set_local_var(5, random(40, 50));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, 1, 6, 10);
        critter_add_trait(self_obj, 1, 5, 42);
        if (random(0, 100) <= 20) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(1, 10));
        end
        if (random(0, 100) <= 15) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(238, 1, 2, -1), random(1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(213, 1, 2, -1), random(1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(35, 1, 2, -1));
        end
        if (random(0, 100) <= 14) then begin
            add_obj_to_inven(self_obj, create_object_sid(65, 1, 2, -1));
        end
        if (random(0, 100) <= 13) then begin
            add_obj_to_inven(self_obj, create_object_sid(218, 1, 2, -1));
        end
        if (random(0, 100) <= 12) then begin
            add_obj_to_inven(self_obj, create_object_sid(70, 1, 2, -1));
        end
        if (random(0, 100) <= 11) then begin
            add_obj_to_inven(self_obj, create_object_sid(106, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(244, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(242, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(414, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(422, 1, 2, -1));
        end
        if (random(0, 100) <= 9) then begin
            add_obj_to_inven(self_obj, create_object_sid(423, 1, 2, -1));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object_sid(426, 1, 2, -1));
        end
        if (random(0, 100) <= 7) then begin
            add_obj_to_inven(self_obj, create_object_sid(433, 1, 2, -1));
        end
        if (random(0, 100) <= 6) then begin
            add_obj_to_inven(self_obj, create_object_sid(421, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(427, 1, 2, -1));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object_sid(74, 1, 2, -1));
        end
        add_obj_to_inven(self_obj, create_object_sid(66, 1, 2, -1));
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(25, 75), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if ((map_var(0) == 1) and (elevation(self_obj) != 2)) then begin
        move_to(self_obj, 1, 2);
        set_global_var(119, global_var(119) bwor 512);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(55) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(289, 2));
    end
    else begin
        display_msg(message_str(289, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(289, 1));
    end
    else begin
        display_msg(message_str(289, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
    script_overrides;
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    start_gdialog(289, self_obj, -1, -1, -1);
    gsay_start;
    if (local_var(7) == 0) then begin
        call Node001();
    end
    else begin
        call Node010();
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    set_global_var(119, global_var(119) bwor 512);
    if (global_var(180) == 1) then begin
        set_global_var(180, 0);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((55 == 50) or (55 == 59)) then begin
            set_global_var(55, global_var(55) - 3);
        end
        else begin
            set_global_var(55, global_var(55) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if ((tile_num(self_obj) != local_var(3)) and (not(global_var(119) bwand 512) != 0)) then begin
        if (tile_num(self_obj) != local_var(3)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            if (tile_distance(tile_num(self_obj), local_var(3)) >= 25) then begin
                reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), local_var(3)), random(12, 22)), -1);
            end
            else begin
                reg_anim_obj_move_to_tile(self_obj, local_var(3), -1);
            end
            reg_anim_func(3, 0);
        end
    end
    if ((local_var(10) == 1) and (days_since_visited >= 2)) then begin
        set_local_var(10, 2);
        move_to(self_obj, 1, 2);
        set_global_var(119, global_var(119) bwor 512);
    end
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        LVar0 := random(1, 3);
        if (LVar0 == 1) then begin
            anim(self_obj, 1000, 3);
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 11, -1);
            reg_anim_func(3, 0);
        end
        if (LVar0 == 2) then begin
            anim(self_obj, 1000, 1);
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 10, -1);
            reg_anim_func(3, 0);
        end
        if (LVar0 == 3) then begin
            anim(self_obj, 1000, 2);
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 11, -1);
            reg_anim_func(3, 0);
        end
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    set_local_var(7, 1);
    gsay_reply(289, 10);
    gsay_option(289, 11, Node013, 50);
    gsay_option(289, 12, Node011, 50);
    gsay_option(289, 13, Node014, 50);
    if (global_var(224) == 1) then begin
        gsay_option(289, 14, Node012, 50);
    end
    if ((global_var(225) == 0) and (global_var(181) == 1)) then begin
        gsay_option(289, 15, Node026, 50);
    end
    gsay_option(289, 16, Node999, 50);
end

procedure Node010
begin
    if (global_var(180) == 1) then begin
        gsay_reply(289, 1002);
        gsay_option(289, 108, Node028, 50);
        if ((global_var(225) == 0) and (global_var(181) == 1)) then begin
            gsay_option(289, 1014, Node026, 50);
        end
        gsay_option(289, 109, Node999, 50);
        gsay_option(289, 1010, Node031, 50);
    end
    else begin
        if (global_var(180) == 2) then begin
            gsay_reply(289, 1003);
            gsay_option(289, 1011, Node013, 50);
            gsay_option(289, 1012, Node012, 50);
            gsay_option(289, 1013, Node032, 50);
            if ((global_var(225) == 0) and (global_var(181) == 1)) then begin
                gsay_option(289, 1014, Node026, 50);
            end
            gsay_option(289, 1015, Node999, 50);
        end
        else begin
            gsay_reply(289, 1001);
            gsay_option(289, 101, Node013, 50);
            gsay_option(289, 102, Node011, 50);
            gsay_option(289, 103, Node014, 50);
            if (global_var(224) == 1) then begin
                gsay_option(289, 104, Node012, 50);
            end
            if ((global_var(225) == 0) and (global_var(181) == 1)) then begin
                gsay_option(289, 105, Node026, 50);
            end
            if (local_var(9) == 1) then begin
                gsay_option(289, 106, Node019, 50);
            end
            gsay_option(289, 107, Node999, 50);
        end
    end
end

procedure Node011
begin
    gsay_reply(289, 110);
    gsay_option(289, 111, Node031, 50);
    gsay_option(289, 112, Node014, 50);
    gsay_option(289, 113, Node999, 50);
end

procedure Node012
begin
    gsay_reply(289, 120);
    if ((global_var(225) == 0) and (global_var(181) == 1)) then begin
        gsay_option(289, 121, Node026, 50);
    end
    gsay_option(289, 122, Node014, 50);
    gsay_option(289, 123, Node999, 50);
end

procedure Node013
begin
    gsay_reply(289, 130);
    gsay_option(289, 131, Node031, 50);
    gsay_option(289, 132, Node014, 50);
    gsay_option(289, 133, Node999, 50);
end

procedure Node014
begin
    if (global_var(180) != 2) then begin
        gsay_reply(289, 1401);
        gsay_option(289, 141, Node015, 50);
        if (global_var(180) == 0) then begin
            gsay_option(289, 142, Node018, 50);
        end
        gsay_option(289, 143, Node031, 50);
        gsay_option(289, 144, Node016, 50);
        gsay_option(289, 145, Node017, 50);
        gsay_option(289, 146, Node999, 50);
    end
    else begin
        gsay_reply(289, 1402);
        gsay_option(289, 147, Node015, 50);
        gsay_option(289, 148, Node031, 50);
        gsay_option(289, 149, Node016, 50);
        gsay_option(289, 1410, Node017, 50);
        gsay_option(289, 1411, Node999, 50);
    end
end

procedure Node015
begin
    gsay_reply(289, 150);
    gsay_option(289, 151, Node031, 50);
    gsay_option(289, 152, Node014, 50);
    gsay_option(289, 153, Node999, 50);
end

procedure Node016
begin
    gsay_reply(289, 160);
    gsay_option(289, 161, Node031, 50);
    gsay_option(289, 162, Node014, 50);
    gsay_option(289, 163, Node999, 50);
end

procedure Node017
begin
    gsay_reply(289, 170);
    gsay_option(289, 171, Node014, 50);
    gsay_option(289, 172, Node031, 50);
    gsay_option(289, 173, Node999, 50);
end

procedure Node018
begin
    set_local_var(9, 1);
    gsay_reply(289, 180);
    gsay_option(289, 181, Node019, 50);
    gsay_option(289, 182, Node999, 50);
end

procedure Node019
begin
    gsay_reply(289, 190);
    gsay_option(289, 191, Node020, 50);
end

procedure Node020
begin
    if ((has_skill(dude_obj, 7) < 50) and (has_skill(dude_obj, 6) < 50)) then begin
        gsay_reply(289, 2001);
        if (global_var(285) == 2) then begin
            gsay_option(289, 201, Node021, 50);
        end
        gsay_option(289, 202, Node022, 50);
        gsay_option(289, 203, Node031, 50);
        gsay_option(289, 204, Node999, 50);
    end
    else begin
        gsay_reply(289, 2002);
        gsay_option(289, 205, Node023, 50);
        if (global_var(285) == 2) then begin
            gsay_option(289, 206, Node021, 50);
        end
        gsay_option(289, 207, Node022, 50);
        gsay_option(289, 208, Node031, 50);
        gsay_option(289, 209, Node999, 50);
    end
end

procedure Node021
begin
    if (global_var(180) != 2) then begin
        set_global_var(180, 2);
        give_exp_points(floor(1035 / 5) + (get_critter_stat(dude_obj, 4) * floor(1035 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1035 / 30)) + (floor(1035 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(1035 / 5) + (get_critter_stat(dude_obj, 4) * floor(1035 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1035 / 30)) + (floor(1035 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        set_global_var(0, global_var(0) - 5);
        set_local_var(10, 1);
        add_obj_to_inven(dude_obj, create_object_sid(80, 1, 2, -1));
        set_global_var(379, 1);
    end
    gsay_reply(289, 213);
    gsay_option(289, 214, Node999, 50);
end

procedure Node022
begin
    set_global_var(180, 1);
    set_global_var(379, 1);
    gsay_reply(289, 210);
    gsay_option(289, 211, Node999, 50);
    gsay_option(289, 212, Node999, 50);
end

procedure Node023
begin
    set_global_var(180, 1);
    gsay_reply(289, 220);
    if (obj_carrying_pid_obj(dude_obj, 47) or obj_carrying_pid_obj(dude_obj, 91) or obj_carrying_pid_obj(dude_obj, 408) or obj_carrying_pid_obj(dude_obj, 409)) then begin
        gsay_option(289, 221, Node024, 50);
    end
    gsay_option(289, 222, Node999, 50);
end

procedure Node024
begin
    set_local_var(8, 1);
    gsay_reply(289, 230);
    gsay_option(289, 231, Node025, 50);
end

procedure Node025
begin
    if (global_var(180) != 2) then begin
        set_global_var(180, 2);
        give_exp_points(floor(1035 / 5) + (get_critter_stat(dude_obj, 4) * floor(1035 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1035 / 30)) + (floor(1035 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(1035 / 5) + (get_critter_stat(dude_obj, 4) * floor(1035 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1035 / 30)) + (floor(1035 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        set_global_var(0, global_var(0) + 5);
        set_global_var(55, global_var(55) + 4);
        add_obj_to_inven(dude_obj, create_object_sid(80, 1, 2, -1));
        set_global_var(379, 1);
    end
    gsay_reply(289, 240);
    gsay_option(289, 241, Node027, 50);
    gsay_option(289, 242, Node999, 50);
end

procedure Node026
begin
    gsay_reply(289, 250);
    if (local_var(8) == 1) then begin
        gsay_option(289, 251, Node027, 50);
    end
    if (has_skill(dude_obj, 14) > 70) then begin
        gsay_option(289, 252, Node027, 50);
    end
    gsay_option(289, 253, Node033, 50);
    gsay_option(289, 254, Node999, 50);
end

procedure Node027
begin
    if (global_var(225) == 0) then begin
        set_global_var(225, 1);
    end
    gsay_reply(289, 260);
    gsay_option(289, 261, Node999, 50);
end

procedure Node028
begin
    gsay_reply(289, 270);
    if (global_var(378) == 1) then begin
        gsay_option(289, 271, Node029, 50);
    end
    gsay_option(289, 272, Node019, 50);
    gsay_option(289, 273, Node999, 50);
end

procedure Node029
begin
    gsay_reply(289, 280);
    gsay_option(289, 281, Node030, 50);
end

procedure Node030
begin
    if (global_var(180) != 2) then begin
        set_global_var(180, 2);
        give_exp_points(floor(1035 / 5) + (get_critter_stat(dude_obj, 4) * floor(1035 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1035 / 30)) + (floor(1035 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(1035 / 5) + (get_critter_stat(dude_obj, 4) * floor(1035 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1035 / 30)) + (floor(1035 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        set_global_var(0, global_var(0) + 5);
        set_global_var(55, global_var(55) + 4);
        add_obj_to_inven(dude_obj, create_object_sid(80, 1, 2, -1));
        set_global_var(379, 1);
    end
    gsay_reply(289, 290);
    gsay_option(289, 291, Node999, 50);
end

procedure Node031
begin
    gsay_reply(289, 300);
    gsay_option(289, 301, Node998, 50);
    gsay_option(289, 302, Node998, 50);
end

procedure Node032
begin
    gsay_reply(289, 313);
    if ((global_var(225) == 0) and (global_var(181) == 1)) then begin
        gsay_option(289, 310, Node026, 50);
    end
    gsay_option(289, 311, Node999, 50);
    gsay_option(289, 312, Node999, 50);
end

procedure Node033
begin
    gsay_reply(289, 320);
    gsay_option(289, 321, Node031, 50);
    gsay_option(289, 322, Node999, 50);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

