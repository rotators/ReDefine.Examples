variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable trading_container;
variable trading_container2;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure NodeGoHunt;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(85, 95));
        set_local_var(5, random(55, 65));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, 1, 6, 7);
        critter_add_trait(self_obj, 1, 5, 10);
        add_obj_to_inven(self_obj, create_object_sid(180, 1, 2, -1));
        add_mult_objs_to_inven(self_obj, create_object_sid(11, 1, 2, -1), random(3, 5));
        wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 180));
        add_obj_to_inven(self_obj, create_object_sid(229, 1, 2, -1));
        add_obj_to_inven(self_obj, create_object_sid(64, 1, 2, -1));
        add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(100, 140));
        add_mult_objs_to_inven(self_obj, create_object_sid(63, 1, 2, -1), random(4, 8));
        if (random(0, 100) <= 70) then begin
            add_obj_to_inven(self_obj, create_object_sid(233, 1, 2, -1));
        end
        if (random(0, 100) <= 90) then begin
            add_obj_to_inven(self_obj, create_object_sid(434, 1, 2, -1));
        end
        if (random(0, 100) <= 80) then begin
            add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
        end
        if (random(0, 100) <= 70) then begin
            add_obj_to_inven(self_obj, create_object_sid(222, 1, 2, -1));
        end
        if (random(0, 100) <= 60) then begin
            add_obj_to_inven(self_obj, create_object_sid(230, 1, 2, -1));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if (local_var(9) == 1) then begin
        if ((tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 6) and (tile_distance(tile_num(dude_obj), tile_num(self_obj)) <= 10)) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 5)), 0);
        end
        else begin
            if (tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 10) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 5)), 1);
            end
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(52) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(168, 2));
    end
    else begin
        display_msg(message_str(168, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(168, 1));
    end
    else begin
        display_msg(message_str(168, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (cur_map_index == 67) then begin
        float_msg(self_obj, message_str(168, random(5, 8)), 0);
    end
    else begin
        if (not(anim_busy(self_obj))) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        end
        start_gdialog(168, self_obj, -1, -1, -1);
        gsay_start;
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    set_global_var(69, global_var(69) bwor 8388608);
    if (global_var(135) == 1) then begin
        give_exp_points(floor(400 / 5) + (get_critter_stat(dude_obj, 4) * floor(400 / 12)) + (get_critter_stat(dude_obj, 6) * floor(400 / 30)) + (floor(400 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(400 / 5) + (get_critter_stat(dude_obj, 4) * floor(400 / 12)) + (get_critter_stat(dude_obj, 6) * floor(400 / 30)) + (floor(400 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        set_global_var(135, 2);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((52 == 50) or (52 == 59)) then begin
            set_global_var(52, global_var(52) - 3);
        end
        else begin
            set_global_var(52, global_var(52) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (not(metarule(22, 0)) == 1) then begin
        if ((cur_map_index == 101) and (tile_num(self_obj) != local_var(3))) then begin
            move_to(self_obj, local_var(3), elevation(self_obj));
            critter_add_trait(self_obj, 1, 6, 7);
            anim(self_obj, 1000, 3);
        end
        if ((cur_map_index == 101) and (global_var(135) == 1)) then begin
            move_to(dude_obj, tile_num_in_direction(local_var(3), 3, 3), 0);
            anim(dude_obj, 1000, 0);
            fadeIn(700);
            party_remove(self_obj);
            critter_add_trait(self_obj, 1, 6, 7);
            set_local_var(9, 0);
            dialogue_system_enter;
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
        mark_area_known(0, 14, 1);
        set_local_var(8, 1);
        party_add(self_obj);
        set_local_var(9, 1);
        fadeOut(800);
        load_map("sphunt", -1);
    end
end

procedure Node001
begin
    gsay_reply(168, 10);
    gsay_option(168, 11, Node002, 50);
    gsay_option(168, 12, Node002, 50);
    gsay_option(168, 13, Node002, 50);
end

procedure Node002
begin
    gsay_reply(168, 20);
    gsay_option(168, 21, Node003, 50);
    gsay_option(168, 22, Node003, 50);
    gsay_option(168, message_str(168, 23) + obj_name(dude_obj) + message_str(168, 24), Node003, 50);
end

procedure Node003
begin
    set_local_var(7, 1);
    already_talk := 1;
    gsay_reply(168, 30);
    gsay_option(168, 31, Node006, 50);
    gsay_option(168, 32, Node005, 50);
    gsay_option(168, 33, Node004, 50);
end

procedure Node004
begin
    gsay_reply(168, 40);
    gsay_option(168, 41, Node007, 50);
    gsay_option(168, 42, Node999, 50);
    gsay_option(168, 43, Node999, 50);
end

procedure Node005
begin
    gsay_reply(168, 50);
    gsay_option(168, 51, Node999, 50);
end

procedure Node006
begin
    gsay_reply(168, 60);
    gsay_option(168, 61, Node007, 50);
    gsay_option(168, 62, Node999, 50);
    gsay_option(168, 63, Node999, 50);
end

procedure Node007
begin
    gsay_reply(168, 70);
    gsay_option(168, 71, Node009, 50);
    gsay_option(168, 72, Node008, 50);
    gsay_option(168, 73, Node008, 50);
end

procedure Node008
begin
    gsay_reply(168, 80);
    gsay_option(168, 81, NodeGoHunt, 50);
    gsay_option(168, 82, Node011, 50);
    gsay_option(168, 83, Node999, 50);
    gsay_option(168, 84, Node013, 50);
end

procedure Node009
begin
    gsay_reply(168, 90);
    gsay_option(168, 91, Node008, 50);
end

procedure Node010
begin
    if (local_var(8) == 1) then begin
        set_local_var(8, 2);
        gsay_reply(168, 102);
        gsay_option(168, 104, Node014, 50);
    end
    else begin
        if (already_talk == 0) then begin
            already_talk := 1;
            gsay_reply(168, 100);
        end
        else begin
            gsay_reply(168, 101);
        end
        if (global_var(135) == 0) then begin
            gsay_option(168, 103, Node012, 50);
        end
        gsay_option(168, 105, Node030, 50);
        if (global_var(135) >= 1) then begin
            gsay_option(168, 106, Node034, 50);
        end
        gsay_option(168, 107, Node999, 50);
    end
end

procedure Node011
begin
    gsay_reply(168, 110);
    gsay_option(168, 111, Node999, 50);
    gsay_option(168, 112, Node010, 50);
end

procedure Node012
begin
    gsay_reply(168, 120);
    gsay_option(168, 121, Node013, 50);
end

procedure Node013
begin
    gsay_reply(168, 130);
    gsay_option(168, 131, NodeGoHunt, 50);
    gsay_option(168, 132, Node011, 50);
    gsay_option(168, 133, Node999, 50);
end

procedure Node014
begin
    if (global_var(135) == 1) then begin
        set_global_var(135, 2);
        give_exp_points(floor(863 / 5) + (get_critter_stat(dude_obj, 4) * floor(863 / 12)) + (get_critter_stat(dude_obj, 6) * floor(863 / 30)) + (floor(863 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(863 / 5) + (get_critter_stat(dude_obj, 4) * floor(863 / 12)) + (get_critter_stat(dude_obj, 6) * floor(863 / 30)) + (floor(863 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        item_caps_adjust(dude_obj, 67);
    end
    gsay_reply(168, 140);
    gsay_option(168, 141, Node015, 50);
    gsay_option(168, 142, Node016, 50);
end

procedure Node015
begin
    gsay_reply(168, 150);
    gsay_option(168, 151, Node016, 50);
    gsay_option(168, 152, Node016, 50);
end

procedure Node016
begin
    gsay_reply(168, 160);
    gsay_option(168, 161, Node017, 50);
    gsay_option(168, 162, Node017, 50);
    gsay_option(168, 163, Node017, 50);
    gsay_option(168, 164, Node018, 50);
end

procedure Node017
begin
    gsay_reply(168, 170);
    gsay_option(168, 171, Node019, 50);
    gsay_option(168, 172, Node021, 50);
    gsay_option(168, 173, Node022, 50);
end

procedure Node018
begin
    gsay_reply(168, 180);
    gsay_option(168, 181, Node024, 50);
    gsay_option(168, 182, Node020, 50);
    gsay_option(168, 183, Node023, 50);
end

procedure Node019
begin
    gsay_reply(168, 190);
    gsay_option(168, 191, Node020, 50);
end

procedure Node020
begin
    gsay_reply(168, 200);
    gsay_option(168, 201, Node025, 50);
end

procedure Node021
begin
    gsay_reply(168, 210);
    gsay_option(168, 211, Node022, 50);
end

procedure Node022
begin
    gsay_reply(168, 220);
    gsay_option(168, 221, Node019, 50);
end

procedure Node023
begin
    gsay_reply(168, 230);
    gsay_option(168, 231, Node020, 50);
end

procedure Node024
begin
    gsay_reply(168, 240);
    gsay_option(168, 241, Node020, 50);
end

procedure Node025
begin
    gsay_reply(168, 250);
    gsay_option(168, 251, Node026, 50);
end

procedure Node026
begin
    gsay_reply(168, 260);
    gsay_option(168, 261, Node027, 50);
end

procedure Node027
begin
    mark_area_known(0, 8, 1);
    gsay_reply(168, 270);
    gsay_option(168, 271, Node028, 50);
    gsay_option(168, 272, Node029, 50);
end

procedure Node028
begin
    gsay_reply(168, 280);
    gsay_option(168, 281, Node010, 50);
    gsay_option(168, 282, Node999, 50);
end

procedure Node029
begin
    gsay_reply(168, 290);
    gsay_option(168, 291, Node010, 50);
    gsay_option(168, 292, Node999, 50);
end

procedure Node030
begin
    gsay_reply(168, 300);
    if (metarule(17, 6) == 1) then begin
        gsay_option(168, 301, Node031, 50);
    end
    else begin
        gsay_option(168, 302, Node032, 50);
    end
end

procedure Node031
begin
    gsay_reply(168, 310);
    gsay_option(168, 311, Node010, 50);
    gsay_option(168, 312, Node999, 50);
end

procedure Node032
begin
    gsay_reply(168, 320);
    gsay_option(168, 321, Node033, 50);
end

procedure Node033
begin
    mark_area_known(0, 6, 1);
    gsay_reply(168, 330);
    gsay_option(168, 331, Node010, 50);
    gsay_option(168, 332, Node999, 50);
end

procedure Node034
begin
    gsay_reply(168, 340);
    gsay_option(168, 341, Node010, 50);
    gsay_option(168, 342, Node999, 50);
end

procedure NodeGoHunt
begin
    game_ui_disable;
    set_global_var(135, 1);
    add_timer_event(self_obj, 8, 3);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

