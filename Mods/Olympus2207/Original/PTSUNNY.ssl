variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure NodeNWO;
procedure Node999;
procedure Node998;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(50, 60));
        set_local_var(5, random(30, 40));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, 1, 6, 8);
        critter_add_trait(self_obj, 1, 5, 13);
    end
end

procedure critter_p_proc
begin
    if ((cur_map_index == 31) and (global_var(421) == 2) and (local_var(8) == 0)) then begin
        fadeIn(700);
        move_to(dude_obj, 18258, 0);
        anim(dude_obj, 1000, 5);
        dialogue_system_enter;
    end
    if (local_var(7) == 0) then begin
        if (obj_can_see_obj(self_obj, dude_obj) and (anim_busy(self_obj) == 0)) then begin
            game_ui_disable;
            animate_move_obj_to_tile(dude_obj, tile_num(dude_obj), 0);
            animate_move_obj_to_tile(self_obj, tile_num(dude_obj), 1);
        end
        if ((tile_distance(tile_num(self_obj), tile_num(dude_obj)) < 2) and (elevation(dude_obj) == elevation(self_obj))) then begin
            dialogue_system_enter;
        end
    end
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(50) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(511, 2));
    end
    else begin
        display_msg(message_str(511, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(511, 1));
    end
    else begin
        display_msg(message_str(511, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if ((cur_map_index == 31) and (local_var(8) == 1)) then begin
        float_msg(self_obj, message_str(511, random(7, 8)), 0);
    end
    else begin
        if ((local_var(7) == 1) and (cur_map_index == 102) and (obj_carrying_pid_obj(dude_obj, 409) == 0)) then begin
            float_msg(self_obj, message_str(511, random(5, 6)), 0);
        end
        else begin
            start_gdialog(511, self_obj, -1, -1, -1);
            gsay_start;
            if ((cur_map_index == 31) and (local_var(8) == 0)) then begin
                call Node017();
            end
            else begin
                if (local_var(7) == 0) then begin
                    set_local_var(7, 1);
                    call Node001();
                end
                else begin
                    call Node010();
                end
            end
            gsay_end;
            end_dialogue;
        end
    end
end

procedure destroy_p_proc
begin
    if (global_var(421) == 1) then begin
        set_global_var(421, 0);
    end
    set_global_var(429, global_var(429) bwor 64);
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((50 == 50) or (50 == 59)) then begin
            set_global_var(50, global_var(50) - 3);
        end
        else begin
            set_global_var(50, global_var(50) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (global_var(421) == 2) then begin
        if ((cur_map_index == 102) and (elevation(self_obj) == 1)) then begin
            move_to(self_obj, tile_num(self_obj), 2);
        end
        if ((cur_map_index == 31) and (elevation(self_obj) != 0)) then begin
            move_to(self_obj, tile_num(self_obj), 0);
        end
    end
    if (global_var(421) != 2) then begin
        if ((cur_map_index == 102) and (elevation(self_obj) != 1)) then begin
            move_to(self_obj, tile_num(self_obj), 1);
        end
        if ((cur_map_index == 31) and (elevation(self_obj) == 0)) then begin
            move_to(self_obj, tile_num(self_obj), 2);
        end
    end
    if (cur_map_index == 31) then begin
        set_local_var(7, 1);
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
        game_ui_disable;
        fadeOut(700);
        if (global_var(421) != 2) then begin
            set_global_var(421, 2);
            set_global_var(0, global_var(0) + 50);
        end
        load_map("nwyard", 1);
    end
end

procedure Node001
begin
    game_ui_enable;
    gsay_reply(511, 10);
    gsay_option(511, 11, Node002, 50);
end

procedure Node002
begin
    gsay_reply(511, 20);
    gsay_option(511, obj_name(dude_obj) + message_str(511, 21), Node003, 50);
    gsay_option(511, 22, Node003, 50);
    gsay_option(511, 23, Node003, 50);
end

procedure Node003
begin
    gsay_reply(511, 30);
    gsay_option(511, 31, Node004, 50);
end

procedure Node004
begin
    gsay_reply(511, 40);
    gsay_option(511, 41, Node005, 50);
    gsay_option(511, 42, Node005, 50);
end

procedure Node005
begin
    gsay_reply(511, 50);
    gsay_option(511, 51, Node006, 50);
end

procedure Node006
begin
    gsay_reply(511, 60);
    gsay_option(511, 61, Node007, 50);
end

procedure Node007
begin
    gsay_reply(511, 70);
    gsay_option(511, 71, Node008, 50);
end

procedure Node008
begin
    gsay_reply(511, 80);
    gsay_option(511, 81, Node009, 50);
    gsay_option(511, 82, Node012, 50);
end

procedure Node009
begin
    gsay_reply(511, 90);
    gsay_option(511, 91, Node011, 50);
    gsay_option(511, 92, Node012, 50);
end

procedure Node010
begin
    rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 409));
    gsay_reply(511, 100);
    gsay_option(511, 101, Node015, 50);
    if (global_var(430) == 1) then begin
        gsay_option(511, 102, Node015, 50);
    end
end

procedure Node011
begin
    gsay_reply(511, 110);
    gsay_option(511, 111, Node012, 50);
end

procedure Node012
begin
    gsay_reply(511, 120);
    gsay_option(511, 121, Node013, 50);
end

procedure Node013
begin
    gsay_reply(511, 130);
    gsay_option(511, 131, Node014, 50);
    if (obj_carrying_pid_obj(dude_obj, 409)) then begin
        gsay_option(511, 132, Node010, 50);
    end
end

procedure Node014
begin
    gsay_reply(511, 140);
    gsay_option(511, 141, Node999, 50);
end

procedure Node015
begin
    gsay_reply(511, 150);
    gsay_option(511, 151, Node016, 50);
end

procedure Node016
begin
    gsay_reply(511, 161);
    gsay_option(511, 163, NodeNWO, 50);
end

procedure Node017
begin
    if (local_var(8) == 0) then begin
        set_local_var(8, 1);
        give_exp_points(floor(1500 / 5) + (get_critter_stat(dude_obj, 4) * floor(1500 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1500 / 30)) + (floor(1500 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(1500 / 5) + (get_critter_stat(dude_obj, 4) * floor(1500 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1500 / 30)) + (floor(1500 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
    end
    game_ui_enable;
    gsay_reply(511, 170);
    gsay_option(511, 171, Node999, 50);
    gsay_option(511, 172, Node999, 50);
    gsay_option(511, 173, Node999, 50);
end

procedure NodeNWO
begin
    add_timer_event(self_obj, 5, 3);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

