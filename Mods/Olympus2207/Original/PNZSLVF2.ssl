variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable max_distance;
variable animation_is_called;
variable distance_to_walk;
variable time_to_sleep;
variable time_to_work;
variable work_tile_chois;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node999;
procedure Node010;
procedure Node011;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(20, 40));
        set_local_var(5, random(70, 90));
        set_local_var(6, random(-20, 20));
        critter_add_trait(self_obj, 1, 6, 5);
        critter_add_trait(self_obj, 1, 5, 7);
        max_distance := random(15, 20);
        set_local_var(9, random(1, 3));
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(1, 200), 1);
    end
    if ((game_time_hour == time_to_work) and (local_var(7) == 0)) then begin
        set_local_var(7, 1);
        set_local_var(8, 0);
        if ((game_time_hour % 100) < 50) then begin
            time_to_sleep := game_time_hour + random(1, 5);
        end
        else begin
            if (floor(game_time_hour / 100) < 23) then begin
                time_to_sleep := ((floor(game_time_hour / 100) + 1) * 100) + random(1, 5);
            end
            else begin
                time_to_sleep := random(1, 5);
            end
        end
    end
    if ((game_time_hour == time_to_sleep) and (local_var(8) == 0)) then begin
        set_local_var(7, 0);
        set_local_var(8, 1);
        if ((game_time_hour % 100) < 50) then begin
            time_to_work := game_time_hour + random(2, 6);
        end
        else begin
            if (floor(game_time_hour / 100) < 23) then begin
                time_to_work := ((floor(game_time_hour / 100) + 1) * 100) + random(2, 6);
            end
            else begin
                time_to_work := random(2, 6);
            end
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(49) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(113, random(6, 9)));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(113, random(1, 5)));
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if ((art_anim(obj_art_fid(self_obj)) == 48) or (art_anim(obj_art_fid(self_obj)) == 49)) then begin
        float_msg(self_obj, message_str(113, random(1030, 1039)), 0);
    end
    else begin
        if (global_var(0) > 0) then begin
            dude_objective_reputation := (global_var(49) * 30) + global_var(0) - (20 * global_var(1));
        end
        else begin
            dude_objective_reputation := (global_var(49) * 30) + global_var(0) - (20 * global_var(1));
        end
        if ((dude_objective_reputation + local_var(6)) >= 300) then begin
            self_subjective_reaction := 1;
        end
        else begin
            if (((dude_objective_reputation + local_var(6)) >= -300) and ((dude_objective_reputation + local_var(6)) < 300)) then begin
                self_subjective_reaction := 0;
            end
            else begin
                self_subjective_reaction := -1;
            end
        end
        if (not(anim_busy(self_obj))) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        end
        if (self_subjective_reaction >= 0) then begin
            if (random(1, 2) == 1) then begin
                start_gdialog(113, self_obj, -1, -1, -1);
                gsay_start;
                if ((global_var(126) > 0) and (global_var(126) < 11) and (local_var(10) == 0)) then begin
                    call Node010();
                end
                else begin
                    call Node001();
                end
                gsay_end;
                end_dialogue;
            end
            else begin
                if (self_subjective_reaction == 1) then begin
                    float_msg(self_obj, message_str(113, random(1000, 1009)), 3);
                end
                if (self_subjective_reaction == 0) then begin
                    float_msg(self_obj, message_str(113, random(1010, 1019)), 0);
                end
            end
        end
        if (self_subjective_reaction == -1) then begin
            float_msg(self_obj, message_str(113, random(1020, 1029)), 2);
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((49 == 50) or (49 == 59)) then begin
            set_global_var(49, global_var(49) - 3);
        end
        else begin
            set_global_var(49, global_var(49) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (metarule(14, 0)) then begin
        if (random(1, 2) == 1) then begin
            if (random(0, 100) <= 20) then begin
                add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(1, 10));
            end
            if (random(0, 100) <= 15) then begin
                add_mult_objs_to_inven(self_obj, create_object_sid(220, 1, 2, -1), random(1, 2));
            end
            if (random(0, 100) <= 15) then begin
                add_mult_objs_to_inven(self_obj, create_object_sid(217, 1, 2, -1), random(1, 2));
            end
            if (random(0, 100) <= 15) then begin
                add_obj_to_inven(self_obj, create_object_sid(36, 1, 2, -1));
            end
            if (random(0, 100) <= 14) then begin
                add_obj_to_inven(self_obj, create_object_sid(65, 1, 2, -1));
            end
            if (random(0, 100) <= 13) then begin
                add_obj_to_inven(self_obj, create_object_sid(63, 1, 2, -1));
            end
            if (random(0, 100) <= 12) then begin
                add_obj_to_inven(self_obj, create_object_sid(71, 1, 2, -1));
            end
            if (random(0, 100) <= 11) then begin
                add_obj_to_inven(self_obj, create_object_sid(111, 1, 2, -1));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object_sid(415, 1, 2, -1));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object_sid(420, 1, 2, -1));
            end
            if (random(0, 100) <= 9) then begin
                add_obj_to_inven(self_obj, create_object_sid(243, 1, 2, -1));
            end
            if (random(0, 100) <= 8) then begin
                add_obj_to_inven(self_obj, create_object_sid(423, 1, 2, -1));
            end
            if (random(0, 100) <= 7) then begin
                add_obj_to_inven(self_obj, create_object_sid(426, 1, 2, -1));
            end
            if (random(0, 100) <= 6) then begin
                add_obj_to_inven(self_obj, create_object_sid(110, 1, 2, -1));
            end
            if (random(0, 100) <= 5) then begin
                add_obj_to_inven(self_obj, create_object_sid(421, 1, 2, -1));
            end
            if (random(0, 100) <= 4) then begin
                add_obj_to_inven(self_obj, create_object_sid(427, 1, 2, -1));
            end
            if (random(0, 100) <= 3) then begin
                add_obj_to_inven(self_obj, create_object_sid(39, 1, 2, -1));
            end
            if (random(0, 100) <= 2) then begin
                add_obj_to_inven(self_obj, create_object_sid(75, 1, 2, -1));
            end
        end
        else begin
            if (random(0, 100) <= 20) then begin
                add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(1, 10));
            end
            if (random(0, 100) <= 15) then begin
                add_mult_objs_to_inven(self_obj, create_object_sid(238, 1, 2, -1), random(1, 2));
            end
            if (random(0, 100) <= 15) then begin
                add_mult_objs_to_inven(self_obj, create_object_sid(213, 1, 2, -1), random(1, 2));
            end
            if (random(0, 100) <= 15) then begin
                add_obj_to_inven(self_obj, create_object_sid(35, 1, 2, -1));
            end
            if (random(0, 100) <= 14) then begin
                add_obj_to_inven(self_obj, create_object_sid(65, 1, 2, -1));
            end
            if (random(0, 100) <= 13) then begin
                add_obj_to_inven(self_obj, create_object_sid(218, 1, 2, -1));
            end
            if (random(0, 100) <= 12) then begin
                add_obj_to_inven(self_obj, create_object_sid(70, 1, 2, -1));
            end
            if (random(0, 100) <= 11) then begin
                add_obj_to_inven(self_obj, create_object_sid(106, 1, 2, -1));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object_sid(244, 1, 2, -1));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object_sid(242, 1, 2, -1));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object_sid(414, 1, 2, -1));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object_sid(422, 1, 2, -1));
            end
            if (random(0, 100) <= 9) then begin
                add_obj_to_inven(self_obj, create_object_sid(423, 1, 2, -1));
            end
            if (random(0, 100) <= 8) then begin
                add_obj_to_inven(self_obj, create_object_sid(426, 1, 2, -1));
            end
            if (random(0, 100) <= 7) then begin
                add_obj_to_inven(self_obj, create_object_sid(433, 1, 2, -1));
            end
            if (random(0, 100) <= 6) then begin
                add_obj_to_inven(self_obj, create_object_sid(421, 1, 2, -1));
            end
            if (random(0, 100) <= 5) then begin
                add_obj_to_inven(self_obj, create_object_sid(427, 1, 2, -1));
            end
            if (random(0, 100) <= 4) then begin
                add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
            end
            if (random(0, 100) <= 3) then begin
                add_obj_to_inven(self_obj, create_object_sid(74, 1, 2, -1));
            end
        end
    end
    set_local_var(7, 1);
    max_distance := random(15, 20);
    if ((game_time_hour % 100) < 50) then begin
        time_to_sleep := game_time_hour + random(1, 5);
    end
    else begin
        if (floor(game_time_hour / 100) < 23) then begin
            time_to_sleep := ((floor(game_time_hour / 100) + 1) * 100) + random(1, 5);
        end
        else begin
            time_to_sleep := random(1, 5);
        end
    end
    animation_is_called := 1;
    add_timer_event(self_obj, 1, 1);
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if (local_var(7) == 1) then begin
            if ((art_anim(obj_art_fid(self_obj)) == 48) or (art_anim(obj_art_fid(self_obj)) == 49)) then begin
                critter_injure(self_obj, 2 bwor 8388608);
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                if (art_anim(obj_art_fid(self_obj)) == 48) then begin
                    reg_anim_animate(self_obj, 37, -1);
                end
                else begin
                    reg_anim_animate(self_obj, 36, -1);
                end
                reg_anim_func(3, 0);
            end
            else begin
                if ((tile_num(self_obj) != 24943) and (tile_num(self_obj) != 27353) and (tile_num(self_obj) != 28316) and (tile_num(self_obj) != 28112) and (tile_num(self_obj) != 27113) and (tile_num(self_obj) != 30706)) then begin
                    work_tile_chois := random(1, 6);
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    if (work_tile_chois == 1) then begin
                        if (tile_num(self_obj) != 24943) then begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            if (tile_distance(tile_num(self_obj), 24943) >= 25) then begin
                                reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 24943), random(12, 22)), -1);
                            end
                            else begin
                                reg_anim_obj_move_to_tile(self_obj, 24943, -1);
                            end
                            reg_anim_func(3, 0);
                        end
                    end
                    if (work_tile_chois == 2) then begin
                        if (tile_num(self_obj) != 27353) then begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            if (tile_distance(tile_num(self_obj), 27353) >= 25) then begin
                                reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 27353), random(12, 22)), -1);
                            end
                            else begin
                                reg_anim_obj_move_to_tile(self_obj, 27353, -1);
                            end
                            reg_anim_func(3, 0);
                        end
                    end
                    if (work_tile_chois == 3) then begin
                        if (tile_num(self_obj) != 28316) then begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            if (tile_distance(tile_num(self_obj), 28316) >= 25) then begin
                                reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 28316), random(12, 22)), -1);
                            end
                            else begin
                                reg_anim_obj_move_to_tile(self_obj, 28316, -1);
                            end
                            reg_anim_func(3, 0);
                        end
                    end
                    if (work_tile_chois == 4) then begin
                        if (tile_num(self_obj) != 28112) then begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            if (tile_distance(tile_num(self_obj), 28112) >= 25) then begin
                                reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 28112), random(12, 22)), -1);
                            end
                            else begin
                                reg_anim_obj_move_to_tile(self_obj, 28112, -1);
                            end
                            reg_anim_func(3, 0);
                        end
                    end
                    if (work_tile_chois == 5) then begin
                        if (tile_num(self_obj) != 27113) then begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            if (tile_distance(tile_num(self_obj), 27113) >= 25) then begin
                                reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 27113), random(12, 22)), -1);
                            end
                            else begin
                                reg_anim_obj_move_to_tile(self_obj, 27113, -1);
                            end
                            reg_anim_func(3, 0);
                        end
                    end
                    if (work_tile_chois == 6) then begin
                        if (tile_num(self_obj) != 30706) then begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            if (tile_distance(tile_num(self_obj), 30706) >= 25) then begin
                                reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), 30706), random(12, 22)), -1);
                            end
                            else begin
                                reg_anim_obj_move_to_tile(self_obj, 30706, -1);
                            end
                            reg_anim_func(3, 0);
                        end
                    end
                    reg_anim_func(3, 0);
                end
                else begin
                    if (tile_num(self_obj) == 24943) then begin
                        anim(self_obj, 1000, 5);
                    end
                    if (tile_num(self_obj) == 27353) then begin
                        anim(self_obj, 1000, 5);
                    end
                    if (tile_num(self_obj) == 28316) then begin
                        anim(self_obj, 1000, 0);
                    end
                    if (tile_num(self_obj) == 28112) then begin
                        anim(self_obj, 1000, 0);
                    end
                    if (tile_num(self_obj) == 27113) then begin
                        anim(self_obj, 1000, 0);
                    end
                    if (tile_num(self_obj) == 30706) then begin
                        anim(self_obj, 1000, 0);
                    end
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    if (random(1, 2) == 1) then begin
                        reg_anim_animate(self_obj, 0, -1);
                    end
                    if (random(1, 3) == 1) then begin
                        reg_anim_animate(self_obj, 10, -1);
                    end
                    reg_anim_animate(self_obj, 11, -1);
                    if (random(1, 4) == 1) then begin
                        reg_anim_animate(self_obj, 16, -1);
                        reg_anim_animate(self_obj, 0, -1);
                    end
                    if (random(1, 2) == 1) then begin
                        reg_anim_animate(self_obj, 0, -1);
                    end
                    reg_anim_func(3, 0);
                end
            end
        end
        else begin
            if (tile_num(self_obj) != local_var(3)) then begin
                if (tile_distance(tile_num(self_obj), local_var(3)) >= 35) then begin
                    if (tile_num(self_obj) != tile_num_in_direction(local_var(3), random(0, 5), random(2, 6))) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        if (tile_distance(tile_num(self_obj), tile_num_in_direction(local_var(3), random(0, 5), random(2, 6))) >= 25) then begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), tile_num_in_direction(local_var(3), random(0, 5), random(2, 6))), random(12, 22)), -1);
                        end
                        else begin
                            reg_anim_obj_move_to_tile(self_obj, tile_num_in_direction(local_var(3), random(0, 5), random(2, 6)), -1);
                        end
                        reg_anim_func(3, 0);
                    end
                end
                else begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    reg_anim_obj_move_to_tile(self_obj, local_var(3), -1);
                    if (random(1, 2) == 1) then begin
                        reg_anim_animate_reverse(self_obj, 36, -1);
                        reg_anim_animate(self_obj, 49, -1);
                    end
                    else begin
                        reg_anim_animate_reverse(self_obj, 37, -1);
                        reg_anim_animate(self_obj, 48, -1);
                    end
                    reg_anim_func(3, 0);
                    critter_injure(self_obj, 2);
                end
            end
            else begin
                if ((art_anim(obj_art_fid(self_obj)) != 48) and (art_anim(obj_art_fid(self_obj)) != 49)) then begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    if (random(1, 2) == 1) then begin
                        reg_anim_animate_reverse(self_obj, 36, -1);
                        reg_anim_animate(self_obj, 49, -1);
                    end
                    else begin
                        reg_anim_animate_reverse(self_obj, 37, -1);
                        reg_anim_animate(self_obj, 48, -1);
                    end
                    reg_anim_func(3, 0);
                    critter_injure(self_obj, 2);
                end
            end
        end
        animation_is_called := 0;
    end
end

procedure Node001
begin
    gsay_reply(113, local_var(9) * 100);
    gsay_option(113, random(20, 22), Node002, 50);
    gsay_option(113, random(10, 13), Node999, 50);
end

procedure Node002
begin
    gsay_reply(113, (local_var(9) * 100) + 1);
    gsay_option(113, random(14, 17), Node003, 50);
end

procedure Node003
begin
    gsay_reply(113, (local_var(9) * 100) + 2);
    gsay_option(113, random(18, 19), Node999, 50);
end

procedure Node999
begin
end

procedure Node010
begin
    gsay_reply(124, random(700, 703));
    gsay_option(124, random(704, 707), Node011, 50);
    gsay_option(124, random(712, 713), Node999, 50);
end

procedure Node011
begin
    set_global_var(126, global_var(126) + 1);
    set_local_var(10, 1);
    if (global_var(126) == 11) then begin
        play_sfx("LEVELUP");
        display_msg(message_str(10, 865));
    end
    gsay_reply(124, random(708, 711));
    gsay_option(124, random(714, 716), Node999, 50);
end

