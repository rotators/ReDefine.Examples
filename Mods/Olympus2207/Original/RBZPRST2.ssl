variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable floater_is_called;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure sex_time;
procedure Node010;
procedure Node999;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(7, has_trait(1, self_obj, 10));
        set_local_var(4, random(30, 50));
        set_local_var(5, random(30, 60));
        set_local_var(6, random(-10, 10));
        critter_add_trait(self_obj, 1, 6, 14);
        if (random(0, 100) <= 33) then begin
            if (random(0, 100) <= 15) then begin
                add_obj_to_inven(self_obj, create_object_sid(414, 1, 2, -1));
            end
            if (random(0, 100) <= 10) then begin
                add_mult_objs_to_inven(self_obj, create_object_sid(238, 1, 2, -1), random(1, 2));
            end
            if (random(0, 100) <= 10) then begin
                add_mult_objs_to_inven(self_obj, create_object_sid(213, 1, 2, -1), random(1, 2));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object_sid(420, 1, 2, -1));
            end
            if (random(0, 100) <= 8) then begin
                add_obj_to_inven(self_obj, create_object_sid(218, 1, 2, -1));
            end
            if (random(0, 100) <= 7) then begin
                add_obj_to_inven(self_obj, create_object_sid(70, 1, 2, -1));
            end
            if (random(0, 100) <= 6) then begin
                add_obj_to_inven(self_obj, create_object_sid(106, 1, 2, -1));
            end
            if (random(0, 100) <= 5) then begin
                add_obj_to_inven(self_obj, create_object_sid(244, 1, 2, -1));
            end
            if (random(0, 100) <= 5) then begin
                add_obj_to_inven(self_obj, create_object_sid(242, 1, 2, -1));
            end
            if (random(0, 100) <= 5) then begin
                add_obj_to_inven(self_obj, create_object_sid(422, 1, 2, -1));
            end
            if (random(0, 100) <= 4) then begin
                add_obj_to_inven(self_obj, create_object_sid(423, 1, 2, -1));
            end
            if (random(0, 100) <= 3) then begin
                add_obj_to_inven(self_obj, create_object_sid(426, 1, 2, -1));
            end
            if (random(0, 100) <= 2) then begin
                add_obj_to_inven(self_obj, create_object_sid(433, 1, 2, -1));
            end
            if (random(0, 100) <= 2) then begin
                add_obj_to_inven(self_obj, create_object_sid(421, 1, 2, -1));
            end
        end
        else begin
            if (random(0, 100) <= 15) then begin
                add_obj_to_inven(self_obj, create_object_sid(438, 1, 2, -1));
            end
            if (random(0, 100) <= 10) then begin
                add_mult_objs_to_inven(self_obj, create_object_sid(238, 1, 2, -1), random(1, 2));
            end
            if (random(0, 100) <= 10) then begin
                add_mult_objs_to_inven(self_obj, create_object_sid(213, 1, 2, -1), random(1, 2));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object_sid(233, 1, 2, -1));
            end
            if (random(0, 100) <= 10) then begin
                add_obj_to_inven(self_obj, create_object_sid(420, 1, 2, -1));
            end
            if (random(0, 100) <= 9) then begin
                add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
            end
            if (random(0, 100) <= 8) then begin
                add_obj_to_inven(self_obj, create_object_sid(218, 1, 2, -1));
            end
            if (random(0, 100) <= 6) then begin
                add_obj_to_inven(self_obj, create_object_sid(440, 1, 2, -1));
            end
            if (random(0, 100) <= 5) then begin
                add_obj_to_inven(self_obj, create_object_sid(244, 1, 2, -1));
            end
            if (random(0, 100) <= 5) then begin
                add_obj_to_inven(self_obj, create_object_sid(428, 1, 2, -1));
            end
            if (random(0, 100) <= 5) then begin
                add_obj_to_inven(self_obj, create_object_sid(422, 1, 2, -1));
            end
            if (random(0, 100) <= 4) then begin
                add_obj_to_inven(self_obj, create_object_sid(423, 1, 2, -1));
            end
            if (random(0, 100) <= 3) then begin
                add_obj_to_inven(self_obj, create_object_sid(426, 1, 2, -1));
            end
            if (random(0, 100) <= 2) then begin
                add_obj_to_inven(self_obj, create_object_sid(433, 1, 2, -1));
            end
            if (random(0, 100) <= 2) then begin
                add_obj_to_inven(self_obj, create_object_sid(421, 1, 2, -1));
            end
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(39, 89), 1);
    end
    if (floater_is_called == 0) then begin
        floater_is_called := 1;
        add_timer_event(self_obj, random(100, 700), 2);
    end
    if ((tile_num(self_obj) != local_var(3)) and not(anim_busy(self_obj))) then begin
        animate_move_obj_to_tile(self_obj, local_var(3), 0);
    end
    else begin
        if ((has_trait(1, self_obj, 10) != local_var(7)) and (tile_num(self_obj) == local_var(3))) then begin
            anim(self_obj, 1000, local_var(7));
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(54) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(235, random(6, 9)));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(235, random(1, 5)));
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
    if (not(global_var(306) == 1)) then begin
        script_overrides;
        if (item_caps_total(dude_obj) >= 27) then begin
            float_msg(self_obj, message_str(235, random(10, 14)), 0);
            call sex_time();
        end
        else begin
            float_msg(self_obj, message_str(235, random(15, 18)), 0);
        end
    end
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if ((global_var(306) == 1) or (global_var(249) == 1)) then begin
        start_gdialog(235, self_obj, -1, -1, -1);
        gsay_start;
        call Node010();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (global_var(0) > 0) then begin
            dude_objective_reputation := (global_var(54) * 30) + global_var(0) - (20 * global_var(1));
        end
        else begin
            dude_objective_reputation := (global_var(54) * 30) + global_var(0) - (20 * global_var(1));
        end
    end
    if ((dude_objective_reputation + local_var(6)) >= 300) then begin
        self_subjective_reaction := 1;
    end
    else begin
        if (((dude_objective_reputation + local_var(6)) >= -300) and ((dude_objective_reputation + local_var(6)) < 300)) then begin
            self_subjective_reaction := 0;
        end
        else begin
            self_subjective_reaction := -1;
        end
    end
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if (self_subjective_reaction == 1) then begin
        float_msg(self_obj, message_str(235, random(1000, 1009)), 3);
    end
    if (self_subjective_reaction == 0) then begin
        float_msg(self_obj, message_str(235, random(1010, 1019)), 0);
    end
    if (self_subjective_reaction == -1) then begin
        float_msg(self_obj, message_str(235, random(1020, 1029)), 2);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((54 == 50) or (54 == 59)) then begin
            set_global_var(54, global_var(54) - 3);
        end
        else begin
            set_global_var(54, global_var(54) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized) and not(anim_busy(self_obj))) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        if (obj_on_screen(self_obj) and (tile_num(self_obj) == local_var(3))) then begin
            float_msg(self_obj, message_str(235, random(1040, 1044)), 0);
        end
        floater_is_called := 0;
    end
    if (fixed_param == 3) then begin
        if (random(0, 100) <= 60) then begin
            play_sfx("HFXXXXBA");
        end
        else begin
            play_sfx("HMXXXXBA");
        end
        add_timer_event(self_obj, random(6, 9), 4);
    end
    if (fixed_param == 4) then begin
        if (random(0, 100) <= 60) then begin
            play_sfx("HFXXXXAO");
        end
        else begin
            play_sfx("HMXXXXAO");
        end
        add_timer_event(self_obj, random(6, 9), 5);
    end
    if (fixed_param == 5) then begin
        if (random(0, 100) <= 60) then begin
            play_sfx("HFXXXXAP");
        end
        else begin
            play_sfx("HMXXXXAP");
        end
        add_timer_event(self_obj, random(6, 9), 6);
    end
    if (fixed_param == 6) then begin
        if (random(0, 100) <= 60) then begin
            play_sfx("HFXXXXHE");
        end
        else begin
            play_sfx("HMXXXXHE");
        end
        add_timer_event(self_obj, random(6, 9), 7);
    end
    if (fixed_param == 7) then begin
        if (random(0, 100) <= 60) then begin
            if (random(0, 100) <= 60) then begin
                play_sfx("HFXXXXYB");
            end
            else begin
                play_sfx("HFXXXXBD");
            end
        end
        else begin
            if (random(0, 100) <= 60) then begin
                play_sfx("HMXXXXCJ");
            end
            else begin
                play_sfx("HMXXXXCH");
            end
        end
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        if (random(0, 100) <= 50) then begin
            reg_anim_animate(self_obj, 37, -1);
        end
        else begin
            reg_anim_animate(self_obj, 36, -1);
        end
        reg_anim_obj_move_to_tile(self_obj, local_var(3), -1);
        reg_anim_func(3, 0);
        fadeIn(3000);
        item_caps_adjust(dude_obj, -27);
        item_caps_adjust(self_obj, 27);
        game_ui_enable;
    end
end

procedure sex_time
begin
    game_ui_disable;
    if ((get_critter_stat(dude_obj, 6) <= 9) and (get_critter_stat(dude_obj, 3) <= 8)) then begin
        add_obj_to_inven(self_obj, create_object_sid(444, 1, 2, -1));
        use_obj_on_obj(obj_carrying_pid_obj(self_obj, 444), dude_obj);
    end
    animate_move_obj_to_tile(self_obj, 19522, 0);
    animate_move_obj_to_tile(dude_obj, 19522, -1);
    fadeOut(2000);
    add_timer_event(self_obj, 1, 3);
    set_global_var(282, global_var(282) + 1);
end

procedure Node010
begin
    if ((game_time_in_seconds - local_var(8)) < 1200000) then begin
        gsay_reply(235, random(101, 102));
        gsay_option(235, 103, Node999, 50);
    end
    else begin
        set_local_var(8, game_time_in_seconds);
        item_caps_adjust(dude_obj, floor(random(10, 30) / 5) + (get_critter_stat(dude_obj, 3) * floor(random(10, 30) / 12)) + (get_critter_stat(dude_obj, 6) * floor(random(10, 30) / 30)) + (floor(random(10, 30) / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(150, 154)) + (floor(random(10, 30) / 5) + (get_critter_stat(dude_obj, 3) * floor(random(10, 30) / 12)) + (get_critter_stat(dude_obj, 6) * floor(random(10, 30) / 30)) + (floor(random(10, 30) / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 155));
        gsay_reply(235, random(104, 106));
        gsay_option(235, 107, Node999, 50);
    end
end

procedure Node999
begin
end

