variable event_is_called;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node010;
procedure Node999;


procedure start
begin
    if (local_var(1) == 0) then begin
        if (random(0, 100) <= 30) then begin
            add_obj_to_inven(self_obj, create_object_sid(176, 1, 2, -1));
            add_mult_objs_to_inven(self_obj, create_object_sid(11, 1, 2, -1), random(1, 2));
            wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 176));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(153, 1, 2, -1));
            add_mult_objs_to_inven(self_obj, create_object_sid(19, 1, 2, -1), random(1, 3));
            wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 153));
        end
        if (random(0, 100) <= 10) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(221, 1, 2, -1), random(1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(64, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(103, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(222, 1, 2, -1));
        end
        if (random(0, 100) <= 20) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(4, 30));
        end
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(60, 85));
        set_local_var(5, random(40, 100));
        critter_add_trait(self_obj, 1, 6, 3);
        critter_add_trait(self_obj, 1, 5, 5);
        critter_heal(self_obj, -(get_critter_stat(self_obj, 35) - 3));
    end
end

procedure critter_p_proc
begin
    if (event_is_called == 0) then begin
        event_is_called := 1;
        add_timer_event(self_obj, random(150, 450), 1);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(59) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
    if (map_var(4) == 1) then begin
        set_map_var(4, 2);
        move_obj_inven_to_obj(self_obj, map_var(1));
        create_object_sid(78, 15968, elevation(self_obj), -1);
        move_to(self_obj, 15965, elevation(self_obj));
        kill_critter(self_obj, 48);
    end
    if (map_var(0) == 1) then begin
        set_map_var(0, 2);
        game_ui_disable;
        animate_move_obj_to_tile(dude_obj, tile_num_in_direction(tile_num(self_obj), 0, 1), 1 bwor 16);
        metarule3(108, 16156, 0, 0);
        float_msg(self_obj, message_str(83, 1060), 0);
    end
    if ((map_var(0) == 2) and (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 1)) then begin
        set_map_var(0, 3);
        dialogue_system_enter;
    end
end

procedure combat_p_proc
begin
    if (tile_num(self_obj) != local_var(3)) then begin
        animate_move_obj_to_tile(self_obj, local_var(3), 0);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(83, random(6, 9)));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(83, random(1, 5)));
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
    script_overrides;
    if (global_var(6) == 0) then begin
        float_msg(self_obj, message_str(83, random(1030, 1039)), 0);
    end
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if (global_var(36) == 0) then begin
        start_gdialog(83, self_obj, -1, -1, -1);
        gsay_start;
        call Node010();
        gsay_end;
        end_dialogue;
    end
    else begin
        float_msg(self_obj, message_str(83, 1061), 2);
    end
end

procedure destroy_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        script_overrides;
        display_msg(message_str(10, 874));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if (not(combat_is_initialized)) then begin
            float_msg(self_obj, message_str(83, random(1062, 1065)), 0);
        end
        event_is_called := 0;
    end
end

procedure Node010
begin
    game_ui_enable;
    set_global_var(36, 1);
    gsay_reply(83, 100);
    gsay_option(83, 101, Node999, 50);
    gsay_option(83, 102, Node999, 50);
end

procedure Node999
begin
end

