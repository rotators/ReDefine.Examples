variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable after_the_punch;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node017q;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node999;
procedure Node998;
procedure NodeBarter;
procedure CatchThePunch;
procedure StandUp;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(80, 85));
        set_local_var(5, random(50, 60));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, 1, 6, 8);
        critter_add_trait(self_obj, 1, 5, 21);
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object_sid(160, 1, 2, -1));
            add_mult_objs_to_inven(self_obj, create_object_sid(2, 1, 2, -1), random(31, 48));
            wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 160));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(164, 1, 2, -1));
            add_mult_objs_to_inven(self_obj, create_object_sid(2, 1, 2, -1), random(25, 37));
            wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 164));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object_sid(221, 1, 2, -1));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(106, 1, 2, -1));
        end
        if (random(0, 100) <= 33) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(10, 40));
        end
        if (random(0, 100) <= 25) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(63, 1, 2, -1), random(2, 4));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(64, 1, 2, -1));
        end
        if (random(0, 100) <= 9) then begin
            add_obj_to_inven(self_obj, create_object_sid(422, 1, 2, -1));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
        end
        if (random(0, 100) <= 7) then begin
            add_obj_to_inven(self_obj, create_object_sid(229, 1, 2, -1));
        end
        if (random(0, 100) <= 6) then begin
            add_obj_to_inven(self_obj, create_object_sid(230, 1, 2, -1));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(50) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(200, 2));
    end
    else begin
        display_msg(message_str(200, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(200, 1));
    end
    else begin
        display_msg(message_str(200, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    start_gdialog(200, self_obj, -1, -1, -1);
    gsay_start;
    if (after_the_punch == 1) then begin
        game_ui_enable;
        if (get_critter_stat(dude_obj, 0) >= 8) then begin
            call Node029();
        end
        else begin
            if (get_critter_stat(dude_obj, 0) >= 5) then begin
                call Node030();
            end
            else begin
                call Node031();
            end
        end
    end
    else begin
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((50 == 50) or (50 == 59)) then begin
            set_global_var(50, global_var(50) - 3);
        end
        else begin
            set_global_var(50, global_var(50) - 6);
        end
    end
    set_global_var(118, global_var(118) bwor 512);
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (not(metarule(22, 0)) == 1) then begin
        if (tile_num(self_obj) != local_var(3)) then begin
            move_to(self_obj, local_var(3), elevation(self_obj));
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
        if (get_critter_stat(dude_obj, 0) < 8) then begin
            play_sfx("HMXXXXBA");
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(dude_obj, 20, -1);
            reg_anim_func(3, 0);
        end
        else begin
            play_sfx("HMXXXXAO");
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(dude_obj, 14, -1);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, 20, 4);
    end
    if (fixed_param == 4) then begin
        dialogue_system_enter;
    end
    if (fixed_param == 5) then begin
        play_sfx("HMXXXXAQ");
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 16, -1);
        reg_anim_func(3, 0);
    end
    if (fixed_param == 6) then begin
        game_ui_enable;
    end
end

procedure Node001
begin
    already_talk := 1;
    gsay_reply(200, 10);
    if (get_critter_stat(dude_obj, 4) >= 8) then begin
        gsay_option(200, 11, Node002, 50);
    end
    gsay_option(200, 12, Node007, 50);
    gsay_option(200, 13, Node998, 50);
    gsay_option(200, 14, Node011, 50);
    gsay_option(200, 15, Node008, 50);
    gsay_option(200, 16, Node011, 50);
end

procedure Node002
begin
    gsay_reply(200, 20);
    gsay_option(200, 21, Node003, 50);
    gsay_option(200, message_str(200, 22) + obj_name(dude_obj) + message_str(200, 23), Node006, 50);
end

procedure Node003
begin
    gsay_reply(200, 29);
    gsay_option(200, message_str(200, 30) + obj_name(dude_obj) + message_str(200, 31), Node004, 50);
    gsay_option(200, 32, Node998, 50);
end

procedure Node004
begin
    gsay_reply(200, 40);
    if (get_critter_stat(dude_obj, 4) >= 8) then begin
        gsay_option(200, 41, Node005, 50);
    end
    gsay_option(200, 42, Node010, 50);
end

procedure Node005
begin
    gsay_reply(200, 50);
    gsay_option(200, 51, Node010, 50);
    gsay_option(200, 52, Node998, 50);
end

procedure Node006
begin
    gsay_reply(200, 60);
    gsay_option(200, 61, Node010, 50);
end

procedure Node007
begin
    gsay_reply(200, 70);
    gsay_option(200, 71, Node008, 50);
    gsay_option(200, 72, Node006, 50);
    gsay_option(200, 73, Node009, 50);
    gsay_option(200, 74, Node006, 50);
end

procedure Node008
begin
    gsay_reply(200, 80);
    gsay_option(200, 81, Node010, 50);
end

procedure Node009
begin
    gsay_reply(200, 90);
    gsay_option(200, 91, Node010, 50);
end

procedure Node010
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
    end
    if (already_talk == 0) then begin
        already_talk := 1;
        if (global_var(221) == 3) then begin
            if (local_var(9) == 0) then begin
                set_local_var(9, 1);
                gsay_reply(200, 1003);
            end
            else begin
                gsay_reply(200, 1004);
            end
        end
        else begin
            gsay_reply(200, 1001);
        end
    end
    else begin
        gsay_reply(200, 1002);
    end
    gsay_option(200, 101, Node013, 50);
    gsay_option(200, 102, Node014, 50);
    gsay_option(200, 103, Node035, 50);
    if ((global_var(202) == 1) and (local_var(8) == 0)) then begin
        gsay_option(200, 104, Node045, 50);
    end
    gsay_option(200, 105, Node999, 50);
end

procedure Node011
begin
    gsay_reply(200, 110);
    gsay_option(200, message_str(200, 111) + obj_name(dude_obj) + message_str(200, 112), Node012, 50);
    gsay_option(200, message_str(200, 113) + obj_name(dude_obj) + message_str(200, 114), Node006, 50);
end

procedure Node012
begin
    gsay_reply(200, 120);
    gsay_option(200, 121, Node010, 50);
end

procedure Node013
begin
    if (not(global_var(221)) == 3) then begin
        gsay_reply(200, 130);
    end
    else begin
        gsay_reply(200, 136);
    end
    gsay_option(200, 131, Node014, 50);
    if (not(global_var(221)) == 3) then begin
        gsay_option(200, 132, Node022, 50);
    end
    gsay_option(200, 133, Node010, 50);
    gsay_option(200, 134, Node999, 50);
end

procedure Node014
begin
    if (not(global_var(221)) == 3) then begin
        gsay_reply(200, 140);
        gsay_option(200, 141, Node015, 50);
        gsay_option(200, 142, Node016, 50);
        gsay_option(200, 143, Node019, 50);
        gsay_option(200, 144, Node010, 50);
    end
    else begin
        gsay_reply(200, 145);
        gsay_option(200, 146, Node016, 50);
        gsay_option(200, 147, Node019, 50);
        gsay_option(200, 148, Node010, 50);
    end
end

procedure Node015
begin
    gsay_reply(200, 150);
    gsay_option(200, 151, Node016, 50);
    gsay_option(200, 152, Node019, 50);
    gsay_option(200, 153, Node010, 50);
end

procedure Node016
begin
    if (global_var(144) < 2) then begin
        gsay_reply(200, 1601);
    end
    else begin
        if (global_var(221) == 3) then begin
            gsay_reply(200, 1602);
        end
        else begin
            gsay_reply(200, 1603);
        end
    end
    if (global_var(144) < 2) then begin
        gsay_option(200, 161, Node017, 50);
        gsay_option(200, 162, Node018, 50);
    end
    gsay_option(200, 163, Node010, 50);
end

procedure Node017
begin
    if (global_var(144) == 0) then begin
        gsay_reply(200, 1701);
    end
    if (global_var(144) == 1) then begin
        gsay_reply(200, 1702);
    end
    gsay_option(200, 171, Node010, 50);
    gsay_option(200, 172, Node017q, 50);
end

procedure Node017q
begin
    set_global_var(144, 1);
    call Node010();
end

procedure Node018
begin
    gsay_reply(200, 180);
    gsay_option(200, 181, Node017, 50);
    gsay_option(200, 182, Node010, 50);
end

procedure Node019
begin
    if (not(global_var(221)) == 3) then begin
        gsay_reply(200, 190);
    end
    else begin
        gsay_reply(200, 195);
    end
    gsay_option(200, 191, Node020, 50);
    gsay_option(200, 192, Node021, 50);
    gsay_option(200, 193, Node023, 50);
    gsay_option(200, 194, Node010, 50);
end

procedure Node020
begin
    gsay_reply(200, 200);
    gsay_option(200, 201, Node021, 50);
    gsay_option(200, 202, Node010, 50);
end

procedure Node021
begin
    gsay_reply(200, 210);
    gsay_option(200, 211, Node010, 50);
end

procedure Node022
begin
    gsay_reply(200, 220);
    gsay_option(200, 221, Node010, 50);
    gsay_option(200, 222, Node998, 50);
    gsay_option(200, 223, Node999, 50);
end

procedure Node023
begin
    gsay_reply(200, 230);
    if (not(global_var(221)) == 3) then begin
        gsay_option(200, 231, Node025, 50);
        gsay_option(200, 232, Node024, 50);
    end
    gsay_option(200, 233, Node010, 50);
end

procedure Node024
begin
    gsay_reply(200, 240);
    gsay_option(200, 241, Node025, 50);
    gsay_option(200, 242, Node010, 50);
end

procedure Node025
begin
    gsay_reply(200, 250);
    gsay_option(200, 251, Node026, 50);
    gsay_option(200, 252, Node998, 50);
    gsay_option(200, 253, Node010, 50);
    gsay_option(200, 254, Node999, 50);
end

procedure Node026
begin
    gsay_reply(200, 260);
    gsay_option(200, 261, Node027, 50);
    gsay_option(200, 262, Node010, 50);
    gsay_option(200, 263, Node999, 50);
end

procedure Node027
begin
    gsay_reply(200, 270);
    gsay_option(200, 271, Node028, 50);
    gsay_option(200, 272, Node010, 50);
end

procedure Node028
begin
    gsay_reply(200, 280);
    gsay_option(200, 281, CatchThePunch, 50);
end

procedure Node029
begin
    gsay_reply(200, 290);
    gsay_option(200, 291, Node032, 50);
end

procedure Node030
begin
    after_the_punch := 2;
    gsay_reply(200, 300);
    gsay_option(200, 301, Node033, 50);
end

procedure Node031
begin
    gsay_reply(200, 310);
    gsay_option(200, 311, Node034, 50);
end

procedure Node032
begin
    gsay_reply(200, 320);
    gsay_option(200, 321, Node010, 50);
    gsay_option(200, 322, Node999, 50);
end

procedure Node033
begin
    gsay_reply(200, 330);
    gsay_option(200, 331, Node010, 50);
    gsay_option(200, 332, Node999, 50);
end

procedure Node034
begin
    after_the_punch := 2;
    gsay_reply(200, 340);
    gsay_option(200, 341, Node010, 50);
    gsay_option(200, 342, Node999, 50);
end

procedure Node035
begin
    gsay_reply(200, 350);
    gsay_option(200, 351, Node036, 50);
    gsay_option(200, 352, Node010, 50);
end

procedure Node036
begin
    gsay_reply(200, 360);
    gsay_option(200, 361, Node037, 50);
    gsay_option(200, 362, Node010, 50);
end

procedure Node037
begin
    gsay_reply(200, 370);
    gsay_option(200, 371, Node038, 50);
    gsay_option(200, 372, Node042, 50);
    gsay_option(200, 373, Node039, 50);
    if (get_critter_stat(dude_obj, 4) <= 3) then begin
        gsay_option(200, 374, Node043, 50);
    end
    if (get_critter_stat(dude_obj, 4) >= 8) then begin
        gsay_option(200, 375, Node044, 50);
    end
    gsay_option(200, 376, Node040, 50);
    gsay_option(200, 377, Node041, 50);
end

procedure Node038
begin
    gsay_reply(200, 380);
    gsay_option(200, 381, Node033, 50);
end

procedure Node039
begin
    gsay_reply(200, 390);
    gsay_option(200, 391, Node033, 50);
end

procedure Node040
begin
    gsay_reply(200, 400);
    gsay_option(200, 401, Node033, 50);
end

procedure Node041
begin
    gsay_reply(200, 410);
    gsay_option(200, 411, Node033, 50);
end

procedure Node042
begin
    gsay_reply(200, 420);
    gsay_option(200, 421, Node033, 50);
end

procedure Node043
begin
    gsay_reply(200, 430);
    gsay_option(200, 431, Node032, 50);
end

procedure Node044
begin
    gsay_reply(200, 440);
    gsay_option(200, 441, Node032, 50);
end

procedure Node045
begin
    set_local_var(8, 1);
    set_global_var(216, 1);
    gsay_reply(200, 450);
    gsay_option(200, 451, Node999, 50);
end

procedure Node999
begin
    already_talk := 0;
    if (after_the_punch == 2) then begin
        call StandUp();
    end
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

procedure CatchThePunch
begin
    game_ui_disable;
    after_the_punch := 1;
    fadeOut(600);
    move_to(dude_obj, tile_num_in_direction(tile_num(self_obj), 2, 1), elevation(self_obj));
    anim(dude_obj, 1000, 5);
    anim(self_obj, 1000, 2);
    fadeIn(600);
    add_timer_event(self_obj, 5, 5);
    add_timer_event(self_obj, 7, 3);
end

procedure StandUp
begin
    game_ui_disable;
    add_timer_event(self_obj, 17, 6);
    reg_anim_func(2, dude_obj);
    reg_anim_func(1, 1);
    reg_anim_animate(dude_obj, 37, -1);
    reg_anim_func(3, 0);
    after_the_punch := 0;
end

