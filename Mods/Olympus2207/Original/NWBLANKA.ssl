variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node036a;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure Node055;
procedure Node056;
procedure Node057;
procedure Node058;
procedure Node059;
procedure Node060;
procedure Node061;
procedure Node062;
procedure Node063;
procedure Node064;
procedure Node065;
procedure Node066;
procedure Node067;
procedure Node068;
procedure Node069;
procedure Node070;
procedure Node071;
procedure Node072;
procedure Node073;
procedure Node074;
procedure NodeDie;
procedure NodeStandUp;
procedure Node999;
procedure Node998;
procedure Node998a;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(70, 80));
        set_local_var(5, random(40, 50));
        set_local_var(6, random(-20, 10));
        critter_add_trait(self_obj, 1, 6, 8);
        critter_add_trait(self_obj, 1, 5, 11);
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object_sid(165, 1, 2, -1));
            add_mult_objs_to_inven(self_obj, create_object_sid(2, 1, 2, -1), random(11, 28));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(172, 1, 2, -1));
            add_mult_objs_to_inven(self_obj, create_object_sid(7, 1, 2, -1), random(11, 19));
        end
        if (random(0, 100) <= 33) then begin
            add_obj_to_inven(self_obj, create_object_sid(109, 1, 2, -1));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(110, 1, 2, -1));
        end
        if (random(0, 100) <= 20) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(5, 20));
        end
        if (random(0, 100) <= 15) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(238, 1, 2, -1), random(2, 5));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object_sid(104, 1, 2, -1));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object_sid(227, 1, 2, -1));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object_sid(239, 1, 2, -1));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object_sid(232, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(242, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(422, 1, 2, -1));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object_sid(423, 1, 2, -1));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object_sid(426, 1, 2, -1));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object_sid(433, 1, 2, -1));
        end
        if (random(0, 100) <= 2) then begin
            add_obj_to_inven(self_obj, create_object_sid(421, 1, 2, -1));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, 5, 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(50) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(196, 2));
    end
    else begin
        display_msg(message_str(196, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(196, 1));
    end
    else begin
        display_msg(message_str(196, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (local_var(8) == 1) then begin
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 5)), 1);
    end
    else begin
        if (not(anim_busy(self_obj))) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        end
        start_gdialog(196, self_obj, -1, -1, -1);
        gsay_start;
        if ((local_var(9) == 1) and (global_var(153) < 2)) then begin
            call Node068();
        end
        else begin
            if (local_var(7) == 0) then begin
                call Node001();
            end
            else begin
                call Node010();
            end
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((50 == 50) or (50 == 59)) then begin
            set_global_var(50, global_var(50) - 3);
        end
        else begin
            set_global_var(50, global_var(50) - 6);
        end
    end
    set_global_var(118, global_var(118) bwor 32);
    if (global_var(153) == 1) then begin
        set_global_var(153, 2);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (tile_num(self_obj) != local_var(3)) then begin
        move_to(self_obj, local_var(3), elevation(self_obj));
    end
    anim(self_obj, 1000, 2);
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if ((local_var(8) == 1) and (tile_distance(tile_num(self_obj), tile_num(dude_obj)) < 3) and (anim_busy(self_obj) == 0)) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 5)), 1);
        end
        else begin
            if ((local_var(8) == 1) and (tile_distance(local_var(3), tile_num(dude_obj)) > 5) and (tile_distance(local_var(3), tile_num(self_obj)) > 5) and (anim_busy(self_obj) == 0)) then begin
                animate_move_obj_to_tile(self_obj, local_var(3), 0);
            end
        end
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 37, -1);
        reg_anim_func(3, 0);
        fadeIn(600);
    end
end

procedure Node001
begin
    already_talk := 1;
    set_local_var(7, 1);
    gsay_reply(196, 10);
    gsay_option(196, 11, Node002, 50);
    gsay_option(196, 12, Node012, 50);
    gsay_option(196, 13, Node014, 50);
    gsay_option(196, 14, Node015, 50);
    gsay_option(196, 15, Node016, 50);
    gsay_option(196, 16, Node999, 50);
end

procedure Node002
begin
    gsay_reply(196, 20);
    gsay_option(196, 21, Node003, 50);
    gsay_option(196, 22, Node006, 50);
    gsay_option(196, 23, Node008, 50);
    gsay_option(196, 24, Node013, 50);
    gsay_option(196, 25, Node999, 50);
end

procedure Node003
begin
    gsay_reply(196, 30);
    gsay_option(196, 31, Node004, 50);
    gsay_option(196, 32, Node007, 50);
    gsay_option(196, 33, Node013, 50);
    gsay_option(196, 34, Node005, 50);
    gsay_option(196, 35, Node999, 50);
end

procedure Node004
begin
    gsay_reply(196, 40);
    gsay_option(196, 41, Node018, 50);
    gsay_option(196, 42, Node017, 50);
    gsay_option(196, 43, Node007, 50);
    gsay_option(196, 44, Node005, 50);
    gsay_option(196, 45, Node999, 50);
end

procedure Node005
begin
    gsay_reply(196, 50);
    gsay_option(196, 51, Node006, 50);
    gsay_option(196, 52, Node019, 50);
    gsay_option(196, 53, Node020, 50);
    gsay_option(196, 54, Node018, 50);
    if (global_var(221) == 3) then begin
        gsay_option(196, 55, Node009, 50);
    end
    gsay_option(196, 56, Node999, 50);
end

procedure Node006
begin
    gsay_reply(196, 60);
    gsay_option(196, 61, Node008, 50);
    gsay_option(196, 62, Node007, 50);
    gsay_option(196, 63, Node013, 50);
    gsay_option(196, 64, Node010, 50);
    gsay_option(196, 65, Node999, 50);
end

procedure Node007
begin
    gsay_reply(196, 70);
    gsay_option(196, 71, Node013, 50);
    gsay_option(196, 72, Node005, 50);
    gsay_option(196, 73, Node008, 50);
    gsay_option(196, 74, Node010, 50);
    gsay_option(196, 75, Node999, 50);
end

procedure Node008
begin
    gsay_reply(196, 80);
    gsay_option(196, 81, Node011, 50);
    gsay_option(196, 82, Node023, 50);
    gsay_option(196, 83, Node010, 50);
    gsay_option(196, 84, Node999, 50);
end

procedure Node009
begin
    gsay_reply(196, 90);
    gsay_option(196, 91, Node013, 50);
    gsay_option(196, 92, Node021, 50);
    gsay_option(196, 93, Node010, 50);
    gsay_option(196, 94, Node022, 50);
    gsay_option(196, 95, Node999, 50);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        gsay_reply(196, 1001);
    end
    else begin
        gsay_reply(196, 1002);
    end
    if (not(global_var(221) == 3)) then begin
        gsay_option(196, 101, Node005, 50);
    end
    gsay_option(196, 102, Node008, 50);
    gsay_option(196, 103, Node013, 50);
    if (not(global_var(221) == 3)) then begin
        gsay_option(196, 104, Node003, 50);
    end
    if ((global_var(153) == 1) and obj_carrying_pid_obj(dude_obj, 342)) then begin
        gsay_option(196, 105, Node038, 50);
    end
    gsay_option(196, 106, Node999, 50);
end

procedure Node011
begin
    gsay_reply(196, 110);
    gsay_option(196, 111, Node024, 50);
    gsay_option(196, 112, Node025, 50);
    gsay_option(196, 113, Node026, 50);
    gsay_option(196, 114, Node027, 50);
    gsay_option(196, 115, Node028, 50);
    gsay_option(196, 116, Node029, 50);
    gsay_option(196, 117, Node010, 50);
    gsay_option(196, 118, Node999, 50);
end

procedure Node012
begin
    gsay_reply(196, 120);
    gsay_option(196, 121, Node006, 50);
    gsay_option(196, 122, Node013, 50);
    gsay_option(196, 123, Node008, 50);
    gsay_option(196, 124, Node003, 50);
    gsay_option(196, 125, Node999, 50);
end

procedure Node013
begin
    if (global_var(153) < 2) then begin
        gsay_reply(196, 1301);
    end
    else begin
        gsay_reply(196, 1302);
    end
    if (global_var(153) < 2) then begin
        gsay_option(196, 131, Node008, 50);
    end
    if (global_var(153) == 0) then begin
        gsay_option(196, 132, Node030, 50);
    end
    gsay_option(196, 133, Node010, 50);
    gsay_option(196, 134, Node999, 50);
end

procedure Node014
begin
    gsay_reply(196, 140);
    gsay_option(196, 141, Node008, 50);
    gsay_option(196, 142, Node013, 50);
    gsay_option(196, 143, Node006, 50);
    gsay_option(196, 144, Node003, 50);
    gsay_option(196, 145, Node999, 50);
end

procedure Node015
begin
    gsay_reply(196, 150);
    gsay_option(196, 151, Node008, 50);
    gsay_option(196, 152, Node013, 50);
    gsay_option(196, 153, Node006, 50);
    gsay_option(196, 154, Node003, 50);
    gsay_option(196, 155, Node999, 50);
end

procedure Node016
begin
    gsay_reply(196, 160);
    gsay_option(196, 161, Node006, 50);
    gsay_option(196, 162, Node008, 50);
    gsay_option(196, 163, Node003, 50);
    gsay_option(196, 164, Node999, 50);
end

procedure Node017
begin
    gsay_reply(196, 170);
    gsay_option(196, 171, Node018, 50);
    gsay_option(196, 172, Node008, 50);
    gsay_option(196, 173, Node010, 50);
    gsay_option(196, 174, Node999, 50);
end

procedure Node018
begin
    gsay_reply(196, 180);
    gsay_option(196, 181, Node005, 50);
    gsay_option(196, 182, Node019, 50);
    gsay_option(196, 183, Node020, 50);
    gsay_option(196, 184, Node010, 50);
    gsay_option(196, 185, Node999, 50);
end

procedure Node019
begin
    gsay_reply(196, 190);
    gsay_option(196, 191, Node008, 50);
    gsay_option(196, 192, Node020, 50);
    gsay_option(196, 193, Node005, 50);
    gsay_option(196, 194, Node010, 50);
    gsay_option(196, 195, Node999, 50);
end

procedure Node020
begin
    gsay_reply(196, 200);
    gsay_option(196, 201, Node008, 50);
    gsay_option(196, 202, Node005, 50);
    gsay_option(196, 203, Node019, 50);
    gsay_option(196, 204, Node018, 50);
    gsay_option(196, 205, Node010, 50);
    gsay_option(196, 206, Node999, 50);
end

procedure Node021
begin
    gsay_reply(196, 210);
    gsay_option(196, 211, Node010, 50);
    gsay_option(196, 212, Node998a, 50);
    gsay_option(196, 213, Node999, 50);
    gsay_option(196, 214, Node070, 50);
end

procedure Node022
begin
    gsay_reply(196, 220);
    gsay_option(196, 221, Node008, 50);
    gsay_option(196, 222, Node010, 50);
    gsay_option(196, 223, Node999, 50);
    gsay_option(196, 224, Node070, 50);
end

procedure Node023
begin
    gsay_reply(196, 230);
    gsay_option(196, 231, Node011, 50);
    gsay_option(196, 232, Node010, 50);
    gsay_option(196, 233, Node999, 50);
end

procedure Node024
begin
    gsay_reply(196, 240);
    gsay_option(196, 241, Node025, 50);
    gsay_option(196, 242, Node026, 50);
    gsay_option(196, 243, Node027, 50);
    gsay_option(196, 244, Node028, 50);
    gsay_option(196, 245, Node029, 50);
    gsay_option(196, 246, Node010, 50);
    gsay_option(196, 247, Node999, 50);
end

procedure Node025
begin
    gsay_reply(196, 250);
    gsay_option(196, 251, Node024, 50);
    gsay_option(196, 252, Node026, 50);
    gsay_option(196, 253, Node027, 50);
    gsay_option(196, 254, Node028, 50);
    gsay_option(196, 255, Node029, 50);
    gsay_option(196, 256, Node010, 50);
    gsay_option(196, 257, Node999, 50);
end

procedure Node026
begin
    gsay_reply(196, 260);
    gsay_option(196, 261, Node024, 50);
    gsay_option(196, 262, Node025, 50);
    gsay_option(196, 263, Node027, 50);
    gsay_option(196, 264, Node028, 50);
    gsay_option(196, 265, Node029, 50);
    gsay_option(196, 266, Node010, 50);
    gsay_option(196, 267, Node999, 50);
end

procedure Node027
begin
    gsay_reply(196, 270);
    gsay_option(196, 271, Node024, 50);
    gsay_option(196, 272, Node025, 50);
    gsay_option(196, 273, Node026, 50);
    gsay_option(196, 274, Node028, 50);
    gsay_option(196, 275, Node029, 50);
    gsay_option(196, 276, Node010, 50);
    gsay_option(196, 277, Node999, 50);
end

procedure Node028
begin
    gsay_reply(196, 280);
    gsay_option(196, 281, Node024, 50);
    gsay_option(196, 282, Node025, 50);
    gsay_option(196, 283, Node026, 50);
    gsay_option(196, 284, Node027, 50);
    gsay_option(196, 285, Node029, 50);
    gsay_option(196, 286, Node010, 50);
    gsay_option(196, 287, Node999, 50);
end

procedure Node029
begin
    gsay_reply(196, 290);
    gsay_option(196, 291, Node024, 50);
    gsay_option(196, 292, Node025, 50);
    gsay_option(196, 293, Node026, 50);
    gsay_option(196, 294, Node027, 50);
    gsay_option(196, 295, Node028, 50);
    gsay_option(196, 296, Node010, 50);
    gsay_option(196, 297, Node999, 50);
end

procedure Node030
begin
    gsay_reply(196, 300);
    if ((get_critter_stat(dude_obj, 34) == 1) and (get_critter_stat(dude_obj, 3) < 10)) then begin
        gsay_option(196, 301, Node033, 50);
    end
    if ((get_critter_stat(dude_obj, 34) == 1) and (get_critter_stat(dude_obj, 3) == 10)) then begin
        gsay_option(196, 302, Node034, 50);
    end
    if ((get_critter_stat(dude_obj, 34) == 0) and (get_critter_stat(dude_obj, 3) < 10)) then begin
        gsay_option(196, 303, Node031, 50);
    end
    if ((get_critter_stat(dude_obj, 34) == 0) and (get_critter_stat(dude_obj, 3) == 10)) then begin
        gsay_option(196, 304, Node032, 50);
    end
end

procedure Node031
begin
    gsay_reply(196, 310);
    gsay_option(196, 311, Node010, 50);
    gsay_option(196, 312, Node999, 50);
end

procedure Node032
begin
    gsay_reply(196, 320);
    gsay_option(196, 321, Node999, 50);
end

procedure Node033
begin
    gsay_reply(196, 330);
    gsay_option(196, 331, Node035, 50);
    gsay_option(196, 332, Node010, 50);
    gsay_option(196, 333, Node999, 50);
end

procedure Node034
begin
    set_local_var(9, 1);
    gsay_reply(196, 340);
    gsay_option(196, 341, Node035, 50);
    gsay_option(196, 342, Node010, 50);
    gsay_option(196, 343, Node999, 50);
end

procedure Node035
begin
    gsay_reply(196, 350);
    if (global_var(285) == 3) then begin
        gsay_option(196, 351, Node036, 50);
    end
    else begin
        gsay_option(196, 352, Node037, 50);
    end
end

procedure Node036
begin
    if (global_var(153) < 2) then begin
        set_global_var(153, 2);
        give_exp_points(floor(1035 / 5) + (get_critter_stat(dude_obj, 4) * floor(1035 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1035 / 30)) + (floor(1035 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(1035 / 5) + (get_critter_stat(dude_obj, 4) * floor(1035 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1035 / 30)) + (floor(1035 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        add_obj_to_inven(dude_obj, create_object_sid(185, 1, 2, -1));
    end
    gsay_reply(196, 360);
    gsay_option(196, 361, Node010, 50);
    gsay_option(196, 362, Node999, 50);
end

procedure Node036a
begin
    if (global_var(153) == 0) then begin
        set_global_var(153, 1);
    end
    call Node010();
end

procedure Node037
begin
    gsay_reply(196, 370);
    gsay_option(196, 371, Node036a, 50);
    gsay_option(196, 372, Node999, 50);
end

procedure Node038
begin
    gsay_reply(196, 380);
    gsay_option(196, 381, Node039, 50);
    gsay_option(196, 382, Node999, 50);
end

procedure Node039
begin
    gsay_reply(196, 390);
    gsay_option(196, 391, Node041, 50);
    gsay_option(196, 392, Node040, 50);
end

procedure Node040
begin
    gsay_reply(196, 400);
    gsay_option(196, 401, Node039, 50);
    gsay_option(196, 402, Node999, 50);
end

procedure Node041
begin
    gsay_reply(196, 410);
    gsay_option(196, 411, Node044, 50);
    gsay_option(196, 412, Node043, 50);
    gsay_option(196, 413, Node043, 50);
    gsay_option(196, 414, Node043, 50);
    gsay_option(196, 415, Node042, 50);
end

procedure Node042
begin
    gsay_reply(196, 420);
    gsay_option(196, 421, Node039, 50);
    gsay_option(196, 422, Node999, 50);
end

procedure Node043
begin
    gsay_reply(196, 430);
    gsay_option(196, 431, Node041, 50);
    gsay_option(196, 432, Node042, 50);
end

procedure Node044
begin
    gsay_reply(196, 440);
    gsay_option(196, 441, Node047, 50);
    gsay_option(196, 442, Node045, 50);
    gsay_option(196, 443, Node047, 50);
    gsay_option(196, 444, Node047, 50);
    gsay_option(196, 445, Node045, 50);
    gsay_option(196, 446, Node043, 50);
    gsay_option(196, 447, Node043, 50);
    gsay_option(196, 448, Node043, 50);
    gsay_option(196, 449, Node042, 50);
end

procedure Node045
begin
    gsay_reply(196, 450);
    gsay_option(196, 451, Node047, 50);
    gsay_option(196, 452, Node046, 50);
    gsay_option(196, 453, Node047, 50);
    gsay_option(196, 454, Node047, 50);
    gsay_option(196, 455, Node046, 50);
    gsay_option(196, 456, Node043, 50);
    gsay_option(196, 457, Node043, 50);
    gsay_option(196, 458, Node043, 50);
    gsay_option(196, 459, Node042, 50);
end

procedure Node046
begin
    gsay_reply(196, 460);
    gsay_option(196, 461, Node047, 50);
    gsay_option(196, 462, Node045, 50);
    gsay_option(196, 463, Node047, 50);
    gsay_option(196, 464, Node047, 50);
    gsay_option(196, 465, Node045, 50);
    gsay_option(196, 466, Node043, 50);
    gsay_option(196, 467, Node043, 50);
    gsay_option(196, 468, Node043, 50);
    gsay_option(196, 469, Node042, 50);
end

procedure Node047
begin
    gsay_reply(196, 470);
    gsay_option(196, 471, Node048, 50);
    gsay_option(196, 472, Node048, 50);
    gsay_option(196, 473, Node048, 50);
    gsay_option(196, 474, Node048, 50);
    gsay_option(196, 475, Node048, 50);
    gsay_option(196, 476, Node050, 50);
    gsay_option(196, 477, Node043, 50);
    gsay_option(196, 478, Node043, 50);
    gsay_option(196, 479, Node042, 50);
end

procedure Node048
begin
    gsay_reply(196, 480);
    gsay_option(196, 481, Node049, 50);
    gsay_option(196, 482, Node049, 50);
    gsay_option(196, 483, Node049, 50);
    gsay_option(196, 484, Node049, 50);
    gsay_option(196, 485, Node049, 50);
    gsay_option(196, 486, Node050, 50);
    gsay_option(196, 487, Node043, 50);
    gsay_option(196, 488, Node043, 50);
    gsay_option(196, 489, Node042, 50);
end

procedure Node049
begin
    gsay_reply(196, 490);
    gsay_option(196, 491, Node048, 50);
    gsay_option(196, 492, Node048, 50);
    gsay_option(196, 493, Node048, 50);
    gsay_option(196, 494, Node048, 50);
    gsay_option(196, 495, Node048, 50);
    gsay_option(196, 496, Node050, 50);
    gsay_option(196, 497, Node043, 50);
    gsay_option(196, 498, Node043, 50);
    gsay_option(196, 499, Node042, 50);
end

procedure Node050
begin
    gsay_reply(196, 500);
    gsay_option(196, 501, Node051, 50);
    gsay_option(196, 502, Node053, 50);
    gsay_option(196, 503, Node051, 50);
    gsay_option(196, 504, Node051, 50);
    gsay_option(196, 505, Node053, 50);
    gsay_option(196, 506, Node043, 50);
    gsay_option(196, 507, Node043, 50);
    gsay_option(196, 508, Node042, 50);
end

procedure Node051
begin
    gsay_reply(196, 510);
    gsay_option(196, 511, Node052, 50);
    gsay_option(196, 512, Node053, 50);
    gsay_option(196, 513, Node052, 50);
    gsay_option(196, 514, Node052, 50);
    gsay_option(196, 515, Node053, 50);
    gsay_option(196, 516, Node043, 50);
    gsay_option(196, 517, Node043, 50);
    gsay_option(196, 518, Node042, 50);
end

procedure Node052
begin
    gsay_reply(196, 520);
    gsay_option(196, 521, Node051, 50);
    gsay_option(196, 522, Node053, 50);
    gsay_option(196, 523, Node051, 50);
    gsay_option(196, 524, Node051, 50);
    gsay_option(196, 525, Node053, 50);
    gsay_option(196, 526, Node043, 50);
    gsay_option(196, 527, Node043, 50);
    gsay_option(196, 528, Node042, 50);
end

procedure Node053
begin
    gsay_reply(196, 530);
    gsay_option(196, 531, Node054, 50);
    gsay_option(196, 532, Node054, 50);
    gsay_option(196, 533, Node054, 50);
    gsay_option(196, 534, Node054, 50);
    gsay_option(196, 535, Node054, 50);
    gsay_option(196, 536, Node056, 50);
    gsay_option(196, 537, Node043, 50);
    gsay_option(196, 538, Node042, 50);
end

procedure Node054
begin
    gsay_reply(196, 540);
    gsay_option(196, 541, Node055, 50);
    gsay_option(196, 542, Node055, 50);
    gsay_option(196, 543, Node055, 50);
    gsay_option(196, 544, Node055, 50);
    gsay_option(196, 545, Node055, 50);
    gsay_option(196, 546, Node056, 50);
    gsay_option(196, 547, Node043, 50);
    gsay_option(196, 548, Node042, 50);
end

procedure Node055
begin
    gsay_reply(196, 550);
    gsay_option(196, 551, Node054, 50);
    gsay_option(196, 552, Node054, 50);
    gsay_option(196, 553, Node054, 50);
    gsay_option(196, 554, Node054, 50);
    gsay_option(196, 555, Node054, 50);
    gsay_option(196, 556, Node056, 50);
    gsay_option(196, 557, Node043, 50);
    gsay_option(196, 558, Node042, 50);
end

procedure Node056
begin
    gsay_reply(196, 560);
    gsay_option(196, 561, Node059, 50);
    gsay_option(196, 562, Node057, 50);
    gsay_option(196, 563, Node059, 50);
    gsay_option(196, 564, Node057, 50);
    gsay_option(196, 565, Node057, 50);
    gsay_option(196, 566, Node043, 50);
    gsay_option(196, 567, Node042, 50);
end

procedure Node057
begin
    gsay_reply(196, 570);
    gsay_option(196, 571, Node059, 50);
    gsay_option(196, 572, Node058, 50);
    gsay_option(196, 573, Node059, 50);
    gsay_option(196, 574, Node058, 50);
    gsay_option(196, 575, Node058, 50);
    gsay_option(196, 576, Node043, 50);
    gsay_option(196, 577, Node042, 50);
end

procedure Node058
begin
    gsay_reply(196, 580);
    gsay_option(196, 581, Node059, 50);
    gsay_option(196, 582, Node057, 50);
    gsay_option(196, 583, Node059, 50);
    gsay_option(196, 584, Node057, 50);
    gsay_option(196, 585, Node057, 50);
    gsay_option(196, 586, Node043, 50);
    gsay_option(196, 587, Node042, 50);
end

procedure Node059
begin
    gsay_reply(196, 590);
    gsay_option(196, 591, Node060, 50);
    gsay_option(196, 592, Node060, 50);
    gsay_option(196, 593, Node060, 50);
    gsay_option(196, 594, Node060, 50);
    gsay_option(196, 595, Node060, 50);
    gsay_option(196, 596, Node062, 50);
    gsay_option(196, 597, Node042, 50);
end

procedure Node060
begin
    gsay_reply(196, 600);
    gsay_option(196, 601, Node061, 50);
    gsay_option(196, 602, Node061, 50);
    gsay_option(196, 603, Node061, 50);
    gsay_option(196, 604, Node061, 50);
    gsay_option(196, 605, Node061, 50);
    gsay_option(196, 606, Node062, 50);
    gsay_option(196, 607, Node042, 50);
end

procedure Node061
begin
    gsay_reply(196, 610);
    gsay_option(196, 611, Node060, 50);
    gsay_option(196, 612, Node060, 50);
    gsay_option(196, 613, Node060, 50);
    gsay_option(196, 614, Node060, 50);
    gsay_option(196, 615, Node060, 50);
    gsay_option(196, 616, Node062, 50);
    gsay_option(196, 617, Node042, 50);
end

procedure Node062
begin
    gsay_reply(196, 620);
    gsay_option(196, 621, Node063, 50);
    gsay_option(196, 622, Node065, 50);
    gsay_option(196, 623, Node063, 50);
    gsay_option(196, 624, Node063, 50);
    gsay_option(196, 625, Node065, 50);
    gsay_option(196, 626, Node067, 50);
end

procedure Node063
begin
    gsay_reply(196, 630);
    gsay_option(196, 631, Node064, 50);
    gsay_option(196, 632, Node065, 50);
    gsay_option(196, 633, Node064, 50);
    gsay_option(196, 634, Node064, 50);
    gsay_option(196, 635, Node065, 50);
    gsay_option(196, 636, Node067, 50);
end

procedure Node064
begin
    gsay_reply(196, 640);
    gsay_option(196, 641, Node062, 50);
    gsay_option(196, 642, Node065, 50);
    gsay_option(196, 643, Node062, 50);
    gsay_option(196, 644, Node062, 50);
    gsay_option(196, 645, Node065, 50);
    gsay_option(196, 646, Node067, 50);
end

procedure Node065
begin
    gsay_reply(196, 650);
    gsay_option(196, 651, Node066, 50);
end

procedure Node066
begin
    if (global_var(153) < 2) then begin
        set_global_var(153, 2);
        give_exp_points(floor(1035 / 5) + (get_critter_stat(dude_obj, 4) * floor(1035 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1035 / 30)) + (floor(1035 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(1035 / 5) + (get_critter_stat(dude_obj, 4) * floor(1035 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1035 / 30)) + (floor(1035 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        add_obj_to_inven(dude_obj, create_object_sid(185, 1, 2, -1));
        if (obj_carrying_pid_obj(dude_obj, 342)) then begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 342));
        end
    end
    gsay_reply(196, 660);
    gsay_option(196, 661, Node999, 50);
end

procedure Node067
begin
    gsay_reply(196, 670);
    gsay_option(196, 671, NodeDie, 50);
end

procedure Node068
begin
    gsay_reply(196, 680);
    gsay_option(196, 681, Node010, 50);
    gsay_option(196, 682, Node069, 50);
    gsay_option(196, 683, Node999, 50);
end

procedure Node069
begin
    fadeOut(800);
    fadeIn(800);
    gsay_reply(196, 690);
    gsay_option(196, 691, Node010, 50);
    gsay_option(196, 692, Node999, 50);
end

procedure Node070
begin
    set_local_var(8, 1);
    gsay_reply(196, 700);
    if (global_var(0) < -250) then begin
        gsay_option(196, 701, Node071, 50);
    end
    if (global_var(0) < -150) then begin
        gsay_option(196, 702, Node072, 50);
    end
    gsay_option(196, 703, Node073, 50);
    gsay_option(196, 704, Node999, 50);
end

procedure Node071
begin
    set_global_var(333, 1);
    gsay_reply(196, 710);
    gsay_option(196, 711, NodeStandUp, 50);
end

procedure Node072
begin
    set_global_var(333, 1);
    gsay_reply(196, 720);
    gsay_option(196, 721, NodeStandUp, 50);
end

procedure Node073
begin
    gsay_reply(196, 730);
    if (global_var(0) < -250) then begin
        gsay_option(196, 731, Node071, 50);
    end
    if (global_var(0) < -150) then begin
        gsay_option(196, 732, Node072, 50);
    end
    gsay_option(196, 733, Node074, 50);
end

procedure Node074
begin
    gsay_reply(196, 740);
    gsay_option(196, 741, NodeStandUp, 50);
end

procedure NodeDie
begin
    set_global_var(118, global_var(118) bwor 32);
    if (global_var(153) == 1) then begin
        set_global_var(153, 2);
    end
    critter_heal(self_obj, -100);
    display_msg(message_str(196, 742));
end

procedure NodeStandUp
begin
    already_talk := 0;
    add_timer_event(self_obj, 6, 3);
    fadeOut(600);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure Node998a
begin
    already_talk := 0;
    critter_add_trait(self_obj, 1, 6, 37);
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

