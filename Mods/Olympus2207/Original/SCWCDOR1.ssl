variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable critter_source;
variable used_item;
variable level_modifikator;
variable sucsess_modifikator;

procedure start;
procedure description_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure open_with_skill;
procedure study;
procedure vzlom;
procedure map_update_p_proc;
procedure KA_BOOM;


procedure start
begin
    if (local_var(3) == 0) then begin
        set_local_var(3, 1);
        set_local_var(0, 1);
        set_local_var(1, random(20, 30));
        set_local_var(7, random(40, 60));
    end
end

procedure description_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure damage_p_proc
begin
    if (metarule(49, target_obj) == 6) then begin
        set_local_var(7, local_var(7) - fixed_param);
        if ((local_var(7) <= 0) and (local_var(4) == 0)) then begin
            set_local_var(0, 1);
            obj_unlock(self_obj);
            if (not(obj_is_open(self_obj))) then begin
                obj_open(self_obj);
                display_msg(message_str(10, random(80, 81)));
            end
            else begin
                display_msg(message_str(10, random(36, 37)));
            end
            set_local_var(4, 1);
        end
        else begin
            if (local_var(4) == 0) then begin
                display_msg(message_str(10, 89));
            end
        end
    end
end

procedure use_p_proc
begin
    if (source_obj == dude_obj) then begin
    end
    else begin
        z_critter_search := 16777217;
        critter_is_detected := 0;
        while ((z_critter_search <= 16777700) and (critter_is_detected == 0)) do begin
            if ((tile_contains_obj_pid(26358, elevation(self_obj), z_critter_search) == 1) and (critter_state(tile_contains_pid_obj(26358, elevation(self_obj), z_critter_search)) == 0)) then begin
                critter_is_detected := 1;
                detected_critter := tile_contains_pid_obj(26358, elevation(self_obj), z_critter_search);
                z_critter_search := 16777217;
            end
            else begin
                z_critter_search := z_critter_search + 1;
            end
        end
        critter_source := source_obj;
        if ((local_var(4) == 1) and (source_obj == dude_obj)) then begin
            script_overrides;
            display_msg(message_str(10, random(96, 99)));
        end
        else begin
            if ((local_var(5) == 1) and (source_obj != dude_obj)) then begin
                script_overrides;
                call KA_BOOM();
            end
            else begin
                if (local_var(0) == 0) then begin
                    script_overrides;
                    if (source_obj == dude_obj) then begin
                        display_msg(message_str(10, random(110, 113)));
                    end
                    else begin
                        float_msg(source_obj, message_str(10, random(40, 43)), 12);
                        animate_move_obj_to_tile(critter_source, tile_num_in_direction(tile_num(critter_source), (has_trait(1, critter_source, 10) + 3) % 6, random(2, 6)), 0 bwor 16);
                    end
                end
            end
        end
        if ((critter_is_detected != 0) and (tile_num(source_obj) != 22960)) then begin
            script_overrides;
            float_msg(detected_critter, message_str(10, random(50, 55)), 2);
            add_timer_event(self_obj, 14, 1);
            animate_move_obj_to_tile(critter_source, tile_num_in_direction(tile_num(critter_source), (has_trait(1, critter_source, 10) + 3) % 6, 4), 0 bwor 16);
        end
        else begin
            add_timer_event(self_obj, 20, 1);
        end
    end
end

procedure use_obj_on_p_proc
begin
    if (not(obj_is_open(self_obj))) then begin
        script_overrides;
        used_item := obj_pid(obj_being_used_with);
        if (local_var(0) == 0) then begin
            if (used_item == 55) then begin
                level_modifikator := 5;
                sucsess_modifikator := 10;
                call open_with_skill();
            end
            if (used_item == 56) then begin
                level_modifikator := 15;
                sucsess_modifikator := 25;
                call open_with_skill();
            end
            if (used_item == 104) then begin
                call vzlom();
            end
        end
        if (used_item == 49) then begin
            if (local_var(0) == 0) then begin
                display_msg(message_str(10, 86));
            end
            else begin
                if (local_var(5) == 1) then begin
                    display_msg(message_str(10, 88));
                end
                else begin
                    set_local_var(5, 1);
                    rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 49));
                    display_msg(message_str(10, 87));
                end
            end
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 9) then begin
        script_overrides;
        call open_with_skill();
    end
    if ((action_being_used == 12) and (local_var(0) == 0)) then begin
        script_overrides;
        call study();
    end
    if ((action_being_used == 11) and (local_var(5) == 1)) then begin
        script_overrides;
        set_local_var(5, 0);
        add_obj_to_inven(dude_obj, create_object_sid(49, 1, 2, -1));
        display_msg(message_str(10, 32));
    end
end

procedure map_enter_p_proc
begin
    if (local_var(0) == 0) then begin
        obj_lock(self_obj);
    end
    else begin
        obj_unlock(self_obj);
    end
    if (obj_is_open(self_obj)) then begin
        obj_close(self_obj);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (obj_is_open(self_obj)) then begin
            obj_close(self_obj);
        end
    end
end

procedure open_with_skill
begin
    variable LVar0 := 0;
    LVar0 := random(40, 50);
    if (source_obj != dude_obj) then begin
        if (has_skill(source_obj, 9) >= local_var(1)) then begin
            obj_unlock(self_obj);
            set_local_var(0, 1);
        end
    end
    else begin
        if (local_var(0) == 1) then begin
            if (obj_is_open(self_obj)) then begin
                display_msg(message_str(10, 94));
            end
            else begin
                if (local_var(6) == 1) then begin
                    display_msg(message_str(10, 88));
                end
                else begin
                    set_local_var(0, 0);
                    set_local_var(1, random(has_skill(dude_obj, 9) - 10, has_skill(dude_obj, 9) - 1));
                    display_msg(message_str(10, 95));
                    float_msg(self_obj, message_str(10, 119), 9);
                end
            end
        end
        else begin
            if (has_skill(dude_obj, 9) >= (local_var(1) - level_modifikator)) then begin
                if (random(0, 100) < (4 + floor(has_skill(dude_obj, 9) / 2) + (2 * ((2 * get_critter_stat(dude_obj, 5)) - 9)) + (2 * (get_critter_stat(dude_obj, 4) - 5)) + floor(has_skill(dude_obj, 13) / 3) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + sucsess_modifikator)) then begin
                    obj_unlock(self_obj);
                    float_msg(self_obj, message_str(10, random(100, 109)), 9);
                    set_local_var(0, 1);
                    if (local_var(2) == 0) then begin
                        set_local_var(2, 1);
                        give_exp_points(floor(LVar0 / 5) + (get_critter_stat(dude_obj, 4) * floor(LVar0 / 12)) + (get_critter_stat(dude_obj, 6) * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
                        display_msg(message_str(10, random(140, 143)) + (floor(LVar0 / 5) + (get_critter_stat(dude_obj, 4) * floor(LVar0 / 12)) + (get_critter_stat(dude_obj, 6) * floor(LVar0 / 30)) + (floor(LVar0 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
                    end
                end
                else begin
                    if (random(1, 100) <= (random(15, 25) - (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) then begin
                        display_msg(message_str(10, random(90, 93)));
                        jam_lock(self_obj);
                    end
                    else begin
                        display_msg(message_str(10, 114));
                    end
                end
            end
            else begin
                display_msg(message_str(10, random(120, 123)));
            end
        end
    end
    level_modifikator := 0;
    sucsess_modifikator := 0;
end

procedure study
begin
    if ((get_critter_stat(dude_obj, 4) >= 7) or ((has_skill(dude_obj, 13) + floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 2)) >= local_var(1))) then begin
        display_msg(message_str(10, 124) + local_var(1) + message_str(10, 125));
    end
    else begin
        display_msg(message_str(10, 126));
    end
end

procedure vzlom
begin
    variable LVar0 := 0;
    LVar0 := random(15, 22) - get_critter_stat(dude_obj, 2);
    if (get_critter_stat(dude_obj, 0) >= 7) then begin
        set_local_var(0, 1);
        obj_unlock(self_obj);
        set_local_var(6, 1);
        display_msg(message_str(10, 82));
        float_msg(self_obj, message_str(10, random(106, 108)), 9);
    end
    else begin
        display_msg(message_str(10, 128));
        if (random(1, 100) < (30 - (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) then begin
            if (get_critter_stat(dude_obj, 35) <= LVar0) then begin
                LVar0 := get_critter_stat(dude_obj, 35) - 1;
                if (LVar0 > 0) then begin
                    critter_dmg(dude_obj, LVar0, 0 bwor 256);
                end
            end
            else begin
                critter_dmg(dude_obj, LVar0, 0 bwor 256);
            end
            display_msg(message_str(10, random(83, 85)));
        end
    end
end

procedure map_update_p_proc
begin
    if (local_var(0) == 0) then begin
        obj_lock(self_obj);
    end
    else begin
        obj_unlock(self_obj);
    end
end

procedure KA_BOOM
begin
    set_local_var(5, 0);
    explosion(tile_num(self_obj), elevation(self_obj), random(80, 10) + ((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) * 2));
end

