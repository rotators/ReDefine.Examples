variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable max_distance;
variable animation_is_called;
variable floater_is_called;
variable distance_to_walk;
variable time_to_work;
variable time_to_repose;
variable work_tile_chois;
variable repose_tile_chois;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Healing;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(40, 60));
        set_local_var(5, random(0, 100));
        set_local_var(6, random(-10, 20));
        critter_add_trait(self_obj, 1, 6, 1);
        critter_add_trait(self_obj, 1, 5, 3);
        max_distance := 12;
        if (random(0, 100) <= 10) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(217, 1, 2, -1), random(1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(238, 1, 2, -1), random(1, 2));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(220, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(108, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(106, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(65, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(39, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(411, 1, 2, -1), random(1, 4));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(412, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(426, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(423, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(420, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(428, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(431, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(415, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(245, 1, 2, -1));
        end
    end
end

procedure critter_p_proc
begin
    if (animation_is_called == 0) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(50, 120), 1);
    end
    if (floater_is_called == 0) then begin
        floater_is_called := 1;
        add_timer_event(self_obj, random(40, 90), 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(47) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(491, 3));
    end
    else begin
        display_msg(message_str(491, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(491, 1));
    end
    else begin
        display_msg(message_str(491, 2));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
    if (local_var(7) == 0) then begin
        script_overrides;
    end
end

procedure talk_p_proc
begin
    if (local_var(7) == 0) then begin
        float_msg(self_obj, message_str(491, random(10, 14)), 0);
    end
    else begin
        if (not(anim_busy(self_obj))) then begin
            if (not(anim_busy(self_obj))) then begin
                anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
            end
        end
        float_msg(self_obj, message_str(491, random(15, 19)), 3);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((47 == 50) or (47 == 59)) then begin
            set_global_var(47, global_var(47) - 3);
        end
        else begin
            set_global_var(47, global_var(47) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if ((local_var(7) == 0) and ((action_being_used == 7) or (action_being_used == 6))) then begin
        script_overrides;
        fadeOut(600);
        game_time_advance(game_ticks(60 * random(20, 40)));
        fadeIn(600);
        if (random(0, 100) <= (has_skill(dude_obj, 6) + has_skill(dude_obj, 7))) then begin
            display_msg(message_str(491, 6));
            call Healing();
        end
        else begin
            display_msg(message_str(491, 5));
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
    if (local_var(7) == 0) then begin
        if ((obj_pid(obj_being_used_with) == 222) or (obj_pid(obj_being_used_with) == 223)) then begin
            call Healing();
        end
        else begin
            display_msg(message_str(10, random(60, 69)));
        end
    end
    else begin
        script_overrides;
        display_msg(message_str(491, 4));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (not(metarule(22, 0)) == 1) then begin
        if ((global_var(121) > 0) and (global_var(121) < 10)) then begin
            if ((local_var(7) == 1) and (elevation(self_obj) != 2)) then begin
                move_to(self_obj, tile_num(self_obj), 2);
            end
            if ((local_var(7) == 0) and (elevation(self_obj) != 0)) then begin
                move_to(self_obj, tile_num(self_obj), 0);
            end
        end
        else begin
            if (elevation(self_obj) != 2) then begin
                move_to(self_obj, tile_num(self_obj), 2);
            end
        end
        if (local_var(7) == 0) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 48, -1);
            reg_anim_func(3, 0);
            critter_injure(self_obj, 2);
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and (animation_is_called == 1)) then begin
        if (not(combat_is_initialized) and (elevation(self_obj) == 0) and (local_var(7) == 1)) then begin
            if (tile_distance(tile_num(self_obj), local_var(3)) >= max_distance) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), local_var(3)), random(max_distance, max_distance + 4)), 0);
            end
            else begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(max_distance / 4, max_distance)), 0);
            end
        end
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and (animation_is_called == 1)) then begin
        if (not(combat_is_initialized) and (local_var(7) == 0)) then begin
            float_msg(self_obj, message_str(491, random(10, 14)), 0);
        end
        floater_is_called := 0;
    end
    if (fixed_param == 3) then begin
        if (not(combat_is_initialized) and (local_var(7) == 1)) then begin
            if ((art_anim(obj_art_fid(self_obj)) == 48) or (art_anim(obj_art_fid(self_obj)) == 49)) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                reg_anim_animate(self_obj, 37, -1);
                reg_anim_obj_move_to_tile(self_obj, tile_num(self_obj), -1);
                reg_anim_func(3, 0);
                float_msg(self_obj, message_str(491, random(15, 19)), 3);
            end
        end
    end
end

procedure Healing
begin
    if (local_var(7) == 0) then begin
        critter_injure(self_obj, 2 bwor 8388608);
        set_local_var(7, 1);
        set_global_var(47, global_var(47) + 1);
        set_global_var(0, global_var(0) + 1);
        give_exp_points(floor(20 / 5) + (get_critter_stat(dude_obj, 4) * floor(20 / 12)) + (get_critter_stat(dude_obj, 6) * floor(20 / 30)) + (floor(20 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(20 / 5) + (get_critter_stat(dude_obj, 4) * floor(20 / 12)) + (get_critter_stat(dude_obj, 6) * floor(20 / 30)) + (floor(20 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        set_global_var(121, global_var(121) + 1);
        add_timer_event(self_obj, 8, 3);
    end
end

