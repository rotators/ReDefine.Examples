variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node100;
procedure Node101;
procedure Node102;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(30, 40));
        set_local_var(5, random(50, 60));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, 1, 6, 38);
        critter_add_trait(self_obj, 1, 5, 33);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(2, 5), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(59) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(519, 2));
    end
    else begin
        display_msg(message_str(519, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(519, 1));
    end
    else begin
        display_msg(message_str(519, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if (global_var(432) == 2) then begin
        float_msg(self_obj, message_str(519, random(42, 43)), 0);
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 5)), 1);
    end
    else begin
        if ((global_var(432) == 1) and (global_var(422) == 1)) then begin
            float_msg(self_obj, message_str(519, random(40, 41)), 0);
        end
        else begin
            start_gdialog(519, self_obj, -1, -1, -1);
            gsay_start;
            if (global_var(422) == 2) then begin
                call Node100();
            end
            else begin
                if (local_var(7) == 0) then begin
                    call Node001();
                end
                else begin
                    call Node010();
                end
            end
            gsay_end;
            end_dialogue;
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((59 == 50) or (59 == 59)) then begin
            set_global_var(59, global_var(59) - 3);
        end
        else begin
            set_global_var(59, global_var(59) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if ((global_var(432) == 0) and (map_var(0) != 0)) then begin
            if ((tile_distance(tile_num(self_obj), tile_num(map_var(0))) > 7) and (anim_busy(self_obj) == 0)) then begin
                animate_move_obj_to_tile(self_obj, tile_num(map_var(0)), 1);
                float_msg(self_obj, message_str(519, random(7, 8)), 0);
            end
            if ((tile_distance(tile_num(self_obj), tile_num(map_var(0))) > 3) and (anim_busy(self_obj) == 0)) then begin
                animate_move_obj_to_tile(self_obj, tile_num(map_var(0)), 0);
            end
            if ((tile_distance(tile_num(self_obj), tile_num(map_var(0))) < 2) and (local_var(9) == 0)) then begin
                set_local_var(9, 1);
                float_msg(map_var(0), message_str(519, 9), 0);
            end
            if ((tile_distance(tile_num(self_obj), tile_num(map_var(0))) > 2) and (local_var(9) == 1)) then begin
                set_local_var(9, 0);
            end
        end
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
end

procedure Node001
begin
    set_local_var(7, 1);
    already_talk := 1;
    gsay_reply(519, 10);
    gsay_option(519, 11, Node002, 50);
    gsay_option(519, 12, Node004, 50);
    gsay_option(519, 13, Node004, 50);
end

procedure Node002
begin
    if (random(0, 100) <= 35) then begin
        move_to(map_var(0), 27507, elevation(self_obj));
    end
    else begin
        if (random(0, 100) <= 50) then begin
            move_to(map_var(0), 29517, elevation(self_obj));
        end
        else begin
            move_to(map_var(0), 29310, elevation(self_obj));
        end
    end
    gsay_reply(519, 20);
    gsay_option(519, 21, Node003, 50);
    gsay_option(519, 22, Node010, 50);
    if (global_var(422) == 1) then begin
        gsay_option(519, 23, Node011, 50);
    end
end

procedure Node003
begin
    gsay_reply(519, 30);
    gsay_option(519, 31, Node999, 50);
end

procedure Node004
begin
    if (random(0, 100) <= 35) then begin
        move_to(map_var(0), 27507, elevation(self_obj));
    end
    else begin
        if (random(0, 100) <= 50) then begin
            move_to(map_var(0), 29517, elevation(self_obj));
        end
        else begin
            move_to(map_var(0), 29310, elevation(self_obj));
        end
    end
    gsay_reply(519, 20);
    gsay_option(519, 21, Node003, 50);
    gsay_option(519, 22, Node010, 50);
    if (global_var(422) == 1) then begin
        gsay_option(519, 23, Node011, 50);
    end
end

procedure Node010
begin
    if (random(0, 100) <= 35) then begin
        move_to(map_var(0), 27507, elevation(self_obj));
    end
    else begin
        if (random(0, 100) <= 50) then begin
            move_to(map_var(0), 29517, elevation(self_obj));
        end
        else begin
            if (tile_num(map_var(0)) != 25319) then begin
                move_to(map_var(0), 25319, elevation(self_obj));
            end
            else begin
                move_to(map_var(0), 29310, elevation(self_obj));
            end
        end
    end
    if (already_talk == 0) then begin
        already_talk := 1;
        gsay_reply(519, 100);
    end
    else begin
        gsay_reply(519, 101);
    end
    if (global_var(422) == 1) then begin
        gsay_option(519, 102, Node011, 50);
    end
    gsay_option(519, 103, Node044, 50);
    gsay_option(519, 104, Node045, 50);
    gsay_option(519, 105, Node045, 50);
    gsay_option(519, 106, Node045, 50);
    if (already_talk == 0) then begin
        gsay_option(519, 107, Node999, 50);
    end
    gsay_option(519, 108, Node999, 50);
end

procedure Node011
begin
    gsay_reply(519, 111);
    if ((global_var(285) == 2) and (has_skill(dude_obj, 14) >= 80)) then begin
        gsay_option(519, 112, Node042, 50);
    end
    if ((has_skill(dude_obj, 14) >= 60) and (local_var(10) == 0)) then begin
        gsay_option(519, 113, Node021, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 389) and (has_skill(dude_obj, 14) >= 70)) then begin
        gsay_option(519, 114, Node016, 50);
    end
    if (global_var(431) == 1) then begin
        gsay_option(519, 115, Node013, 50);
    end
    gsay_option(519, 116, Node012, 50);
end

procedure Node012
begin
    gsay_reply(519, 120);
    gsay_option(519, 121, Node999, 50);
end

procedure Node013
begin
    gsay_reply(519, 131);
    gsay_option(519, 132, Node014, 50);
end

procedure Node014
begin
    gsay_reply(519, 140);
    gsay_option(519, 141, Node015, 50);
end

procedure Node015
begin
    set_global_var(432, 1);
    gsay_reply(519, 150);
    gsay_option(519, 151, Node999, 50);
end

procedure Node016
begin
    rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 389));
    gsay_reply(519, 160);
    gsay_option(519, 161, Node017, 50);
end

procedure Node017
begin
    fadeOut(500);
    fadeIn(500);
    gsay_reply(519, 170);
    gsay_option(519, 171, Node018, 50);
end

procedure Node018
begin
    gsay_reply(519, 180);
    gsay_option(519, 181, Node019, 50);
end

procedure Node019
begin
    gsay_reply(519, 190);
    gsay_option(519, 191, Node020, 50);
end

procedure Node020
begin
    gsay_reply(519, 200);
    gsay_option(519, 201, Node015, 50);
end

procedure Node021
begin
    gsay_reply(519, 210);
    gsay_option(519, 211, Node022, 50);
    gsay_option(519, 212, Node023, 50);
    gsay_option(519, 213, Node024, 50);
end

procedure Node022
begin
    gsay_reply(519, 220);
    gsay_option(519, 221, Node023, 50);
    gsay_option(519, 222, Node026, 50);
end

procedure Node023
begin
    gsay_reply(519, 230);
    gsay_option(519, 231, Node012, 50);
end

procedure Node024
begin
    gsay_reply(519, 240);
    gsay_option(519, 241, Node025, 50);
end

procedure Node025
begin
    gsay_reply(519, 250);
    gsay_option(519, 251, Node012, 50);
end

procedure Node026
begin
    gsay_reply(519, 260);
    gsay_option(519, 261, Node027, 50);
end

procedure Node027
begin
    gsay_reply(519, 270);
    gsay_option(519, 271, Node028, 50);
end

procedure Node028
begin
    gsay_reply(519, 280);
    gsay_option(519, 281, Node031, 50);
    gsay_option(519, 282, Node030, 50);
    gsay_option(519, 283, Node029, 50);
end

procedure Node029
begin
    gsay_reply(519, 290);
    gsay_option(519, 291, Node012, 50);
end

procedure Node030
begin
    gsay_reply(519, 300);
    gsay_option(519, 301, Node012, 50);
end

procedure Node031
begin
    gsay_reply(519, 310);
    gsay_option(519, 311, Node033, 50);
    gsay_option(519, 312, Node032, 50);
end

procedure Node032
begin
    gsay_reply(519, 320);
    gsay_option(519, 322, Node012, 50);
end

procedure Node033
begin
    gsay_reply(519, 330);
    gsay_option(519, 331, Node035, 50);
    gsay_option(519, 332, Node034, 50);
end

procedure Node034
begin
    gsay_reply(519, 340);
    gsay_option(519, 341, Node012, 50);
end

procedure Node035
begin
    gsay_reply(519, 350);
    gsay_option(519, 351, Node036, 50);
end

procedure Node036
begin
    gsay_reply(519, 360);
    gsay_option(519, 361, Node041, 50);
    gsay_option(519, 362, Node038, 50);
    gsay_option(519, 363, Node037, 50);
end

procedure Node037
begin
    gsay_reply(519, 370);
    gsay_option(519, 371, Node012, 50);
end

procedure Node038
begin
    gsay_reply(519, 380);
    gsay_option(519, 381, Node039, 50);
end

procedure Node039
begin
    gsay_reply(519, 390);
    gsay_option(519, 391, Node040, 50);
end

procedure Node040
begin
    gsay_reply(519, 400);
    gsay_option(519, 401, Node012, 50);
end

procedure Node041
begin
    set_global_var(432, 1);
    gsay_reply(519, 410);
    gsay_option(519, 411, Node999, 50);
end

procedure Node042
begin
    gsay_reply(519, 420);
    gsay_option(519, 421, Node043, 50);
end

procedure Node043
begin
    gsay_reply(519, 430);
    gsay_option(519, 431, Node999, 50);
end

procedure Node044
begin
    gsay_reply(519, 440);
    gsay_option(519, 441, Node010, 50);
    gsay_option(519, 442, Node999, 50);
end

procedure Node045
begin
    gsay_reply(519, 450);
    gsay_option(519, 451, Node010, 50);
    gsay_option(519, 452, Node999, 50);
end

procedure Node100
begin
    set_global_var(432, 2);
    gsay_reply(519, 1001);
    gsay_option(519, 1002, Node101, 50);
end

procedure Node101
begin
    gsay_reply(519, 1010);
    gsay_option(519, 1011, Node999, 50);
    gsay_option(519, 1012, Node102, 50);
end

procedure Node102
begin
    set_global_var(0, global_var(0) + 15);
    gsay_reply(519, 1020);
    gsay_option(519, 1021, Node999, 50);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

