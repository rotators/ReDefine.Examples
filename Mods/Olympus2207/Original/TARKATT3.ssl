variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001x;
procedure Node002x;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure Node055;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(40, 70));
        set_local_var(5, random(50, 80));
        set_local_var(6, random(10, 30));
        critter_add_trait(self_obj, 1, 6, 1);
        critter_add_trait(self_obj, 1, 5, 4);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0) and (local_var(7) != 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(29, 76), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(200, 700), 2);
    end
    if ((local_var(7) == 0) and (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 2) and (elevation(self_obj) == 0)) then begin
        if (game_ui_is_disabled) then begin
            game_ui_enable;
        end
        anim(dude_obj, 1000, 0);
        dialogue_system_enter;
    end
    if ((local_var(10) == 1) and (elevation(self_obj) == 0)) then begin
        move_to(self_obj, 1, 1);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(47) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(82, 2));
    end
    else begin
        display_msg(message_str(82, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(82, 1));
    end
    else begin
        display_msg(message_str(82, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if ((global_var(6) == 2) and (local_var(7) == 1)) then begin
        float_msg(self_obj, message_str(82, random(1030, 1033)), 0);
    end
    else begin
        if ((global_var(6) == 3) and (local_var(9) == 1)) then begin
            if (random(0, 100) <= 50) then begin
                float_msg(self_obj, message_str(82, obj_name(dude_obj) + message_str(82, random(1034, 1036))), 0);
            end
            else begin
                float_msg(self_obj, message_str(82, random(1037, 1039)), 0);
            end
        end
        else begin
            start_gdialog(82, self_obj, -1, -1, -1);
            gsay_start;
            if (local_var(7) == 0) then begin
                call Node001x();
            end
            else begin
                if (local_var(8) == 1) then begin
                    call Node010();
                end
                else begin
                    if (global_var(420) > 1) then begin
                        call Node023();
                    end
                    else begin
                        if ((obj_pid(critter_inven_obj(dude_obj, 0)) == 120) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 121) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 122) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 123) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 124) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 125) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 126) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 127) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 128) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 129) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 391) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 394)) then begin
                            call Node012();
                        end
                        else begin
                            call Node001();
                        end
                    end
                end
            end
            gsay_end;
            end_dialogue;
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((47 == 50) or (47 == 59)) then begin
            set_global_var(47, global_var(47) - 3);
        end
        else begin
            set_global_var(47, global_var(47) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (metarule(14, 0)) then begin
        game_ui_disable;
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_obj_run_to_obj(self_obj, dude_obj, -1);
        reg_anim_func(3, 0);
        add_timer_event(self_obj, 500, 3);
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        if (tile_distance(tile_num(self_obj), local_var(3)) > random(15, 20)) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), local_var(3)), random(random(15, 20) / 2, random(15, 20))), 0);
        end
        else begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(random(15, 20) / 4, random(15, 20) / 2)), 0);
        end
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if ((fixed_param == 3) and game_ui_is_disabled) then begin
        game_ui_enable;
    end
end

procedure Node001x
begin
    set_local_var(7, 1);
    gsay_reply(82, message_str(82, 5) + obj_name(dude_obj) + message_str(82, 6));
    gsay_option(82, 7, Node002x, 50);
    gsay_option(82, 8, Node999, 50);
end

procedure Node002x
begin
    gsay_reply(82, 9);
    gsay_option(82, 8, Node999, 50);
end

procedure Node001
begin
    gsay_reply(82, 10);
    gsay_option(82, 11, Node002, 50);
    if (global_var(68) < 50) then begin
        gsay_option(82, 12, Node002, 50);
    end
end

procedure Node002
begin
    gsay_reply(82, 20);
    gsay_option(82, 21, Node003, 50);
    gsay_option(82, 22, Node004, 50);
    gsay_option(82, 23, Node005, 50);
    gsay_option(82, 24, Node003, 50);
end

procedure Node003
begin
    if (global_var(68) < 50) then begin
        gsay_reply(82, 30);
        gsay_option(82, 32, Node006, 50);
    end
    else begin
        gsay_reply(82, 31);
        gsay_option(82, 33, Node006, 50);
    end
end

procedure Node004
begin
    gsay_reply(82, 40);
    if (global_var(68) < 50) then begin
        gsay_option(82, 41, Node003, 50);
    end
    else begin
        gsay_option(82, 42, Node003, 50);
    end
end

procedure Node005
begin
    gsay_reply(82, 50);
    if (global_var(68) < 50) then begin
        gsay_option(82, 51, Node003, 50);
    end
    else begin
        gsay_option(82, 52, Node003, 50);
    end
end

procedure Node006
begin
    gsay_reply(82, 60);
    gsay_option(82, 61, Node007, 50);
end

procedure Node007
begin
    set_local_var(8, 1);
    gsay_reply(82, 70);
    gsay_option(82, 71, Node010, 50);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        gsay_reply(82, 100);
    end
    else begin
        gsay_reply(82, 101);
    end
    if (global_var(68) >= 50) then begin
        gsay_option(82, 102, Node027, 50);
    end
    gsay_option(82, 103, Node030, 50);
    if ((global_var(69) bwand 1) != 0) then begin
        gsay_option(82, 104, Node035, 50);
    end
    gsay_option(82, 105, Node036, 50);
    gsay_option(82, 106, Node055, 50);
    if (not((global_var(69) bwand 1) != 0)) then begin
        gsay_option(82, 107, Node011, 50);
    end
    gsay_option(82, 108, Node011, 50);
end

procedure Node011
begin
    gsay_reply(82, 110);
    gsay_option(82, 111, Node999, 50);
end

procedure Node012
begin
    set_local_var(8, 1);
    gsay_reply(82, 120);
    if (global_var(68) < 50) then begin
        gsay_option(82, 121, Node013, 50);
        gsay_option(82, 122, Node013, 50);
    end
    gsay_option(82, 123, Node018, 50);
    if (global_var(68) >= 50) then begin
        gsay_option(82, 124, Node013, 50);
        gsay_option(82, 125, Node022, 50);
    end
end

procedure Node013
begin
    gsay_reply(82, 130);
    gsay_option(82, 131, Node014, 50);
    gsay_option(82, 132, Node021, 50);
end

procedure Node014
begin
    gsay_reply(82, 140);
    gsay_option(82, 141, Node015, 50);
end

procedure Node015
begin
    gsay_reply(82, 150);
    gsay_option(82, 151, Node016, 50);
    gsay_option(82, 152, Node016, 50);
    gsay_option(82, 153, Node016, 50);
end

procedure Node016
begin
    gsay_reply(82, 160);
    gsay_option(82, 161, Node017, 50);
    gsay_option(82, 162, Node017, 50);
    gsay_option(82, 163, Node003, 50);
end

procedure Node017
begin
    gsay_reply(82, 170);
    gsay_option(82, 171, Node003, 50);
end

procedure Node018
begin
    gsay_reply(82, 180);
    gsay_option(82, 181, Node019, 50);
end

procedure Node019
begin
    gsay_reply(82, 190);
    gsay_option(82, 191, Node020, 50);
end

procedure Node020
begin
    gsay_reply(82, 200);
    gsay_option(82, 201, Node007, 50);
end

procedure Node021
begin
    gsay_reply(82, 210);
    gsay_option(82, 211, Node014, 50);
    gsay_option(82, 212, Node014, 50);
end

procedure Node022
begin
    gsay_reply(82, 220);
    gsay_option(82, 221, Node018, 50);
end

procedure Node023
begin
    set_local_var(8, 1);
    gsay_reply(82, 230);
    gsay_option(82, 231, Node024, 50);
end

procedure Node024
begin
    gsay_reply(82, 240);
    gsay_option(82, 241, Node025, 50);
    gsay_option(82, 242, Node025, 50);
    gsay_option(82, 243, Node025, 50);
end

procedure Node025
begin
    gsay_reply(82, 250);
    gsay_option(82, 251, Node026, 50);
end

procedure Node026
begin
    set_local_var(10, 1);
    gsay_reply(82, 260);
    gsay_option(82, 261, Node999, 50);
end

procedure Node027
begin
    gsay_reply(82, 270);
    gsay_option(82, 271, Node028, 50);
    gsay_option(82, 272, Node029, 50);
end

procedure Node028
begin
    gsay_reply(82, 280);
    gsay_option(82, 281, Node010, 50);
end

procedure Node029
begin
    gsay_reply(82, 290);
    gsay_option(82, 291, Node010, 50);
end

procedure Node030
begin
    if ((game_time_in_seconds - local_var(11)) < (3600 * 24 * 7)) then begin
        set_local_var(11, game_time_in_seconds);
        gsay_reply(82, 300);
        gsay_option(82, 304, Node010, 50);
        gsay_option(82, 305, Node010, 50);
    end
    else begin
        set_local_var(11, game_time_in_seconds);
        if (local_var(12) == 0) then begin
            set_local_var(12, local_var(12) + 1);
            gsay_reply(82, 301);
            gsay_option(82, 306, Node031, 50);
            gsay_option(82, 307, Node032, 50);
        end
        else begin
            if (local_var(12) == 1) then begin
                set_local_var(12, local_var(12) + 1);
                gsay_reply(82, 302);
                gsay_option(82, 308, Node031, 50);
                gsay_option(82, 309, Node032, 50);
            end
            else begin
                if (local_var(12) == 3) then begin
                    set_local_var(12, local_var(12) + 1);
                    gsay_reply(82, 303);
                    gsay_option(82, 3010, Node032, 50);
                    gsay_option(82, 3011, Node031, 50);
                end
            end
        end
    end
end

procedure Node031
begin
    gsay_reply(82, 310);
    gsay_option(82, 311, Node010, 50);
    gsay_option(82, 312, Node999, 50);
end

procedure Node032
begin
    gsay_reply(82, 320);
    gsay_option(82, 321, Node033, 50);
    gsay_option(82, 322, Node034, 50);
    gsay_option(82, 323, Node034, 50);
end

procedure Node033
begin
    gsay_reply(82, 330);
    gsay_option(82, 331, Node010, 50);
end

procedure Node034
begin
    gsay_reply(82, 340);
    gsay_option(82, 341, Node010, 50);
end

procedure Node035
begin
    gsay_reply(82, 350);
    gsay_option(82, 351, Node999, 50);
    gsay_option(82, 352, Node010, 50);
end

procedure Node036
begin
    gsay_reply(82, 360);
    gsay_option(82, 361, Node037, 50);
    if (global_var(244) == 2) then begin
        gsay_option(82, 362, Node038, 50);
    end
    if (global_var(144) >= 2) then begin
        gsay_option(82, 363, Node039, 50);
    end
    if (global_var(267) == 1) then begin
        gsay_option(82, 364, Node044, 50);
    end
    if (global_var(248) >= 3) then begin
        gsay_option(82, 365, Node047, 50);
    end
    if (global_var(173) >= 2) then begin
        gsay_option(82, 366, Node048, 50);
    end
    if (global_var(370) > 0) then begin
        gsay_option(82, 367, Node050, 50);
    end
    gsay_option(82, 368, Node010, 50);
end

procedure Node037
begin
    gsay_reply(82, 370);
    gsay_option(82, 371, Node036, 50);
    gsay_option(82, 372, Node010, 50);
end

procedure Node038
begin
    gsay_reply(82, 380);
    gsay_option(82, 381, Node041, 50);
    gsay_option(82, 382, Node010, 50);
end

procedure Node039
begin
    gsay_reply(82, 390);
    gsay_option(82, 391, Node040, 50);
end

procedure Node040
begin
    gsay_reply(82, 400);
    if (global_var(221) == 2) then begin
        gsay_option(82, 401, Node041, 50);
    end
    if (global_var(221) == 3) then begin
        gsay_option(82, 402, Node042, 50);
        gsay_option(82, 403, Node042, 50);
    end
end

procedure Node041
begin
    gsay_reply(82, 410);
    gsay_option(82, 411, Node037, 50);
end

procedure Node042
begin
    gsay_reply(82, 420);
    gsay_option(82, 421, Node043, 50);
    gsay_option(82, 422, Node037, 50);
end

procedure Node043
begin
    gsay_reply(82, 430);
    gsay_option(82, 431, Node037, 50);
    gsay_option(82, 432, Node010, 50);
end

procedure Node044
begin
    gsay_reply(82, 440);
    gsay_option(82, 441, Node045, 50);
end

procedure Node045
begin
    gsay_reply(82, 450);
    gsay_option(82, 451, Node046, 50);
    gsay_option(82, 452, Node046, 50);
end

procedure Node046
begin
    gsay_reply(82, 460);
    gsay_option(82, 461, Node036, 50);
    gsay_option(82, 462, Node010, 50);
end

procedure Node047
begin
    gsay_reply(82, 470);
    gsay_option(82, 471, Node037, 50);
    gsay_option(82, 472, Node010, 50);
end

procedure Node048
begin
    gsay_reply(82, 480);
    gsay_option(82, 481, Node049, 50);
end

procedure Node049
begin
    if (has_skill(dude_obj, 14) > 199) then begin
        gsay_reply(82, 490);
        gsay_option(82, 492, Node037, 50);
    end
    else begin
        gsay_reply(82, 491);
        gsay_option(82, 493, Node036, 50);
        gsay_option(82, 494, Node010, 50);
    end
end

procedure Node050
begin
    gsay_reply(82, 500);
    gsay_option(82, 501, Node051, 50);
end

procedure Node051
begin
    gsay_reply(82, 510);
    gsay_option(82, 511, Node052, 50);
    gsay_option(82, 512, Node054, 50);
end

procedure Node052
begin
    set_local_var(9, 1);
    gsay_reply(82, 520);
    gsay_option(82, 521, Node053, 50);
    gsay_option(82, 522, Node999, 50);
end

procedure Node053
begin
    set_local_var(9, 1);
    gsay_reply(82, 530);
    gsay_option(82, 531, Node999, 50);
end

procedure Node054
begin
    set_local_var(9, 1);
    gsay_reply(82, 540);
    gsay_option(82, 541, Node053, 50);
    gsay_option(82, 542, Node999, 50);
end

procedure Node055
begin
    gsay_reply(82, 550);
    gsay_option(82, 551, Node010, 50);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

