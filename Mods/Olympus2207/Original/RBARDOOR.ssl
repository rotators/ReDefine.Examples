variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;

procedure start;
procedure description_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;


procedure start
begin
end

procedure description_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure use_p_proc
begin
    script_overrides;
    if (source_obj == dude_obj) then begin
        if (local_var(1) == 0) then begin
            if (map_var(0) == 0) then begin
                display_msg(message_str(10, random(40, 43)));
            end
            else begin
                set_local_var(1, 1);
                obj_unlock(self_obj);
                obj_open(self_obj);
                add_timer_event(self_obj, random(10, 15), 1);
            end
        end
        else begin
            obj_unlock(self_obj);
            obj_open(self_obj);
            add_timer_event(self_obj, random(10, 15), 1);
        end
    end
    else begin
        animate_move_obj_to_tile(source_obj, tile_num_in_direction(tile_num(source_obj), (has_trait(1, source_obj, 10) + 3) % 6, 1), 0 bwor 16);
    end
end

procedure use_obj_on_p_proc
begin
    script_overrides;
    display_msg(message_str(10, 130));
end

procedure use_skill_on_p_proc
begin
    script_overrides;
    display_msg(message_str(10, 130));
end

procedure map_enter_p_proc
begin
    if (local_var(1) == 1) then begin
        set_local_var(1, 0);
    end
    if (map_var(0) == 1) then begin
        set_map_var(0, 0);
    end
    if (local_var(1) == 0) then begin
        obj_lock(self_obj);
    end
    else begin
        obj_unlock(self_obj);
    end
end

procedure map_update_p_proc
begin
    if (local_var(1) == 0) then begin
        obj_lock(self_obj);
    end
    else begin
        obj_unlock(self_obj);
    end
end

procedure talk_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        obj_close(self_obj);
    end
end

