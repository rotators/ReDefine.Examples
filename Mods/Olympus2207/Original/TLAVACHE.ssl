variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable max_distance;
variable animation_is_called;
variable sound_is_called;
variable distance_to_walk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        critter_add_trait(self_obj, 1, 6, 4);
        critter_add_trait(self_obj, 1, 5, 15);
        max_distance := random(2, 6);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(29, 76), 1);
    end
    if (sound_is_called == 0) then begin
        sound_is_called := 1;
        add_timer_event(self_obj, random(559, 1226), 2);
    end
    if ((global_var(9) < 2) and obj_carrying_pid_obj(dude_obj, 292) and (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 4)) then begin
        display_msg(14);
        set_global_var(9, 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(47) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (global_var(30) != 2) then begin
        if (global_var(9) == 0) then begin
            set_global_var(9, 1);
        end
        display_msg(message_str(37, random(10, 13)));
    end
    else begin
        display_msg(message_str(37, random(6, 9)));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(37, random(1, 5)));
end

procedure pickup_p_proc
begin
    script_overrides;
end

procedure push_p_proc
begin
    script_overrides;
    reg_anim_func(2, self_obj);
    reg_anim_func(1, 1);
    if (random(1, 2) == 1) then begin
        reg_anim_animate(self_obj, 20, -1);
        reg_anim_animate(self_obj, 37, -1);
    end
    else begin
        reg_anim_animate(self_obj, 21, -1);
        reg_anim_animate(self_obj, 36, -1);
    end
    play_sfx("MABROMBA");
    reg_anim_func(3, 0);
end

procedure talk_p_proc
begin
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((47 == 50) or (47 == 59)) then begin
            set_global_var(47, global_var(47) - 3);
        end
        else begin
            set_global_var(47, global_var(47) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    max_distance := random(2, 6);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (not(combat_is_initialized)) then begin
            if ((random(1, 8) == 1) and (global_var(30) != 2)) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                if (random(1, 2) == 1) then begin
                    reg_anim_animate(self_obj, 20, -1);
                    reg_anim_animate(self_obj, 37, -1);
                end
                else begin
                    reg_anim_animate(self_obj, 21, -1);
                    reg_anim_animate(self_obj, 36, -1);
                end
                play_sfx("MABROMBA");
                reg_anim_func(3, 0);
            end
            else begin
                if (tile_distance(tile_num(self_obj), local_var(3)) < max_distance) then begin
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(floor(max_distance / 2), max_distance)), 0);
                end
                else begin
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), local_var(3)), random(floor(max_distance / 2), max_distance)), 0);
                end
            end
        end
        animation_is_called := 0;
    end
    if (fixed_param == 2) then begin
        if (not(combat_is_initialized)) then begin
            float_msg(self_obj, message_str(37, random(1030, 1039)), 0);
            play_sfx("MABROMAQ");
        end
        sound_is_called := 0;
    end
end

