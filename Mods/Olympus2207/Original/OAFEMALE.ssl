variable steal_perk;
variable steal_gloves;
variable max_distance;
variable event_is_called;
variable event2_is_called;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_critter_stat(self_obj, 0, random(1, 2));
        set_critter_stat(self_obj, 1, random(-1, 0));
        set_critter_stat(self_obj, 2, random(1, 2));
        set_critter_stat(self_obj, 3, random(-3, -2));
        set_critter_stat(self_obj, 4, random(-3, -2));
        set_critter_stat(self_obj, 5, random(-1, 1));
        set_critter_stat(self_obj, 6, random(-3, 3));
        critter_mod_skill(self_obj, 0, random(20, 30));
        critter_mod_skill(self_obj, 1, random(20, 30));
        critter_mod_skill(self_obj, 2, random(20, 30));
        critter_mod_skill(self_obj, 3, random(20, 30));
        critter_mod_skill(self_obj, 4, random(30, 40));
        critter_mod_skill(self_obj, 5, random(20, 30));
        critter_mod_skill(self_obj, 6, random(0, 10));
        critter_mod_skill(self_obj, 7, random(0, 10));
        critter_mod_skill(self_obj, 8, random(0, 10));
        critter_mod_skill(self_obj, 9, random(0, 10));
        critter_mod_skill(self_obj, 10, random(0, 10));
        critter_mod_skill(self_obj, 11, random(0, 10));
        critter_mod_skill(self_obj, 12, random(0, 10));
        critter_mod_skill(self_obj, 13, random(0, 10));
        critter_mod_skill(self_obj, 14, random(0, 10));
        critter_mod_skill(self_obj, 15, random(0, 10));
        critter_mod_skill(self_obj, 16, random(0, 10));
        critter_mod_skill(self_obj, 17, random(0, 10));
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(70, 90));
        set_local_var(5, random(10, 20));
        critter_add_trait(self_obj, 1, 6, 10);
        critter_add_trait(self_obj, 1, 5, 41);
        if (random(0, 100) <= 20) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(1, 10));
        end
        if (random(0, 100) <= 15) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(238, 1, 2, -1), random(1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(213, 1, 2, -1), random(1, 2));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(35, 1, 2, -1));
        end
        if (random(0, 100) <= 14) then begin
            add_obj_to_inven(self_obj, create_object_sid(65, 1, 2, -1));
        end
        if (random(0, 100) <= 13) then begin
            add_obj_to_inven(self_obj, create_object_sid(218, 1, 2, -1));
        end
        if (random(0, 100) <= 12) then begin
            add_obj_to_inven(self_obj, create_object_sid(70, 1, 2, -1));
        end
        if (random(0, 100) <= 11) then begin
            add_obj_to_inven(self_obj, create_object_sid(106, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(244, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(242, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(414, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(422, 1, 2, -1));
        end
        if (random(0, 100) <= 9) then begin
            add_obj_to_inven(self_obj, create_object_sid(423, 1, 2, -1));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object_sid(426, 1, 2, -1));
        end
        if (random(0, 100) <= 7) then begin
            add_obj_to_inven(self_obj, create_object_sid(433, 1, 2, -1));
        end
        if (random(0, 100) <= 6) then begin
            add_obj_to_inven(self_obj, create_object_sid(421, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(427, 1, 2, -1));
        end
        if (random(0, 100) <= 4) then begin
            add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
        end
        if (random(0, 100) <= 3) then begin
            add_obj_to_inven(self_obj, create_object_sid(74, 1, 2, -1));
        end
        if (random(1, 2) == 1) then begin
            add_obj_to_inven(self_obj, create_object_sid(65, 1, 2, -1));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(63, 1, 2, -1));
        end
    end
end

procedure critter_p_proc
begin
    if (event_is_called == 0) then begin
        event_is_called := 1;
        add_timer_event(self_obj, random(150, 250), 1);
    end
    if (event2_is_called == 0) then begin
        event2_is_called := 1;
        add_timer_event(self_obj, random(90, 180), 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(55) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(285, random(6, 9)));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(285, random(1, 5)));
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure talk_p_proc
begin
    float_msg(self_obj, message_str(285, random(1000, 1009)), 0);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        set_global_var(55, global_var(55) - 6);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    max_distance := random(20, 25);
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and (event_is_called == 1)) then begin
        if (not(combat_is_initialized)) then begin
            if (tile_distance(tile_num(self_obj), local_var(3)) >= max_distance) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), local_var(3)), random(max_distance, max_distance + 4)), 0);
            end
            else begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(max_distance / 4, max_distance)), 0);
            end
        end
        event_is_called := 0;
    end
    if ((fixed_param == 2) and (event2_is_called == 1)) then begin
        if (not(combat_is_initialized)) then begin
            if (random(0, 100) <= 35) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                reg_anim_animate(self_obj, 10, -1);
                reg_anim_func(3, 0);
            end
            else begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                reg_anim_animate(self_obj, 11, -1);
                reg_anim_func(3, 0);
            end
        end
        event2_is_called := 0;
    end
end

