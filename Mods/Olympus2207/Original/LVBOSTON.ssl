variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;
variable trading_container;
variable punches;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node038a;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node999;
procedure Node998;
procedure NodeBarter;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(70, 80));
        set_local_var(5, random(30, 40));
        set_local_var(6, random(-30, 20));
        critter_add_trait(self_obj, 1, 6, 11);
        critter_add_trait(self_obj, 1, 5, 32);
        if (random(0, 100) <= 75) then begin
            add_mult_objs_to_inven(self_obj, create_object_sid(41, 1, 2, -1), random(1, 40));
        end
        if (random(0, 100) <= 45) then begin
            add_obj_to_inven(self_obj, create_object_sid(415, 1, 2, -1));
        end
        if (random(0, 100) <= 40) then begin
            add_obj_to_inven(self_obj, create_object_sid(419, 1, 2, -1));
        end
        if (random(0, 100) <= 30) then begin
            add_obj_to_inven(self_obj, create_object_sid(434, 1, 2, -1));
        end
        if (random(0, 100) <= 20) then begin
            add_obj_to_inven(self_obj, create_object_sid(145, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(223, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(39, 1, 2, -1));
        end
        if (random(0, 100) <= 15) then begin
            add_obj_to_inven(self_obj, create_object_sid(82, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(228, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(410, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(431, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(110, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(323, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(239, 1, 2, -1));
        end
        if (random(0, 100) <= 5) then begin
            add_obj_to_inven(self_obj, create_object_sid(235, 1, 2, -1));
        end
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(1000, 1000), 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(51) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(222, 2));
    end
    else begin
        display_msg(message_str(222, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(222, 1));
    end
    else begin
        display_msg(message_str(222, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (local_var(7) == 1) then begin
        if (not(anim_busy(self_obj))) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        end
    end
    start_gdialog(222, self_obj, 4, 9, -1);
    gsay_start;
    if (local_var(9) == 1) then begin
        call Node039();
    end
    else begin
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    set_global_var(118, global_var(118) bwor 32768);
    if (global_var(162) == 1) then begin
        set_global_var(162, 0);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((51 == 50) or (51 == 59)) then begin
            set_global_var(51, global_var(51) - 3);
        end
        else begin
            set_global_var(51, global_var(51) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (tile_num(self_obj) != local_var(3)) then begin
        move_to(self_obj, local_var(3), elevation(self_obj));
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and not(combat_is_initialized)) then begin
        animation_is_called := 0;
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_is_called := 0;
    end
    if (fixed_param == 3) then begin
        fadeOut(700);
        move_to(self_obj, 15688, elevation(self_obj));
        anim(self_obj, 1000, 2);
        move_to(dude_obj, 15888, elevation(self_obj));
        anim(dude_obj, 1000, 5);
        fadeIn(700);
        add_timer_event(self_obj, random(15, 20), 4);
    end
    if (fixed_param == 4) then begin
        punches := punches + 1;
        play_sfx("HMXXXXAQ");
        reg_anim_func(2, dude_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(dude_obj, 16, -1);
        reg_anim_func(3, 0);
        add_timer_event(self_obj, 2, 5);
        if (punches < 3) then begin
            add_timer_event(self_obj, random(15, 20), 4);
        end
        else begin
            add_timer_event(self_obj, 15, 6);
        end
    end
    if (fixed_param == 5) then begin
        play_sfx("HMXXXXAP");
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 14, -1);
        reg_anim_func(3, 0);
    end
    if (fixed_param == 6) then begin
        set_local_var(9, 1);
        dialogue_system_enter;
    end
end

procedure Node001
begin
    set_local_var(7, 1);
    already_talk := 1;
    gsay_reply(222, 10);
    giq_option(1, 222, 11, Node002, 51);
    gsay_option(222, 12, Node003, 50);
    giq_option(1, 222, 13, Node004, 49);
end

procedure Node002
begin
    gsay_reply(222, 20);
    giq_option(1, 222, 21, Node005, 51);
    gsay_option(222, 22, Node006, 50);
    giq_option(1, 222, 23, Node004, 49);
end

procedure Node003
begin
    gsay_reply(222, 30);
    giq_option(1, 222, 31, Node005, 51);
    gsay_option(222, 32, Node006, 50);
    giq_option(1, 222, 33, Node004, 49);
end

procedure Node004
begin
    gsay_reply(222, 40);
    gsay_option(222, 41, Node010, 50);
    gsay_option(222, 42, Node999, 50);
end

procedure Node005
begin
    gsay_reply(222, 50);
    gsay_option(222, 51, Node010, 50);
    gsay_option(222, 52, Node999, 50);
end

procedure Node006
begin
    gsay_reply(222, 60);
    gsay_option(222, 61, Node010, 50);
    gsay_option(222, 62, Node999, 50);
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        if (global_var(227) == 2) then begin
            gsay_reply(222, 1001);
        end
        else begin
            gsay_reply(222, 1003);
        end
    end
    else begin
        gsay_reply(222, 1002);
    end
    gsay_option(222, 101, Node024, 50);
    gsay_option(222, 102, Node013, 50);
    gsay_option(222, 103, Node014, 50);
    if (global_var(160) == 1) then begin
        gsay_option(222, 104, Node011, 50);
    end
    if (global_var(162) == 1) then begin
        giq_option(1, 222, 105, Node029, 49);
    end
    if (global_var(152) == 1) then begin
        gsay_option(222, 106, Node041, 50);
    end
    gsay_option(222, 107, Node999, 50);
end

procedure Node011
begin
    gsay_reply(222, 110);
    gsay_option(222, 111, Node012, 50);
end

procedure Node012
begin
    gsay_reply(222, 120);
    gsay_option(222, 121, Node010, 50);
    gsay_option(222, 122, Node999, 50);
end

procedure Node013
begin
    gsay_reply(222, 130);
    gsay_option(222, 131, Node014, 50);
    gsay_option(222, 132, Node010, 50);
end

procedure Node014
begin
    gsay_reply(222, 140);
    if (global_var(151) == 1) then begin
        gsay_option(222, 141, Node015, 50);
    end
    if (global_var(162) == 0) then begin
        giq_option(1, 222, 142, Node026, 51);
    end
    gsay_option(222, 143, Node016, 50);
    gsay_option(222, 144, Node025, 50);
end

procedure Node015
begin
    gsay_reply(222, 150);
    gsay_option(222, 151, Node999, 50);
    gsay_option(222, 152, Node010, 50);
end

procedure Node016
begin
    gsay_reply(222, 160);
    gsay_option(222, 161, Node017, 50);
    gsay_option(222, 162, Node010, 50);
end

procedure Node017
begin
    gsay_reply(222, 170);
    giq_option(1, 222, 171, Node018, 51);
    gsay_option(222, 172, Node010, 50);
    gsay_option(222, 173, Node025, 50);
end

procedure Node018
begin
    if (has_skill(dude_obj, 14) < 40) then begin
        gsay_reply(222, 1801);
    end
    else begin
        gsay_reply(222, 1802);
    end
    gsay_option(222, 181, Node010, 50);
    if (has_skill(dude_obj, 14) >= 40) then begin
        gsay_option(222, 182, Node022, 50);
        giq_option(1, 222, 183, Node021, 49);
        giq_option(1, 222, 184, Node019, 51);
    end
    gsay_option(222, 185, Node999, 50);
end

procedure Node019
begin
    gsay_reply(222, 190);
    giq_option(1, 222, 191, Node020, 51);
    giq_option(1, 222, 192, Node010, 49);
    gsay_option(222, 193, Node999, 50);
end

procedure Node020
begin
    gsay_reply(222, 200);
    gsay_option(222, 201, Node998, 50);
end

procedure Node021
begin
    gsay_reply(222, 210);
    gsay_option(222, 211, Node010, 50);
    gsay_option(222, 212, Node999, 50);
end

procedure Node022
begin
    gsay_reply(222, 220);
    giq_option(1, 222, 221, Node023, 51);
end

procedure Node023
begin
    gsay_reply(222, 230);
    giq_option(1, 222, 231, Node010, 49);
    gsay_option(222, 232, Node999, 50);
end

procedure Node024
begin
    if (global_var(227) == 2) then begin
        gsay_reply(222, 2401);
    end
    else begin
        gsay_reply(222, 2402);
    end
    gsay_option(222, 241, Node025, 50);
end

procedure Node025
begin
    gsay_reply(222, 250);
    gsay_option(222, 251, Node010, 50);
end

procedure Node026
begin
    gsay_reply(222, 260);
    gsay_option(222, 261, Node027, 50);
end

procedure Node027
begin
    gsay_reply(222, 270);
    giq_option(1, 222, 271, Node028, 51);
end

procedure Node028
begin
    if ((global_var(118) bwand 2097152) != 0) then begin
        gsay_reply(222, 2801);
    end
    else begin
        if (global_var(162) != 2) then begin
            gsay_reply(222, 2802);
        end
        else begin
            gsay_reply(222, 2803);
        end
    end
    if ((global_var(162) == 0) and not((global_var(118) bwand 2097152) != 0)) then begin
        gsay_option(222, 281, Node040, 50);
    end
    gsay_option(222, 282, Node999, 50);
end

procedure Node029
begin
    gsay_reply(222, 290);
    if ((global_var(118) bwand 2097152) != 0) then begin
        gsay_option(222, 291, Node030, 50);
    end
    else begin
        if (global_var(238) == 1) then begin
            giq_option(1, 222, 292, Node031, 49);
        end
        if ((global_var(239) == 1) and (global_var(240) == 1)) then begin
            giq_option(1, 222, 293, Node032, 49);
        end
    end
    if (not(global_var(118) bwand 2097152) != 0) then begin
        giq_option(1, 222, 294, Node033, 51);
        if (global_var(237) == 0) then begin
            gsay_option(222, 295, Node035, 50);
        end
    end
    gsay_option(222, 296, Node010, 50);
    if ((global_var(237) == 1) and (global_var(241) == 1) and (not(global_var(118) bwand 2097152) != 0)) then begin
        gsay_option(222, 297, Node036, 50);
    end
end

procedure Node030
begin
    variable LVar0 := 0;
    if (global_var(162) != 2) then begin
        set_global_var(162, 2);
        give_exp_points(floor(1208 / 5) + (get_critter_stat(dude_obj, 4) * floor(1208 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1208 / 30)) + (floor(1208 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(1208 / 5) + (get_critter_stat(dude_obj, 4) * floor(1208 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1208 / 30)) + (floor(1208 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        set_global_var(51, global_var(51) + 1);
        set_global_var(0, global_var(0) - 80);
        if (obj_carrying_pid_obj(self_obj, 130)) then begin
            LVar0 := 1;
            rm_obj_from_inven(self_obj, obj_carrying_pid_obj(self_obj, 130));
            add_obj_to_inven(dude_obj, create_object_sid(130, 1, 2, -1));
        end
    end
    if (LVar0 == 1) then begin
        gsay_reply(222, 300);
    end
    else begin
        gsay_reply(222, 302);
    end
    gsay_option(222, 301, Node999, 50);
end

procedure Node031
begin
    variable LVar0 := 0;
    if (global_var(162) != 2) then begin
        set_global_var(162, 2);
        give_exp_points(floor(1208 / 5) + (get_critter_stat(dude_obj, 4) * floor(1208 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1208 / 30)) + (floor(1208 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(1208 / 5) + (get_critter_stat(dude_obj, 4) * floor(1208 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1208 / 30)) + (floor(1208 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        set_global_var(51, global_var(51) + 3);
        set_global_var(0, global_var(0) + 25);
        if (obj_carrying_pid_obj(self_obj, 130)) then begin
            LVar0 := 1;
            rm_obj_from_inven(self_obj, obj_carrying_pid_obj(self_obj, 130));
            add_obj_to_inven(dude_obj, create_object_sid(130, 1, 2, -1));
        end
    end
    if (LVar0 == 1) then begin
        gsay_reply(222, 310);
    end
    else begin
        gsay_reply(222, 302);
    end
    gsay_option(222, 311, Node999, 50);
end

procedure Node032
begin
    variable LVar0 := 0;
    if (global_var(162) != 2) then begin
        set_global_var(162, 2);
        give_exp_points(floor(1208 / 5) + (get_critter_stat(dude_obj, 4) * floor(1208 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1208 / 30)) + (floor(1208 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(1208 / 5) + (get_critter_stat(dude_obj, 4) * floor(1208 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1208 / 30)) + (floor(1208 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        set_global_var(51, global_var(51) + 3);
        set_global_var(0, global_var(0) + 25);
        if (obj_carrying_pid_obj(self_obj, 130)) then begin
            LVar0 := 1;
            rm_obj_from_inven(self_obj, obj_carrying_pid_obj(self_obj, 130));
            add_obj_to_inven(dude_obj, create_object_sid(130, 1, 2, -1));
        end
    end
    if (LVar0 == 1) then begin
        gsay_reply(222, 300);
    end
    else begin
        gsay_reply(222, 302);
    end
    gsay_option(222, 321, Node999, 50);
end

procedure Node033
begin
    gsay_reply(222, 330);
    if (global_var(285) == 2) then begin
        giq_option(1, 222, 331, Node034, 49);
    end
    gsay_option(222, 332, Node999, 50);
end

procedure Node034
begin
    if (global_var(162) != 2) then begin
        set_global_var(162, 2);
        give_exp_points(floor(1208 / 5) + (get_critter_stat(dude_obj, 4) * floor(1208 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1208 / 30)) + (floor(1208 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(1208 / 5) + (get_critter_stat(dude_obj, 4) * floor(1208 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1208 / 30)) + (floor(1208 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        set_global_var(51, global_var(51) + 3);
        set_global_var(0, global_var(0) + 40);
        add_obj_to_inven(dude_obj, create_object_sid(130, 1, 2, -1));
    end
    gsay_reply(222, 340);
    gsay_option(222, 341, Node999, 50);
end

procedure Node035
begin
    gsay_reply(222, 350);
    gsay_option(222, 351, Node037, 50);
end

procedure Node036
begin
    if (global_var(162) != 2) then begin
        set_global_var(162, 2);
        give_exp_points(floor(1208 / 5) + (get_critter_stat(dude_obj, 4) * floor(1208 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1208 / 30)) + (floor(1208 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4))));
        display_msg(message_str(10, random(140, 143)) + (floor(1208 / 5) + (get_critter_stat(dude_obj, 4) * floor(1208 / 12)) + (get_critter_stat(dude_obj, 6) * floor(1208 / 30)) + (floor(1208 / 75) * (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) + message_str(10, 144));
        set_global_var(51, global_var(51) + 5);
        set_global_var(0, global_var(0) + 60);
        add_obj_to_inven(dude_obj, create_object_sid(130, 1, 2, -1));
    end
    gsay_reply(222, 360);
    gsay_option(222, 361, Node999, 50);
end

procedure Node037
begin
    gsay_reply(222, 370);
    if (has_skill(dude_obj, 14) >= 90) then begin
        giq_option(1, 222, 371, Node038, 51);
    end
    gsay_option(222, 372, Node999, 50);
end

procedure Node038
begin
    gsay_reply(222, 380);
    gsay_option(222, 381, Node038a, 50);
end

procedure Node038a
begin
    add_timer_event(self_obj, 7, 3);
    game_ui_disable;
end

procedure Node039
begin
    set_local_var(9, 0);
    game_ui_enable;
    set_global_var(237, 1);
    gsay_reply(222, 390);
    gsay_option(222, 391, Node999, 50);
end

procedure Node040
begin
    set_global_var(162, 1);
    gsay_reply(222, 400);
    gsay_option(222, 401, Node999, 50);
end

procedure Node041
begin
    set_global_var(228, global_var(228) + 1);
    gsay_reply(222, 410);
    gsay_option(222, 411, Node010, 50);
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    if (cur_map_index == 33) then begin
        set_map_var(0, 1);
    end
    else begin
        set_local_var(2, 1);
    end
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

