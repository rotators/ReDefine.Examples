variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable max_distance;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure NodeGoHome;
procedure Node999;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(7, has_trait(1, self_obj, 10));
        set_local_var(4, random(70, 80));
        set_local_var(5, random(0, 100));
        set_local_var(6, random(-5, 5));
        critter_add_trait(self_obj, 1, 6, 0);
        critter_add_trait(self_obj, 1, 5, 62);
        if (random(0, 100) <= 50) then begin
            if (random(0, 100) <= 50) then begin
                add_obj_to_inven(self_obj, create_object_sid(196, 1, 2, -1));
                add_mult_objs_to_inven(self_obj, create_object_sid(31, 1, 2, -1), random(4, 8));
                wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 196));
            end
            else begin
                add_obj_to_inven(self_obj, create_object_sid(100, 1, 2, -1));
                add_mult_objs_to_inven(self_obj, create_object_sid(29, 1, 2, -1), random(2, 5));
                wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 100));
            end
        end
        else begin
            if (random(0, 100) <= 50) then begin
                add_obj_to_inven(self_obj, create_object_sid(95, 1, 2, -1));
                add_mult_objs_to_inven(self_obj, create_object_sid(10, 1, 2, -1), random(4, 8));
                wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 95));
            end
            else begin
                add_obj_to_inven(self_obj, create_object_sid(191, 1, 2, -1));
                add_mult_objs_to_inven(self_obj, create_object_sid(4, 1, 2, -1), random(5, 8));
                wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 191));
            end
        end
        if (random(0, 100) <= 50) then begin
            add_obj_to_inven(self_obj, create_object_sid(229, 1, 2, -1));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(230, 1, 2, -1));
        end
        add_mult_objs_to_inven(self_obj, create_object_sid(216, 1, 2, -1), random(1, 2));
        add_mult_objs_to_inven(self_obj, create_object_sid(221, 1, 2, -1), random(1, 2));
        if (random(0, 100) <= 50) then begin
            add_obj_to_inven(self_obj, create_object_sid(64, 1, 2, -1));
        end
        else begin
            add_mult_objs_to_inven(self_obj, create_object_sid(215, 1, 2, -1), random(3, 5));
        end
        if (random(0, 100) <= 60) then begin
            add_obj_to_inven(self_obj, create_object_sid(228, 1, 2, -1));
        end
        else begin
            add_obj_to_inven(self_obj, create_object_sid(226, 1, 2, -1));
        end
        if (random(0, 100) <= 25) then begin
            add_obj_to_inven(self_obj, create_object_sid(51, 1, 2, -1));
        end
        if (random(0, 100) <= 10) then begin
            add_obj_to_inven(self_obj, create_object_sid(80, 1, 2, -1));
        end
        if (random(0, 100) <= 9) then begin
            add_obj_to_inven(self_obj, create_object_sid(236, 1, 2, -1));
        end
        if (random(0, 100) <= 8) then begin
            add_obj_to_inven(self_obj, create_object_sid(226, 1, 2, -1));
        end
        if (random(0, 100) <= 7) then begin
            add_obj_to_inven(self_obj, create_object_sid(229, 1, 2, -1));
        end
        if (random(0, 100) <= 6) then begin
            add_obj_to_inven(self_obj, create_object_sid(230, 1, 2, -1));
        end
        max_distance := random(10, 15);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(29, 76), 1);
    end
    if (obj_can_see_obj(self_obj, dude_obj) == 1) then begin
        if (not((obj_pid(critter_inven_obj(dude_obj, 0)) == 120) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 121) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 122) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 123) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 129) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 391)) and not(obj_pid(critter_inven_obj(dude_obj, 0)) == 394)) then begin
            set_local_var(2, 1);
        end
    end
    if (local_var(9) == 1) then begin
        if ((tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 6) and (tile_distance(tile_num(dude_obj), tile_num(self_obj)) <= 10)) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 5)), 0);
        end
        else begin
            if (tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 10) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 5)), 1);
            end
        end
    end
    if (map_var(1) == 1) then begin
        set_map_var(1, 2);
        if (global_var(200) >= 3) then begin
            set_global_var(335, 1);
        end
        else begin
            set_global_var(335, 2);
        end
        add_timer_event(self_obj, 10, 2);
    end
    if (not(combat_is_initialized) and ((cur_map_index != 13) and (cur_map_index != 45) and (cur_map_index != 62)) and (global_var(336) == 0) and (local_var(11) == 0)) then begin
        set_local_var(11, 2);
        add_timer_event(self_obj, random(2, 10), 9);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(59) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(394, 76));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(394, 75));
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if (combat_is_initialized) then begin
        if ((obj_pid(critter_inven_obj(dude_obj, 0)) == 120) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 121) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 122) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 123) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 129) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 391) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 394)) then begin
            float_msg(self_obj, message_str(394, 79), 0);
        end
        else begin
            set_local_var(2, 1);
        end
    end
    else begin
        start_gdialog(394, self_obj, -1, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (global_var(376) == 0) then begin
        set_global_var(376, 1);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((59 == 50) or (59 == 59)) then begin
            set_global_var(59, global_var(59) - 3);
        end
        else begin
            set_global_var(59, global_var(59) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(346, 1);
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    if (not(metarule(22, 0)) == 1) then begin
        max_distance := random(10, 15);
        if ((cur_map_index == 13) and (local_var(10) == 0)) then begin
            set_local_var(10, 1);
            fadeIn(700);
            create_object_sid(16777401, 23934, 0, 446);
            set_local_var(8, create_object_sid(16777225, 20136, 0, 106));
            add_timer_event(self_obj, 30, 3);
        end
        if ((cur_map_index == 45) and (local_var(10) == 0)) then begin
            set_local_var(10, 1);
            fadeIn(700);
            create_object_sid(16777401, 24898, 0, 446);
            set_local_var(8, create_object_sid(16777384, 22700, 0, 285));
            add_timer_event(self_obj, 30, 3);
        end
    end
end

procedure map_exit_p_proc
begin
    if (cur_map_index == 13) then begin
        set_map_music(13, "Metro2");
    end
    if (cur_map_index == 45) then begin
        set_map_music(45, "Trible");
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        animation_is_called := 0;
    end
    if (fixed_param == 2) then begin
        game_ui_disable;
        fadeOut(600);
        party_add(self_obj);
        set_local_var(9, 1);
        if (global_var(335) == 1) then begin
            load_map("pnpltfrm", -1);
        end
        if (global_var(335) == 2) then begin
            load_map("oamain", -1);
        end
    end
    if (fixed_param == 3) then begin
        if (not(anim_busy(self_obj))) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        end
        float_msg(self_obj, message_str(394, 77), 0);
        add_timer_event(self_obj, 30, 4);
    end
    if (fixed_param == 4) then begin
        game_ui_enable;
        float_msg(self_obj, message_str(394, 78), 0);
        if (global_var(335) == 1) then begin
            set_map_music(13, "kaykyser");
        end
        if (global_var(335) == 2) then begin
            set_map_music(45, "kaykyser");
        end
        attack_setup(self_obj, local_var(8));
    end
    if (fixed_param == 5) then begin
        if (cur_map_index == 13) then begin
            set_map_music(13, "Metro2");
        end
        if (cur_map_index == 45) then begin
            set_map_music(45, "Trible");
        end
        set_global_var(336, 1);
        party_remove(self_obj);
        set_local_var(9, 0);
        move_to(self_obj, tile_num(self_obj), 2);
        fadeIn(500);
        load_map("olenter", -1);
    end
    if (fixed_param == 9) then begin
        if (cur_map_index == 13) then begin
            set_map_music(13, "Metro2");
        end
        if (cur_map_index == 45) then begin
            set_map_music(45, "Trible");
        end
        set_global_var(336, 1);
        party_remove(self_obj);
        set_local_var(9, 0);
        move_to(self_obj, tile_num(self_obj), 2);
        fadeIn(500);
        if (local_var(11) == 1) then begin
            display_msg(message_str(394, 93));
        end
        if (local_var(11) == 2) then begin
            display_msg(message_str(394, 94));
        end
        load_map("olenter", -1);
    end
end

procedure Node001
begin
    gsay_reply(394, 80);
    gsay_option(394, 81, Node002, 50);
    gsay_option(394, 82, Node003, 50);
end

procedure Node002
begin
    gsay_reply(394, 83);
    gsay_option(394, 85, NodeGoHome, 50);
end

procedure Node003
begin
    gsay_reply(394, 84);
    gsay_option(394, 85, Node999, 50);
end

procedure NodeGoHome
begin
    add_timer_event(self_obj, 8, 5);
end

procedure Node999
begin
end

