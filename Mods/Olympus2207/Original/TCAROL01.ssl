variable dude_objective_reputation;
variable self_subjective_reaction;
variable z_critter_search;
variable critter_is_detected;
variable detected_critter;
variable persuade_chance;
variable steal_perk;
variable steal_gloves;
variable animation_is_called;
variable float_is_called;
variable already_talk;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node999;
procedure Node998;
procedure NodeBarter;
procedure NodeGoRepair;


procedure start
begin
    if (local_var(1) == 0) then begin
        set_local_var(3, tile_num(self_obj));
        set_local_var(1, 1);
        set_local_var(4, random(60, 80));
        set_local_var(5, random(30, 40));
        set_local_var(6, random(0, 20));
        critter_add_trait(self_obj, 1, 6, 1);
        critter_add_trait(self_obj, 1, 5, 4);
        set_local_var(7, 1);
    end
end

procedure critter_p_proc
begin
    if ((animation_is_called == 0) and (anim_busy(self_obj) == 0)) then begin
        animation_is_called := 1;
        add_timer_event(self_obj, random(29, 76), 1);
    end
    if (float_is_called == 0) then begin
        float_is_called := 1;
        add_timer_event(self_obj, random(50, 150), 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(2) == 1) or (global_var(47) <= -31)) then begin
            set_local_var(2, 0);
            attack_setup(self_obj, dude_obj);
        end
    end
end

procedure combat_p_proc
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(76, 2));
    end
    else begin
        display_msg(message_str(76, 4));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_msg(message_str(76, 1));
    end
    else begin
        display_msg(message_str(76, 3));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure push_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(anim_busy(self_obj))) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    end
    if (local_var(8) == 1) then begin
        start_gdialog(76, self_obj, -1, -1, -1);
        gsay_start;
        call Node016();
        gsay_end;
        end_dialogue;
    end
    else begin
        start_gdialog(76, self_obj, -1, -1, -1);
        gsay_start;
        if (local_var(7) == 0) then begin
            call Node001();
        end
        else begin
            call Node010();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(0, global_var(0) - 1);
        if ((47 == 50) or (47 == 59)) then begin
            set_global_var(47, global_var(47) - 3);
        end
        else begin
            set_global_var(47, global_var(47) - 6);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        if ((get_sfall_global_int(1) == 6) and (get_sfall_global_int(13) == 0)) then begin
            script_overrides;
            set_sfall_global(13, 1);
        end
        else begin
            if (has_trait(2, dude_obj, 13)) then begin
                if (global_var(81) < get_pc_stat(1)) then begin
                    if (is_success(roll_vs_skill(dude_obj, 10, 0))) then begin
                        set_global_var(98, global_var(98) + 3);
                    end
                    else begin
                        set_global_var(98, global_var(98) + 1);
                    end
                    if (global_var(98) >= (2 * get_pc_stat(1))) then begin
                        set_global_var(98, 0);
                        set_global_var(81, global_var(81) + 1);
                        critter_mod_skill(dude_obj, 10, 1);
                        display_msg(message_str(10, 410));
                    end
                end
            end
            steal_perk := 0;
            steal_gloves := 0;
            if (has_trait(0, dude_obj, 37) != 0) then begin
                steal_perk := steal_perk + 15;
            end
            if (has_trait(0, dude_obj, 33) != 0) then begin
                steal_perk := steal_perk + 30;
            end
            if ((obj_pid(critter_inven_obj(dude_obj, 1)) == 245) or (obj_pid(critter_inven_obj(dude_obj, 2)) == 245)) then begin
                steal_gloves := 10;
            end
            if (random(0, 100) <= ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25)))) then begin
                display_msg(message_str(10, random(145, 148)));
            end
            else begin
                script_overrides;
                if (random(0, 100) <= (25 - floor((((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) / 3))) then begin
                    float_msg(self_obj, message_str(10, random(206, 209)), 2);
                    set_local_var(2, 1);
                end
                else begin
                    display_msg(message_str(10, random(200, 203)));
                end
            end
        end
    end
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(10, 204) + ((has_skill(dude_obj, 10) / 2) + (((3 * get_critter_stat(dude_obj, 5)) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)) + (2 * steal_perk) + steal_gloves) / (local_var(4) / 25))) + message_str(10, 205));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 4) then begin
        move_to(self_obj, local_var(3), elevation(self_obj));
        fadeIn(1500);
        if (not(anim_busy(self_obj))) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        end
        add_timer_event(self_obj, 60, 1);
        set_local_var(8, 1);
        dialogue_system_enter;
    end
    else begin
        if (fixed_param == 3) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), 1, random(4, 5)), 0);
            fadeOut(1500);
            add_timer_event(self_obj, 15, 4);
        end
        else begin
            if ((fixed_param == 1) and not(combat_is_initialized)) then begin
                if (tile_num(self_obj) == local_var(3)) then begin
                    anim(self_obj, 1000, 5);
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    reg_anim_animate(self_obj, 11, -1);
                    reg_anim_func(3, 0);
                end
                else begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    reg_anim_obj_move_to_tile(self_obj, local_var(3), -1);
                    reg_anim_func(3, 0);
                end
                animation_is_called := 0;
            end
        end
    end
    if ((fixed_param == 2) and not(combat_is_initialized)) then begin
        float_msg(self_obj, message_str(76, random(1030, 1039)), 0);
        float_is_called := 0;
    end
end

procedure Node001
begin
    gsay_reply(76, 10);
    gsay_option(76, 11, Node999, 50);
    gsay_option(76, 12, Node999, 50);
end

procedure Node002
begin
end

procedure Node003
begin
end

procedure Node004
begin
end

procedure Node005
begin
end

procedure Node010
begin
    if (already_talk == 0) then begin
        already_talk := 1;
        gsay_reply(76, 100);
        gsay_option(76, 102, Node999, 50);
        gsay_option(76, 103, Node011, 50);
    end
    else begin
        gsay_reply(76, 101);
        gsay_option(76, 104, Node999, 50);
        gsay_option(76, 105, Node999, 50);
    end
end

procedure Node011
begin
    gsay_reply(76, 110);
    gsay_option(76, 111, Node012, 50);
    gsay_option(76, 112, Node999, 50);
    if (global_var(32) == 1) then begin
        gsay_option(76, 113, Node013, 50);
    end
end

procedure Node012
begin
    set_local_var(9, 1);
    gsay_reply(76, 120);
    gsay_option(76, 121, Node999, 50);
    gsay_option(76, 122, Node999, 50);
end

procedure Node013
begin
    if (local_var(9) == 1) then begin
        gsay_reply(76, 1302);
        gsay_option(76, 134, Node999, 50);
    end
    else begin
        gsay_reply(76, 1301);
        gsay_option(76, 131, Node999, 50);
        gsay_option(76, 132, Node014, 50);
        gsay_option(76, 133, Node015, 50);
    end
end

procedure Node014
begin
    set_local_var(9, 1);
    gsay_reply(76, 140);
    gsay_option(76, 141, Node999, 50);
    gsay_option(76, 142, Node999, 50);
end

procedure Node015
begin
    if (global_var(0) > 0) then begin
        dude_objective_reputation := (global_var(47) * 30) + global_var(0) - (20 * global_var(1));
    end
    else begin
        dude_objective_reputation := (global_var(47) * 30) + global_var(0) - (20 * global_var(1));
    end
    if ((dude_objective_reputation + local_var(6)) >= 300) then begin
        self_subjective_reaction := 1;
    end
    else begin
        if (((dude_objective_reputation + local_var(6)) >= -300) and ((dude_objective_reputation + local_var(6)) < 300)) then begin
            self_subjective_reaction := 0;
        end
        else begin
            self_subjective_reaction := -1;
        end
    end
    persuade_chance := floor(((get_critter_stat(dude_obj, 3) * 10) + has_skill(dude_obj, 14) + local_var(5)) / 5) + (10 * self_subjective_reaction);
    if (random(0, 120) <= (persuade_chance + 0)) then begin
        gsay_reply(76, 1501);
        gsay_option(76, 151, Node999, 50);
        gsay_option(76, 152, NodeGoRepair, 50);
    end
    else begin
        gsay_reply(76, 1502);
        gsay_option(76, 153, Node999, 50);
        gsay_option(76, 154, Node999, 50);
    end
end

procedure Node016
begin
    set_global_var(32, 2);
    set_global_var(8, 1);
    set_local_var(8, 0);
    gsay_reply(76, 160);
    gsay_option(76, 161, Node999, 50);
    gsay_option(76, 162, Node999, 50);
end

procedure Node017
begin
end

procedure Node018
begin
end

procedure Node019
begin
end

procedure Node999
begin
    already_talk := 0;
end

procedure Node998
begin
    already_talk := 0;
    set_local_var(2, 1);
end

procedure NodeBarter
begin
    gdialog_mod_barter(-(dude_objective_reputation + local_var(6)));
    call Node010();
end

procedure NodeGoRepair
begin
    add_timer_event(self_obj, 1, 3);
end

