diff --git a/Mods/Olympus2207/Original/SCTRFRMT.ssl b/Mods/Olympus2207/ReDefine/SCTRFRMT.ssl
index d2cd741..652ffda 100644
--- a/Mods/Olympus2207/Original/SCTRFRMT.ssl
+++ b/Mods/Olympus2207/ReDefine/SCTRFRMT.ssl
@@ -58,7 +58,7 @@ end
 
 procedure use_p_proc
 begin
-    if (global_var(32) != 2) then begin
+    if (global_var(GVAR_MAGGIE_STATUS) != 2) then begin
         call shock();
     end
 end
@@ -69,15 +69,15 @@ end
 
 procedure use_skill_on_p_proc
 begin
-    if (global_var(32) != 2) then begin
+    if (global_var(GVAR_MAGGIE_STATUS) != 2) then begin
         if (action_being_used == 13) then begin
             script_overrides;
-            if (random(0, 100) < ((((get_critter_stat(dude_obj, 5) * 3) + (get_critter_stat(dude_obj, 4) * 2) + has_skill(dude_obj, 13) + 3) / 2) + (((get_critter_stat(dude_obj, 6) - 4) * 4) - (difficulty_level * 4)))) then begin
+            if (random(0, 100) < ((((get_critter_stat(dude_obj, STAT_ag) * 3) + (dude_iq * 2) + dude_skill(SKILL_REPAIR) + 3) / 2) + (((dude_luck - 4) * 4) - (difficulty_level * 4)))) then begin
                 call sucsess();
             end
             else begin
-                critter_dmg(dude_obj, random(8, 12) - get_critter_stat(dude_obj, 6), 4);
-                display_msg(message_str(10, random(26, 29)));
+                critter_dmg(dude_obj, random(8, 12) - dude_luck, DMG_electrical);
+                display_msg(message_str(SCRIPT_STTEXT, random(26, 29)));
             end
         end
         if (action_being_used == 12) then begin
@@ -89,7 +89,7 @@ end
 
 procedure map_enter_p_proc
 begin
-    if (global_var(32) != 2) then begin
+    if (global_var(GVAR_MAGGIE_STATUS) != 2) then begin
         reg_anim_func(2, self_obj);
         reg_anim_func(1, 1);
         reg_anim_animate_forever(self_obj, 0);
@@ -100,7 +100,7 @@ end
 
 procedure map_update_p_proc
 begin
-    if (global_var(32) != 2) then begin
+    if (global_var(GVAR_MAGGIE_STATUS) != 2) then begin
         reg_anim_func(2, self_obj);
         reg_anim_func(1, 1);
         reg_anim_animate_forever(self_obj, 0);
@@ -111,9 +111,9 @@ end
 procedure timed_event_p_proc
 begin
     if (fixed_param == 1) then begin
-        if (global_var(32) != 2) then begin
-            if ((map_var(2) == 0) and (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 5)) then begin
-                animate_move_obj_to_tile(dude_obj, tile_num(dude_obj), 0);
+        if (global_var(GVAR_MAGGIE_STATUS) != 2) then begin
+            if ((map_var(2) == 0) and (tile_distance(tile_num(self_obj), dude_tile) <= 5)) then begin
+                animate_move_obj_to_tile(dude_obj, dude_tile, 0);
                 call Electrical_tip();
             end
             else begin
@@ -134,30 +134,30 @@ end
 
 procedure welcome_screen
 begin
-    gsay_reply(10, 10);
-    gsay_option(10, 11, first_step, 50);
-    gsay_option(10, random(12, 14), quitter, 50);
+    gsay_reply(SCRIPT_STTEXT, 10);
+    giq_option(1, SCRIPT_STTEXT, 11, first_step, NEUTRAL_REACTION);
+    giq_option(1, SCRIPT_STTEXT, random(12, 14), quitter, NEUTRAL_REACTION);
 end
 
 procedure first_step
 begin
     right_variant := random(1, 3);
     variant_position := random(16, 18);
-    gsay_reply(10, 15);
+    gsay_reply(SCRIPT_STTEXT, 15);
     if (right_variant == 1) then begin
-        gsay_option(10, variant_position, second_step, 50);
+        giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
     end
     else begin
-        gsay_option(10, variant_position, shock, 50);
+        giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
     end
     first_position := variant_position;
     if (variant_position == 16) then begin
         variant_position := random(17, 18);
         if (right_variant == 2) then begin
-            gsay_option(10, variant_position, second_step, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
         end
         else begin
-            gsay_option(10, variant_position, shock, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
         end
     end
     else begin
@@ -165,29 +165,29 @@ begin
             if (random(1, 2) == 1) then begin
                 variant_position := 16;
                 if (right_variant == 2) then begin
-                    gsay_option(10, variant_position, second_step, 50);
+                    giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
                 end
                 else begin
-                    gsay_option(10, variant_position, shock, 50);
+                    giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
                 end
             end
             else begin
                 variant_position := 18;
                 if (right_variant == 2) then begin
-                    gsay_option(10, variant_position, second_step, 50);
+                    giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
                 end
                 else begin
-                    gsay_option(10, variant_position, shock, 50);
+                    giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
                 end
             end
         end
         else begin
             variant_position := random(16, 17);
             if (right_variant == 2) then begin
-                gsay_option(10, variant_position, second_step, 50);
+                giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, variant_position, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
             end
         end
     end
@@ -196,141 +196,141 @@ begin
     if (third_position == 33) then begin
         variant_position := 18;
         if (right_variant == 3) then begin
-            gsay_option(10, variant_position, second_step, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
         end
         else begin
-            gsay_option(10, variant_position, shock, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
         end
     end
     if (third_position == 34) then begin
         variant_position := 17;
         if (right_variant == 3) then begin
-            gsay_option(10, variant_position, second_step, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
         end
         else begin
-            gsay_option(10, variant_position, shock, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
         end
     end
     if (third_position == 35) then begin
         variant_position := 16;
         if (right_variant == 3) then begin
-            gsay_option(10, variant_position, second_step, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, second_step, NEUTRAL_REACTION);
         end
         else begin
-            gsay_option(10, variant_position, shock, 50);
+            giq_option(1, SCRIPT_STTEXT, variant_position, shock, NEUTRAL_REACTION);
         end
     end
     third_position := variant_position;
-    gsay_option(10, random(12, 14), quitter, 50);
+    giq_option(1, SCRIPT_STTEXT, random(12, 14), quitter, NEUTRAL_REACTION);
 end
 
 procedure second_step
 begin
     second_right_variant := random(1, 2);
-    gsay_reply(10, 19);
+    gsay_reply(SCRIPT_STTEXT, 19);
     if (right_variant == 1) then begin
         if (first_position == 16) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 22, sucsess, 50);
-                gsay_option(10, 23, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 22, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 23, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 22, shock, 50);
-                gsay_option(10, 23, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 22, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 23, sucsess, NEUTRAL_REACTION);
             end
         end
         if (first_position == 17) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 24, sucsess, 50);
-                gsay_option(10, 25, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 24, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 25, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 24, shock, 50);
-                gsay_option(10, 25, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 24, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 25, sucsess, NEUTRAL_REACTION);
             end
         end
         if (first_position == 18) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 20, sucsess, 50);
-                gsay_option(10, 21, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 20, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 21, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 20, shock, 50);
-                gsay_option(10, 21, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 20, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 21, sucsess, NEUTRAL_REACTION);
             end
         end
     end
     if (right_variant == 2) then begin
         if (second_position == 16) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 22, sucsess, 50);
-                gsay_option(10, 23, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 22, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 23, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 22, shock, 50);
-                gsay_option(10, 23, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 22, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 23, sucsess, NEUTRAL_REACTION);
             end
         end
         if (second_position == 17) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 24, sucsess, 50);
-                gsay_option(10, 25, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 24, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 25, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 24, shock, 50);
-                gsay_option(10, 25, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 24, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 25, sucsess, NEUTRAL_REACTION);
             end
         end
         if (second_position == 18) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 20, sucsess, 50);
-                gsay_option(10, 21, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 20, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 21, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 20, shock, 50);
-                gsay_option(10, 21, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 20, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 21, sucsess, NEUTRAL_REACTION);
             end
         end
     end
     if (right_variant == 3) then begin
         if (third_position == 16) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 22, sucsess, 50);
-                gsay_option(10, 23, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 22, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 23, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 22, shock, 50);
-                gsay_option(10, 23, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 22, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 23, sucsess, NEUTRAL_REACTION);
             end
         end
         if (third_position == 17) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 24, sucsess, 50);
-                gsay_option(10, 25, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 24, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 25, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 24, shock, 50);
-                gsay_option(10, 25, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 24, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 25, sucsess, NEUTRAL_REACTION);
             end
         end
         if (third_position == 18) then begin
             if (second_right_variant == 1) then begin
-                gsay_option(10, 20, sucsess, 50);
-                gsay_option(10, 21, shock, 50);
+                giq_option(1, SCRIPT_STTEXT, 20, sucsess, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 21, shock, NEUTRAL_REACTION);
             end
             else begin
-                gsay_option(10, 20, shock, 50);
-                gsay_option(10, 21, sucsess, 50);
+                giq_option(1, SCRIPT_STTEXT, 20, shock, NEUTRAL_REACTION);
+                giq_option(1, SCRIPT_STTEXT, 21, sucsess, NEUTRAL_REACTION);
             end
         end
     end
-    gsay_option(10, random(12, 14), quitter, 50);
+    giq_option(1, SCRIPT_STTEXT, random(12, 14), quitter, NEUTRAL_REACTION);
 end
 
 procedure shock
 begin
-    critter_dmg(dude_obj, random(10, 20) - get_critter_stat(dude_obj, 6), 4);
-    display_msg(message_str(10, random(26, 29)));
+    critter_dmg(dude_obj, random(10, 20) - dude_luck, DMG_electrical);
+    display_msg(message_str(SCRIPT_STTEXT, random(26, 29)));
 end
 
 procedure quitter
@@ -340,10 +340,10 @@ end
 procedure sucsess
 begin
     move_to(self_obj, 1, 2);
-    create_object_sid(33555990, 14316, 0, -1);
-    set_global_var(32, 2);
+    create_object(33555990, 14316, 0);
+    set_global_var(GVAR_MAGGIE_STATUS, 2);
     obj_set_light_level(self_obj, 0, 1);
-    display_msg(message_str(10, 30));
+    display_msg(message_str(SCRIPT_STTEXT, 30));
 end
 
 procedure Electrical_tip
@@ -353,7 +353,7 @@ begin
     display("PCX/tipwndw.pcx");
     setFont(3);
     setTextColor(0.00000, 0.80000, 0.00000);
-    format(" " + message_str(91, 22), 39, 56, 529, 149, 2);
+    format(" " + message_str(SCRIPT_TIPTEXT, 22), 39, 56, 529, 149, 2);
     addButton("BTN_close", 445, 243, 135, 34);
     addButtonGfx("BTN_close", "PCX/tipcldwn.pcx", "PCX/tipclup.pcx", "PCX/tipclup.pcx");
     addButtonProc("BTN_close", vide, vide, vide, close_tip);
@@ -378,4 +378,3 @@ end
 procedure vide
 begin
 end
-
