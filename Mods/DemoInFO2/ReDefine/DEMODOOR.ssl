procedure start;
procedure description_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure drop_p_proc;
procedure is_dropping_p_proc;
procedure pickup_p_proc;
procedure timed_event_p_proc;

variable test;

import variable Phrax_Pointer;


procedure start
begin
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(102);
    end
    else begin
        if (local_var(5)) then begin
            display_mstr(103);
        end
        else begin
            display_mstr(104);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(106);
end

procedure damage_p_proc
begin
end

procedure use_p_proc
begin
    if (obj_can_see_obj(Phrax_Pointer, dude_obj)) then begin
        if (is_success(do_check(Phrax_Pointer, 1, -1))) then begin
            set_local_var(6, 1);
        end
    end
    if (not(obj_is_open(self_obj))) then begin
        if (local_var(4) == 1) then begin
            set_map_var(13, map_var(13) + local_var(6));
            display_msg("opening");
            obj_open(self_obj);
        end
        else begin
            script_overrides;
            set_map_var(13, map_var(13) + local_var(6));
            display_mstr(105);
        end
    end
    else begin
        obj_close(self_obj);
        display_msg("closing");
    end
end

procedure use_obj_on_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    set_local_var(7, 0);
    if (obj_can_see_obj(Phrax_Pointer, dude_obj)) then begin
        if (is_success(do_check(Phrax_Pointer, 1, -1))) then begin
            set_local_var(7, 1);
        end
    end
    if (action_being_used == 10) then begin
        test := roll_vs_skill(dude_obj, 10, 0);
        if (not(is_success(test))) then begin
            set_map_var(13, map_var(13) + local_var(7));
        end
        if (obj_is_open(self_obj) == 1) then begin
        end
        else begin
            display_mstr(108);
        end
        add_timer_event(self_obj, 5, 1);
    end
    else begin
        if (action_being_used == 9) then begin
            set_map_var(13, map_var(13) + local_var(7));
            if (local_var(4) == 0) then begin
                test := roll_vs_skill(dude_obj, 9, 0);
                if (is_success(test)) then begin
                    display_mstr(100);
                    set_local_var(4, 1);
                end
                else begin
                    display_mstr(101);
                end
            end
            else begin
                display_mstr(107);
            end
        end
        else begin
            script_overrides;
            set_map_var(13, map_var(13) + local_var(7));
            display_mstr(108);
        end
    end
end

procedure drop_p_proc
begin
end

procedure is_dropping_p_proc
begin
end

procedure pickup_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        set_map_var(13, 0);
    end
end
